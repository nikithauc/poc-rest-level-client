import {MicrosoftGraphAdmin, MicrosoftGraphServiceAnnouncement, MicrosoftGraphServiceHealthCollectionResponse, MicrosoftGraphServiceHealth, MicrosoftGraphServiceHealthIssueCollectionResponse, MicrosoftGraphServiceHealthIssue, ODataCountResponse, MicrosoftGraphServiceUpdateMessageCollectionResponse, MicrosoftGraphServiceUpdateMessage, MicrosoftGraphServiceAnnouncementAttachmentCollectionResponse, MicrosoftGraphServiceAnnouncementAttachment, MicrosoftGraphAgreementAcceptanceCollectionResponse, MicrosoftGraphAgreementAcceptance, MicrosoftGraphAgreementCollectionResponse, MicrosoftGraphAgreement, MicrosoftGraphAgreementFile, MicrosoftGraphAgreementFileLocalizationCollectionResponse, MicrosoftGraphAgreementFileLocalization, MicrosoftGraphAgreementFileVersionCollectionResponse, MicrosoftGraphAgreementFileVersion, MicrosoftGraphAppCatalogs, MicrosoftGraphTeamsAppCollectionResponse, MicrosoftGraphTeamsApp, MicrosoftGraphTeamsAppDefinitionCollectionResponse, MicrosoftGraphTeamsAppDefinition, MicrosoftGraphTeamworkBot, MicrosoftGraphApplicationCollectionResponse, MicrosoftGraphApplication, MicrosoftGraphDirectoryObject, MicrosoftGraphExtensionPropertyCollectionResponse, MicrosoftGraphExtensionProperty, MicrosoftGraphFederatedIdentityCredentialCollectionResponse, MicrosoftGraphFederatedIdentityCredential, MicrosoftGraphHomeRealmDiscoveryPolicyCollectionResponse, MicrosoftGraphHomeRealmDiscoveryPolicy, MicrosoftGraphPasswordCredential, MicrosoftGraphKeyCredential, MicrosoftGraphDirectoryObjectCollectionResponse, MicrosoftGraphAppRoleAssignment, MicrosoftGraphEndpoint, MicrosoftGraphServicePrincipal, MicrosoftGraphUser, StringCollectionResponse, ReferenceCreate, MicrosoftGraphAppRoleAssignmentCollectionResponse, MicrosoftGraphEndpointCollectionResponse, MicrosoftGraphServicePrincipalCollectionResponse, MicrosoftGraphUserCollectionResponse, MicrosoftGraphTokenIssuancePolicyCollectionResponse, MicrosoftGraphTokenLifetimePolicyCollectionResponse, MicrosoftGraphApplicationTemplateCollectionResponse, MicrosoftGraphApplicationTemplate, MicrosoftGraphAuditLogRoot, MicrosoftGraphDirectoryAuditCollectionResponse, MicrosoftGraphDirectoryAudit, MicrosoftGraphProvisioningObjectSummaryCollectionResponse, MicrosoftGraphProvisioningObjectSummary, MicrosoftGraphSignInCollectionResponse, MicrosoftGraphSignIn, MicrosoftGraphAuthenticationMethodConfigurationCollectionResponse, MicrosoftGraphAuthenticationMethodConfiguration, MicrosoftGraphAuthenticationMethodsPolicy, MicrosoftGraphOrganizationalBranding, MicrosoftGraphOrganizationalBrandingLocalizationCollectionResponse, MicrosoftGraphOrganizationalBrandingLocalization, MicrosoftGraphCertificateBasedAuthConfigurationCollectionResponse, MicrosoftGraphCertificateBasedAuthConfiguration, MicrosoftGraphChatCollectionResponse, MicrosoftGraphChat, MicrosoftGraphTeamsAppInstallationCollectionResponse, MicrosoftGraphTeamsAppInstallation, MicrosoftGraphConversationMemberCollectionResponse, MicrosoftGraphConversationMember, MicrosoftGraphActionResultPart, MicrosoftGraphChatMessageCollectionResponse, MicrosoftGraphChatMessage, MicrosoftGraphChatMessageHostedContentCollectionResponse, MicrosoftGraphChatMessageHostedContent, MicrosoftGraphTeamworkActivityTopic, MicrosoftGraphItemBody, MicrosoftGraphKeyValuePair, MicrosoftGraphTeamworkNotificationRecipient, MicrosoftGraphPinnedChatMessageInfoCollectionResponse, MicrosoftGraphPinnedChatMessageInfo, MicrosoftGraphTeamsTabCollectionResponse, MicrosoftGraphTeamsTab, MicrosoftGraphCloudCommunications, MicrosoftGraphCallRecordsCallRecordCollectionResponse, MicrosoftGraphCallRecordsCallRecord, MicrosoftGraphCallRecordsSessionCollectionResponse, MicrosoftGraphCallRecordsSession, MicrosoftGraphCallRecordsSegmentCollectionResponse, MicrosoftGraphCallRecordsSegment, MicrosoftGraphCallRecordsDirectRoutingLogRow, MicrosoftGraphCallRecordsPstnCallLogRow, MicrosoftGraphCallCollectionResponse, MicrosoftGraphCall, MicrosoftGraphAudioRoutingGroupCollectionResponse, MicrosoftGraphAudioRoutingGroup, MicrosoftGraphModality, MicrosoftGraphIncomingCallOptions, MicrosoftGraphPrompt, MicrosoftGraphIdentity, MicrosoftGraphRejectReason, MicrosoftGraphParticipantInfo, MicrosoftGraphCommsOperationCollectionResponse, MicrosoftGraphCommsOperation, MicrosoftGraphParticipantCollectionResponse, MicrosoftGraphParticipant, MicrosoftGraphPresence, MicrosoftGraphOnlineMeetingCollectionResponse, MicrosoftGraphOnlineMeeting, MicrosoftGraphMeetingAttendanceReportCollectionResponse, MicrosoftGraphMeetingAttendanceReport, MicrosoftGraphAttendanceRecordCollectionResponse, MicrosoftGraphAttendanceRecord, MicrosoftGraphChatInfo, MicrosoftGraphMeetingParticipants, MicrosoftGraphPresenceCollectionResponse, MicrosoftGraphCompliance, MicrosoftGraphExternalConnectorsExternalConnectionCollectionResponse, MicrosoftGraphExternalConnectorsExternalConnection, MicrosoftGraphExternalConnectorsExternalGroupCollectionResponse, MicrosoftGraphExternalConnectorsExternalGroup, MicrosoftGraphExternalConnectorsIdentityCollectionResponse, MicrosoftGraphExternalConnectorsIdentity, MicrosoftGraphExternalConnectorsExternalItemCollectionResponse, MicrosoftGraphExternalConnectorsExternalItem, MicrosoftGraphExternalConnectorsConnectionOperationCollectionResponse, MicrosoftGraphExternalConnectorsConnectionOperation, MicrosoftGraphExternalConnectorsSchema, MicrosoftGraphOrgContactCollectionResponse, MicrosoftGraphOrgContact, MicrosoftGraphDevice, MicrosoftGraphGroup, MicrosoftGraphDeviceCollectionResponse, MicrosoftGraphGroupCollectionResponse, MicrosoftGraphContractCollectionResponse, MicrosoftGraphContract, MicrosoftGraphDataPolicyOperationCollectionResponse, MicrosoftGraphDataPolicyOperation, MicrosoftGraphDeviceAppManagement, MicrosoftGraphAndroidManagedAppProtectionCollectionResponse, MicrosoftGraphAndroidManagedAppProtection, MicrosoftGraphManagedMobileAppCollectionResponse, MicrosoftGraphManagedMobileApp, MicrosoftGraphManagedAppPolicyDeploymentSummary, MicrosoftGraphDefaultManagedAppProtectionCollectionResponse, MicrosoftGraphDefaultManagedAppProtection, MicrosoftGraphIosManagedAppProtectionCollectionResponse, MicrosoftGraphIosManagedAppProtection, MicrosoftGraphManagedAppPolicyCollectionResponse, MicrosoftGraphManagedAppPolicy, MicrosoftGraphManagedAppRegistrationCollectionResponse, MicrosoftGraphManagedAppRegistration, MicrosoftGraphManagedAppOperationCollectionResponse, MicrosoftGraphManagedAppOperation, MicrosoftGraphManagedAppStatusCollectionResponse, MicrosoftGraphManagedAppStatus, MicrosoftGraphManagedEBookCollectionResponse, MicrosoftGraphManagedEBook, MicrosoftGraphManagedEBookAssignmentCollectionResponse, MicrosoftGraphManagedEBookAssignment, MicrosoftGraphDeviceInstallStateCollectionResponse, MicrosoftGraphDeviceInstallState, MicrosoftGraphEBookInstallSummary, MicrosoftGraphUserInstallStateSummaryCollectionResponse, MicrosoftGraphUserInstallStateSummary, MicrosoftGraphMdmWindowsInformationProtectionPolicyCollectionResponse, MicrosoftGraphMdmWindowsInformationProtectionPolicy, MicrosoftGraphMobileAppCategoryCollectionResponse, MicrosoftGraphMobileAppCategory, MicrosoftGraphManagedDeviceMobileAppConfigurationCollectionResponse, MicrosoftGraphManagedDeviceMobileAppConfiguration, MicrosoftGraphManagedDeviceMobileAppConfigurationAssignmentCollectionResponse, MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment, MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatusCollectionResponse, MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus, MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary, MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatusCollectionResponse, MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus, MicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary, MicrosoftGraphMobileAppCollectionResponse, MicrosoftGraphMobileApp, MicrosoftGraphMobileAppAssignmentCollectionResponse, MicrosoftGraphMobileAppAssignment, MicrosoftGraphManagedMobileLobApp, MicrosoftGraphMobileLobApp, MicrosoftGraphManagedMobileLobAppCollectionResponse, MicrosoftGraphMobileLobAppCollectionResponse, MicrosoftGraphTargetedManagedAppConfigurationCollectionResponse, MicrosoftGraphTargetedManagedAppConfiguration, MicrosoftGraphTargetedManagedAppPolicyAssignmentCollectionResponse, MicrosoftGraphTargetedManagedAppPolicyAssignment, MicrosoftGraphTargetedManagedAppGroupType, MicrosoftGraphVppTokenCollectionResponse, MicrosoftGraphVppToken, MicrosoftGraphWindowsInformationProtectionPolicyCollectionResponse, MicrosoftGraphWindowsInformationProtectionPolicy, MicrosoftGraphDeviceManagement, MicrosoftGraphApplePushNotificationCertificate, MicrosoftGraphComplianceManagementPartnerCollectionResponse, MicrosoftGraphComplianceManagementPartner, MicrosoftGraphOnPremisesConditionalAccessSettings, MicrosoftGraphDetectedAppCollectionResponse, MicrosoftGraphDetectedApp, MicrosoftGraphManagedDeviceCollectionResponse, MicrosoftGraphManagedDevice, MicrosoftGraphDeviceCategoryCollectionResponse, MicrosoftGraphDeviceCategory, MicrosoftGraphDeviceCompliancePolicyCollectionResponse, MicrosoftGraphDeviceCompliancePolicy, MicrosoftGraphDeviceCompliancePolicyAssignmentCollectionResponse, MicrosoftGraphDeviceCompliancePolicyAssignment, MicrosoftGraphSettingStateDeviceSummaryCollectionResponse, MicrosoftGraphSettingStateDeviceSummary, MicrosoftGraphDeviceComplianceDeviceStatusCollectionResponse, MicrosoftGraphDeviceComplianceDeviceStatus, MicrosoftGraphDeviceComplianceDeviceOverview, MicrosoftGraphDeviceComplianceScheduledActionForRule, MicrosoftGraphDeviceComplianceScheduledActionForRuleCollectionResponse, MicrosoftGraphDeviceComplianceActionItemCollectionResponse, MicrosoftGraphDeviceComplianceActionItem, MicrosoftGraphDeviceComplianceUserStatusCollectionResponse, MicrosoftGraphDeviceComplianceUserStatus, MicrosoftGraphDeviceComplianceUserOverview, MicrosoftGraphDeviceCompliancePolicyDeviceStateSummary, MicrosoftGraphDeviceCompliancePolicySettingStateSummaryCollectionResponse, MicrosoftGraphDeviceCompliancePolicySettingStateSummary, MicrosoftGraphDeviceComplianceSettingStateCollectionResponse, MicrosoftGraphDeviceComplianceSettingState, MicrosoftGraphDeviceConfigurationDeviceStateSummary, MicrosoftGraphDeviceConfigurationCollectionResponse, MicrosoftGraphDeviceConfiguration, MicrosoftGraphDeviceConfigurationAssignmentCollectionResponse, MicrosoftGraphDeviceConfigurationAssignment, MicrosoftGraphDeviceConfigurationDeviceStatusCollectionResponse, MicrosoftGraphDeviceConfigurationDeviceStatus, MicrosoftGraphDeviceConfigurationDeviceOverview, MicrosoftGraphDeviceConfigurationUserStatusCollectionResponse, MicrosoftGraphDeviceConfigurationUserStatus, MicrosoftGraphDeviceConfigurationUserOverview, MicrosoftGraphDeviceEnrollmentConfigurationCollectionResponse, MicrosoftGraphDeviceEnrollmentConfiguration, MicrosoftGraphEnrollmentConfigurationAssignmentCollectionResponse, MicrosoftGraphEnrollmentConfigurationAssignment, MicrosoftGraphDeviceManagementPartnerCollectionResponse, MicrosoftGraphDeviceManagementPartner, MicrosoftGraphDeviceManagementExchangeConnectorCollectionResponse, MicrosoftGraphDeviceManagementExchangeConnector, MicrosoftGraphImportedWindowsAutopilotDeviceIdentityCollectionResponse, MicrosoftGraphImportedWindowsAutopilotDeviceIdentity, MicrosoftGraphIosUpdateDeviceStatusCollectionResponse, MicrosoftGraphIosUpdateDeviceStatus, MicrosoftGraphManagedDeviceOverview, MicrosoftGraphDeviceCompliancePolicyStateCollectionResponse, MicrosoftGraphDeviceCompliancePolicyState, MicrosoftGraphDeviceConfigurationStateCollectionResponse, MicrosoftGraphDeviceConfigurationState, MicrosoftGraphUpdateWindowsDeviceAccountActionParameter, MicrosoftGraphRolePermission, MicrosoftGraphMobileThreatDefenseConnectorCollectionResponse, MicrosoftGraphMobileThreatDefenseConnector, MicrosoftGraphNotificationMessageTemplateCollectionResponse, MicrosoftGraphNotificationMessageTemplate, MicrosoftGraphLocalizedNotificationMessageCollectionResponse, MicrosoftGraphLocalizedNotificationMessage, MicrosoftGraphRemoteAssistancePartnerCollectionResponse, MicrosoftGraphRemoteAssistancePartner, MicrosoftGraphDeviceManagementReports, MicrosoftGraphDeviceManagementExportJobCollectionResponse, MicrosoftGraphDeviceManagementExportJob, MicrosoftGraphResourceOperationCollectionResponse, MicrosoftGraphResourceOperation, MicrosoftGraphDeviceAndAppManagementRoleAssignmentCollectionResponse, MicrosoftGraphDeviceAndAppManagementRoleAssignment, MicrosoftGraphRoleDefinitionCollectionResponse, MicrosoftGraphRoleDefinition, MicrosoftGraphRoleAssignmentCollectionResponse, MicrosoftGraphRoleAssignment, MicrosoftGraphSoftwareUpdateStatusSummary, MicrosoftGraphTelecomExpenseManagementPartnerCollectionResponse, MicrosoftGraphTelecomExpenseManagementPartner, MicrosoftGraphTermsAndConditionsCollectionResponse, MicrosoftGraphTermsAndConditions, MicrosoftGraphTermsAndConditionsAcceptanceStatusCollectionResponse, MicrosoftGraphTermsAndConditionsAcceptanceStatus, MicrosoftGraphTermsAndConditionsAssignmentCollectionResponse, MicrosoftGraphTermsAndConditionsAssignment, MicrosoftGraphDeviceManagementTroubleshootingEventCollectionResponse, MicrosoftGraphDeviceManagementTroubleshootingEvent, MicrosoftGraphWindowsAutopilotDeviceIdentityCollectionResponse, MicrosoftGraphWindowsAutopilotDeviceIdentity, MicrosoftGraphWindowsInformationProtectionAppLearningSummaryCollectionResponse, MicrosoftGraphWindowsInformationProtectionAppLearningSummary, MicrosoftGraphWindowsInformationProtectionNetworkLearningSummaryCollectionResponse, MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary, MicrosoftGraphExtensionCollectionResponse, MicrosoftGraphExtension, MicrosoftGraphDirectory, MicrosoftGraphAdministrativeUnitCollectionResponse, MicrosoftGraphAdministrativeUnit, MicrosoftGraphScopedRoleMembershipCollectionResponse, MicrosoftGraphScopedRoleMembership, MicrosoftGraphIdentityProviderBaseCollectionResponse, MicrosoftGraphIdentityProviderBase, MicrosoftGraphDirectoryRoleCollectionResponse, MicrosoftGraphDirectoryRole, MicrosoftGraphDirectoryRoleTemplateCollectionResponse, MicrosoftGraphDirectoryRoleTemplate, MicrosoftGraphDomainDnsRecordCollectionResponse, MicrosoftGraphDomainDnsRecord, MicrosoftGraphDomainCollectionResponse, MicrosoftGraphDomain, MicrosoftGraphInternalDomainFederationCollectionResponse, MicrosoftGraphInternalDomainFederation, MicrosoftGraphDrive, MicrosoftGraphDriveItemCollectionResponse, MicrosoftGraphDriveItem, MicrosoftGraphItemAnalytics, MicrosoftGraphListItem, MicrosoftGraphDocumentSetVersionCollectionResponse, MicrosoftGraphDocumentSetVersion, MicrosoftGraphFieldValueSet, MicrosoftGraphItemActivityStat, MicrosoftGraphListItemVersionCollectionResponse, MicrosoftGraphListItemVersion, MicrosoftGraphItemReference, MicrosoftGraphDriveItemUploadableProperties, MicrosoftGraphPermission, MicrosoftGraphPermissionCollectionResponse, MicrosoftGraphDriveRecipient, MicrosoftGraphSubscriptionCollectionResponse, MicrosoftGraphSubscription, MicrosoftGraphThumbnailSetCollectionResponse, MicrosoftGraphThumbnailSet, MicrosoftGraphDriveItemVersionCollectionResponse, MicrosoftGraphDriveItemVersion, MicrosoftGraphList, MicrosoftGraphColumnDefinitionCollectionResponse, MicrosoftGraphColumnDefinition, MicrosoftGraphContentTypeCollectionResponse, MicrosoftGraphContentType, MicrosoftGraphColumnLinkCollectionResponse, MicrosoftGraphColumnLink, MicrosoftGraphSharepointIds, MicrosoftGraphListItemCollectionResponse, MicrosoftGraphRichLongRunningOperationCollectionResponse, MicrosoftGraphRichLongRunningOperation, MicrosoftGraphDriveCollectionResponse, MicrosoftGraphEducationRoot, MicrosoftGraphEducationClassCollectionResponse, MicrosoftGraphEducationClass, MicrosoftGraphEducationCategoryCollectionResponse, MicrosoftGraphEducationCategory, MicrosoftGraphEducationAssignmentDefaults, MicrosoftGraphEducationAssignmentCollectionResponse, MicrosoftGraphEducationAssignment, MicrosoftGraphEducationAssignmentResourceCollectionResponse, MicrosoftGraphEducationAssignmentResource, MicrosoftGraphEducationRubric, ReferenceUpdate, MicrosoftGraphEducationSubmissionCollectionResponse, MicrosoftGraphEducationSubmission, MicrosoftGraphEducationOutcomeCollectionResponse, MicrosoftGraphEducationOutcome, MicrosoftGraphEducationSubmissionResourceCollectionResponse, MicrosoftGraphEducationSubmissionResource, MicrosoftGraphEducationAssignmentSettings, MicrosoftGraphEducationUserCollectionResponse, MicrosoftGraphEducationSchoolCollectionResponse, MicrosoftGraphEducationSchool, MicrosoftGraphEducationUser, MicrosoftGraphEducationRubricCollectionResponse, MicrosoftGraphExternalConnectorsExternal, MicrosoftGraphGroupLifecyclePolicyCollectionResponse, MicrosoftGraphGroupLifecyclePolicy, MicrosoftGraphCalendar, MicrosoftGraphCalendarPermissionCollectionResponse, MicrosoftGraphCalendarPermission, MicrosoftGraphEventCollectionResponse, MicrosoftGraphEvent, MicrosoftGraphAttachmentCollectionResponse, MicrosoftGraphAttachment, MicrosoftGraphAttachmentType, MicrosoftGraphTimeSlot, MicrosoftGraphRecipient, MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse, MicrosoftGraphMultiValueLegacyExtendedProperty, MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse, MicrosoftGraphSingleValueLegacyExtendedProperty, MicrosoftGraphDateTimeTimeZone, MicrosoftGraphScheduleInformation, MicrosoftGraphConversationCollectionResponse, MicrosoftGraphConversation, MicrosoftGraphConversationThreadCollectionResponse, MicrosoftGraphConversationThread, MicrosoftGraphPostCollectionResponse, MicrosoftGraphPost, MicrosoftGraphEmailAddress, MicrosoftGraphResourceSpecificPermissionGrant, MicrosoftGraphOnenote, MicrosoftGraphNotebookCollectionResponse, MicrosoftGraphNotebook, MicrosoftGraphSectionGroupCollectionResponse, MicrosoftGraphSectionGroup, MicrosoftGraphOnenoteSectionCollectionResponse, MicrosoftGraphOnenoteSection, MicrosoftGraphOnenotePageCollectionResponse, MicrosoftGraphOnenotePage, MicrosoftGraphOnenotePatchContentCommand, MicrosoftGraphRecentNotebook, MicrosoftGraphOnenoteOperationCollectionResponse, MicrosoftGraphOnenoteOperation, MicrosoftGraphOnenoteResourceCollectionResponse, MicrosoftGraphOnenoteResource, MicrosoftGraphResourceSpecificPermissionGrantCollectionResponse, MicrosoftGraphProfilePhoto, MicrosoftGraphProfilePhotoCollectionResponse, MicrosoftGraphPlannerGroup, MicrosoftGraphPlannerPlanCollectionResponse, MicrosoftGraphPlannerPlan, MicrosoftGraphPlannerBucketCollectionResponse, MicrosoftGraphPlannerBucket, MicrosoftGraphPlannerTaskCollectionResponse, MicrosoftGraphPlannerTask, MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat, MicrosoftGraphPlannerBucketTaskBoardTaskFormat, MicrosoftGraphPlannerTaskDetails, MicrosoftGraphPlannerProgressTaskBoardTaskFormat, MicrosoftGraphPlannerPlanDetails, MicrosoftGraphGroupSettingCollectionResponse, MicrosoftGraphGroupSetting, MicrosoftGraphSiteCollectionResponse, MicrosoftGraphSite, MicrosoftGraphBaseItemCollectionResponse, MicrosoftGraphBaseItem, MicrosoftGraphListCollectionResponse, MicrosoftGraphTermStoreStore, MicrosoftGraphTermStoreGroupCollectionResponse, MicrosoftGraphTermStoreGroup, MicrosoftGraphTermStoreSetCollectionResponse, MicrosoftGraphTermStoreSet, MicrosoftGraphTermStoreTermCollectionResponse, MicrosoftGraphTermStoreTerm, MicrosoftGraphTermStoreRelationCollectionResponse, MicrosoftGraphTermStoreRelation, MicrosoftGraphTermStoreStoreCollectionResponse, MicrosoftGraphTeam, MicrosoftGraphChannelCollectionResponse, MicrosoftGraphChannel, MicrosoftGraphSharedWithChannelTeamInfoCollectionResponse, MicrosoftGraphSharedWithChannelTeamInfo, MicrosoftGraphTeamsAsyncOperationCollectionResponse, MicrosoftGraphTeamsAsyncOperation, MicrosoftGraphSchedule, MicrosoftGraphOfferShiftRequestCollectionResponse, MicrosoftGraphOfferShiftRequest, MicrosoftGraphOpenShiftChangeRequestCollectionResponse, MicrosoftGraphOpenShiftChangeRequest, MicrosoftGraphOpenShiftCollectionResponse, MicrosoftGraphOpenShift, MicrosoftGraphSchedulingGroupCollectionResponse, MicrosoftGraphSchedulingGroup, MicrosoftGraphShiftCollectionResponse, MicrosoftGraphShift, MicrosoftGraphSwapShiftsChangeRequestCollectionResponse, MicrosoftGraphSwapShiftsChangeRequest, MicrosoftGraphTimeOffReasonCollectionResponse, MicrosoftGraphTimeOffReason, MicrosoftGraphTimeOffRequestCollectionResponse, MicrosoftGraphTimeOffRequest, MicrosoftGraphTimeOffCollectionResponse, MicrosoftGraphTimeOff, MicrosoftGraphTeamsTemplate, MicrosoftGraphGroupSettingTemplateCollectionResponse, MicrosoftGraphGroupSettingTemplate, MicrosoftGraphIdentityContainer, MicrosoftGraphIdentityApiConnectorCollectionResponse, MicrosoftGraphIdentityApiConnector, MicrosoftGraphB2xIdentityUserFlowCollectionResponse, MicrosoftGraphB2xIdentityUserFlow, MicrosoftGraphIdentityProviderCollectionResponse, MicrosoftGraphIdentityProvider, MicrosoftGraphUserFlowLanguageConfigurationCollectionResponse, MicrosoftGraphUserFlowLanguageConfiguration, MicrosoftGraphUserFlowLanguagePageCollectionResponse, MicrosoftGraphUserFlowLanguagePage, MicrosoftGraphIdentityUserFlowAttributeAssignmentCollectionResponse, MicrosoftGraphIdentityUserFlowAttributeAssignment, MicrosoftGraphIdentityUserFlowAttribute, MicrosoftGraphAssignmentOrder, MicrosoftGraphConditionalAccessRoot, MicrosoftGraphNamedLocationCollectionResponse, MicrosoftGraphNamedLocation, MicrosoftGraphConditionalAccessPolicyCollectionResponse, MicrosoftGraphConditionalAccessPolicy, MicrosoftGraphIdentityUserFlowAttributeCollectionResponse, MicrosoftGraphIdentityGovernance, MicrosoftGraphAccessReviewSet, MicrosoftGraphAccessReviewScheduleDefinitionCollectionResponse, MicrosoftGraphAccessReviewScheduleDefinition, MicrosoftGraphAccessReviewInstanceCollectionResponse, MicrosoftGraphAccessReviewInstance, MicrosoftGraphAccessReviewReviewerCollectionResponse, MicrosoftGraphAccessReviewReviewer, MicrosoftGraphAccessReviewInstanceDecisionItemCollectionResponse, MicrosoftGraphAccessReviewInstanceDecisionItem, MicrosoftGraphAccessReviewStageCollectionResponse, MicrosoftGraphAccessReviewStage, MicrosoftGraphAccessReviewHistoryDefinitionCollectionResponse, MicrosoftGraphAccessReviewHistoryDefinition, MicrosoftGraphAccessReviewHistoryInstanceCollectionResponse, MicrosoftGraphAccessReviewHistoryInstance, MicrosoftGraphAppConsentApprovalRoute, MicrosoftGraphAppConsentRequestCollectionResponse, MicrosoftGraphAppConsentRequest, MicrosoftGraphUserConsentRequestCollectionResponse, MicrosoftGraphUserConsentRequest, MicrosoftGraphApproval, MicrosoftGraphApprovalStageCollectionResponse, MicrosoftGraphApprovalStage, MicrosoftGraphEntitlementManagement, MicrosoftGraphApprovalCollectionResponse, MicrosoftGraphAccessPackageCollectionResponse, MicrosoftGraphAccessPackage, MicrosoftGraphAccessPackageAssignmentPolicyCollectionResponse, MicrosoftGraphAccessPackageAssignmentPolicy, MicrosoftGraphAccessPackageCatalog, MicrosoftGraphAccessPackageAssignmentRequestRequirements, MicrosoftGraphAccessPackageAssignmentRequestCollectionResponse, MicrosoftGraphAccessPackageAssignmentRequest, MicrosoftGraphAccessPackageAssignment, MicrosoftGraphAccessPackageSubject, MicrosoftGraphAccessPackageAssignmentCollectionResponse, MicrosoftGraphAccessPackageCatalogCollectionResponse, MicrosoftGraphConnectedOrganizationCollectionResponse, MicrosoftGraphConnectedOrganization, MicrosoftGraphEntitlementManagementSettings, MicrosoftGraphTermsOfUseContainer, MicrosoftGraphIdentityProtectionRoot, MicrosoftGraphRiskDetectionCollectionResponse, MicrosoftGraphRiskDetection, MicrosoftGraphRiskyUserCollectionResponse, MicrosoftGraphRiskyUser, MicrosoftGraphRiskyUserHistoryItemCollectionResponse, MicrosoftGraphRiskyUserHistoryItem, MicrosoftGraphInformationProtection, MicrosoftGraphBitlocker, MicrosoftGraphBitlockerRecoveryKeyCollectionResponse, MicrosoftGraphBitlockerRecoveryKey, MicrosoftGraphThreatAssessmentRequestCollectionResponse, MicrosoftGraphThreatAssessmentRequest, MicrosoftGraphThreatAssessmentResultCollectionResponse, MicrosoftGraphThreatAssessmentResult, MicrosoftGraphInvitationCollectionResponse, MicrosoftGraphInvitation, MicrosoftGraphUserActivityCollectionResponse, MicrosoftGraphUserActivity, MicrosoftGraphActivityHistoryItemCollectionResponse, MicrosoftGraphActivityHistoryItem, MicrosoftGraphAuthentication, MicrosoftGraphEmailAuthenticationMethodCollectionResponse, MicrosoftGraphEmailAuthenticationMethod, MicrosoftGraphFido2AuthenticationMethodCollectionResponse, MicrosoftGraphFido2AuthenticationMethod, MicrosoftGraphAuthenticationMethodCollectionResponse, MicrosoftGraphAuthenticationMethod, MicrosoftGraphMicrosoftAuthenticatorAuthenticationMethodCollectionResponse, MicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod, MicrosoftGraphLongRunningOperationCollectionResponse, MicrosoftGraphLongRunningOperation, MicrosoftGraphPasswordAuthenticationMethodCollectionResponse, MicrosoftGraphPasswordAuthenticationMethod, MicrosoftGraphPhoneAuthenticationMethodCollectionResponse, MicrosoftGraphPhoneAuthenticationMethod, MicrosoftGraphSoftwareOathAuthenticationMethodCollectionResponse, MicrosoftGraphSoftwareOathAuthenticationMethod, MicrosoftGraphTemporaryAccessPassAuthenticationMethodCollectionResponse, MicrosoftGraphTemporaryAccessPassAuthenticationMethod, MicrosoftGraphWindowsHelloForBusinessAuthenticationMethodCollectionResponse, MicrosoftGraphWindowsHelloForBusinessAuthenticationMethod, MicrosoftGraphCalendarGroupCollectionResponse, MicrosoftGraphCalendarGroup, MicrosoftGraphCalendarCollectionResponse, MicrosoftGraphContactFolderCollectionResponse, MicrosoftGraphContactFolder, MicrosoftGraphContactCollectionResponse, MicrosoftGraphContact, MicrosoftGraphInferenceClassification, MicrosoftGraphInferenceClassificationOverrideCollectionResponse, MicrosoftGraphInferenceClassificationOverride, MicrosoftGraphOfficeGraphInsights, MicrosoftGraphSharedInsightCollectionResponse, MicrosoftGraphSharedInsight, MicrosoftGraphEntity, MicrosoftGraphTrendingCollectionResponse, MicrosoftGraphTrending, MicrosoftGraphUsedInsightCollectionResponse, MicrosoftGraphUsedInsight, MicrosoftGraphTeamCollectionResponse, MicrosoftGraphLicenseDetailsCollectionResponse, MicrosoftGraphLicenseDetails, MicrosoftGraphMailFolderCollectionResponse, MicrosoftGraphMailFolder, MicrosoftGraphMessageRuleCollectionResponse, MicrosoftGraphMessageRule, MicrosoftGraphMessageCollectionResponse, MicrosoftGraphMessage, MicrosoftGraphAttendeeBase, MicrosoftGraphLocationConstraint, MicrosoftGraphTimeConstraint, MicrosoftGraphMailTipsType, MicrosoftGraphAutomaticRepliesMailTips, MicrosoftGraphMailTipsError, MicrosoftGraphRecipientScopeType, MicrosoftGraphManagedAppDiagnosticStatus, MicrosoftGraphLocation, MicrosoftGraphGenericError, MicrosoftGraphOAuth2PermissionGrantCollectionResponse, MicrosoftGraphOAuth2PermissionGrant, MicrosoftGraphOutlookUser, MicrosoftGraphOutlookCategoryCollectionResponse, MicrosoftGraphOutlookCategory, MicrosoftGraphPersonCollectionResponse, MicrosoftGraphPerson, MicrosoftGraphPlannerUser, MicrosoftGraphUserSettings, MicrosoftGraphShiftPreferences, MicrosoftGraphUserTeamwork, MicrosoftGraphAssociatedTeamInfoCollectionResponse, MicrosoftGraphAssociatedTeamInfo, MicrosoftGraphUserScopeTeamsAppInstallationCollectionResponse, MicrosoftGraphUserScopeTeamsAppInstallation, MicrosoftGraphTodo, MicrosoftGraphTodoTaskListCollectionResponse, MicrosoftGraphTodoTaskList, MicrosoftGraphTodoTaskCollectionResponse, MicrosoftGraphTodoTask, MicrosoftGraphAttachmentBaseCollectionResponse, MicrosoftGraphAttachmentBase, MicrosoftGraphAttachmentSessionCollectionResponse, MicrosoftGraphAttachmentSession, MicrosoftGraphChecklistItemCollectionResponse, MicrosoftGraphChecklistItem, MicrosoftGraphLinkedResourceCollectionResponse, MicrosoftGraphLinkedResource, MicrosoftGraphOrganizationCollectionResponse, MicrosoftGraphOrganization, MicrosoftGraphPlaceCollectionResponse, MicrosoftGraphPlace, MicrosoftGraphRoom, MicrosoftGraphRoomCollectionResponse, MicrosoftGraphPlanner, MicrosoftGraphPolicyRoot, MicrosoftGraphActivityBasedTimeoutPolicyCollectionResponse, MicrosoftGraphActivityBasedTimeoutPolicy, MicrosoftGraphAdminConsentRequestPolicy, MicrosoftGraphAuthenticationFlowsPolicy, MicrosoftGraphAuthorizationPolicy, MicrosoftGraphClaimsMappingPolicyCollectionResponse, MicrosoftGraphClaimsMappingPolicy, MicrosoftGraphCrossTenantAccessPolicy, MicrosoftGraphCrossTenantAccessPolicyConfigurationDefault, MicrosoftGraphCrossTenantAccessPolicyConfigurationPartnerCollectionResponse, MicrosoftGraphCrossTenantAccessPolicyConfigurationPartner, MicrosoftGraphFeatureRolloutPolicyCollectionResponse, MicrosoftGraphFeatureRolloutPolicy, MicrosoftGraphIdentitySecurityDefaultsEnforcementPolicy, MicrosoftGraphPermissionGrantPolicyCollectionResponse, MicrosoftGraphPermissionGrantPolicy, MicrosoftGraphPermissionGrantConditionSetCollectionResponse, MicrosoftGraphPermissionGrantConditionSet, MicrosoftGraphUnifiedRoleManagementPolicyCollectionResponse, MicrosoftGraphUnifiedRoleManagementPolicy, MicrosoftGraphUnifiedRoleManagementPolicyRuleCollectionResponse, MicrosoftGraphUnifiedRoleManagementPolicyRule, MicrosoftGraphUnifiedRoleManagementPolicyAssignmentCollectionResponse, MicrosoftGraphUnifiedRoleManagementPolicyAssignment, MicrosoftGraphTokenIssuancePolicy, MicrosoftGraphTokenLifetimePolicy, MicrosoftGraphPrint, MicrosoftGraphPrintConnectorCollectionResponse, MicrosoftGraphPrintConnector, MicrosoftGraphPrintOperationCollectionResponse, MicrosoftGraphPrintOperation, MicrosoftGraphPrinterCollectionResponse, MicrosoftGraphPrinter, MicrosoftGraphPrinterShareCollectionResponse, MicrosoftGraphPrinterShare, MicrosoftGraphPrintTaskTriggerCollectionResponse, MicrosoftGraphPrintTaskTrigger, MicrosoftGraphPrintTaskDefinition, MicrosoftGraphPrintServiceCollectionResponse, MicrosoftGraphPrintService, MicrosoftGraphPrintServiceEndpointCollectionResponse, MicrosoftGraphPrintServiceEndpoint, MicrosoftGraphPrintTaskDefinitionCollectionResponse, MicrosoftGraphPrintTaskCollectionResponse, MicrosoftGraphPrintTask, MicrosoftGraphPrivacy, MicrosoftGraphSubjectRightsRequestCollectionResponse, MicrosoftGraphSubjectRightsRequest, MicrosoftGraphAuthoredNoteCollectionResponse, MicrosoftGraphAuthoredNote, MicrosoftGraphReportRoot, MicrosoftGraphPrintUsageByPrinterCollectionResponse, MicrosoftGraphPrintUsageByPrinter, MicrosoftGraphPrintUsageByUserCollectionResponse, MicrosoftGraphPrintUsageByUser, MicrosoftGraphArchivedPrintJob, MicrosoftGraphReport, MicrosoftGraphRoleManagement, MicrosoftGraphRbacApplication, MicrosoftGraphUnifiedRoleAssignmentCollectionResponse, MicrosoftGraphUnifiedRoleAssignment, MicrosoftGraphAppScope, MicrosoftGraphUnifiedRoleDefinition, MicrosoftGraphUnifiedRoleAssignmentScheduleInstanceCollectionResponse, MicrosoftGraphUnifiedRoleAssignmentScheduleInstance, MicrosoftGraphUnifiedRoleEligibilityScheduleInstance, MicrosoftGraphUnifiedRoleAssignmentScheduleRequestCollectionResponse, MicrosoftGraphUnifiedRoleAssignmentScheduleRequest, MicrosoftGraphUnifiedRoleEligibilitySchedule, MicrosoftGraphUnifiedRoleAssignmentSchedule, MicrosoftGraphUnifiedRoleAssignmentScheduleCollectionResponse, MicrosoftGraphUnifiedRoleDefinitionCollectionResponse, MicrosoftGraphUnifiedRoleEligibilityScheduleInstanceCollectionResponse, MicrosoftGraphUnifiedRoleEligibilityScheduleRequestCollectionResponse, MicrosoftGraphUnifiedRoleEligibilityScheduleRequest, MicrosoftGraphUnifiedRoleEligibilityScheduleCollectionResponse, MicrosoftGraphSchemaExtensionCollectionResponse, MicrosoftGraphSchemaExtension, MicrosoftGraphSearchEntity, MicrosoftGraphAggregationOption, MicrosoftGraphEntityType, MicrosoftGraphSearchAlterationOptions, MicrosoftGraphResultTemplateOption, MicrosoftGraphSortProperty, MicrosoftGraphSearchHitsContainer, MicrosoftGraphAlterationResponse, MicrosoftGraphResultTemplateDictionary, MicrosoftGraphSecurity, MicrosoftGraphAlertCollectionResponse, MicrosoftGraphAlert, MicrosoftGraphSecurityCasesRoot, MicrosoftGraphSecurityEdiscoveryCaseCollectionResponse, MicrosoftGraphSecurityEdiscoveryCase, MicrosoftGraphSecurityEdiscoveryCustodianCollectionResponse, MicrosoftGraphSecurityEdiscoveryCustodian, MicrosoftGraphSecurityEdiscoveryIndexOperation, MicrosoftGraphSecuritySiteSourceCollectionResponse, MicrosoftGraphSecuritySiteSource, MicrosoftGraphSecurityUnifiedGroupSourceCollectionResponse, MicrosoftGraphSecurityUnifiedGroupSource, MicrosoftGraphSecurityUserSourceCollectionResponse, MicrosoftGraphSecurityUserSource, MicrosoftGraphSecurityEdiscoveryNoncustodialDataSourceCollectionResponse, MicrosoftGraphSecurityEdiscoveryNoncustodialDataSource, MicrosoftGraphSecurityDataSource, MicrosoftGraphSecurityCaseOperationCollectionResponse, MicrosoftGraphSecurityCaseOperation, MicrosoftGraphSecurityEdiscoveryReviewSetCollectionResponse, MicrosoftGraphSecurityEdiscoveryReviewSet, MicrosoftGraphSecurityEdiscoverySearch, MicrosoftGraphSecurityAdditionalDataOptions, MicrosoftGraphSecurityEdiscoveryReviewSetQueryCollectionResponse, MicrosoftGraphSecurityEdiscoveryReviewSetQuery, MicrosoftGraphSecurityEdiscoveryReviewTag, MicrosoftGraphSecurityEdiscoverySearchCollectionResponse, MicrosoftGraphSecurityDataSourceCollectionResponse, MicrosoftGraphSecurityEdiscoveryAddToReviewSetOperation, MicrosoftGraphSecurityEdiscoveryEstimateOperation, MicrosoftGraphSecurityEdiscoveryCaseSettings, MicrosoftGraphSecurityEdiscoveryReviewTagCollectionResponse, MicrosoftGraphSecureScoreControlProfileCollectionResponse, MicrosoftGraphSecureScoreControlProfile, MicrosoftGraphSecureScoreCollectionResponse, MicrosoftGraphSecureScore, MicrosoftGraphDelegatedPermissionClassificationCollectionResponse, MicrosoftGraphDelegatedPermissionClassification, MicrosoftGraphSelfSignedCertificate, MicrosoftGraphSharedDriveItemCollectionResponse, MicrosoftGraphSharedDriveItem, MicrosoftGraphSolutionsRoot, MicrosoftGraphBookingBusinessCollectionResponse, MicrosoftGraphBookingBusiness, MicrosoftGraphBookingAppointmentCollectionResponse, MicrosoftGraphBookingAppointment, MicrosoftGraphBookingCustomerBaseCollectionResponse, MicrosoftGraphBookingCustomerBase, MicrosoftGraphBookingCustomQuestionCollectionResponse, MicrosoftGraphBookingCustomQuestion, MicrosoftGraphStaffAvailabilityItem, MicrosoftGraphBookingServiceCollectionResponse, MicrosoftGraphBookingService, MicrosoftGraphBookingStaffMemberBaseCollectionResponse, MicrosoftGraphBookingStaffMemberBase, MicrosoftGraphBookingCurrencyCollectionResponse, MicrosoftGraphBookingCurrency, MicrosoftGraphSubscribedSkuCollectionResponse, MicrosoftGraphSubscribedSku, MicrosoftGraphTeamsTemplateCollectionResponse, MicrosoftGraphTeamwork, MicrosoftGraphWorkforceIntegrationCollectionResponse, MicrosoftGraphWorkforceIntegration} from "./models"
export interface operation1{
   get():MicrosoftGraphAdmin
   patch(requestBody:MicrosoftGraphAdmin):"Success"
}
export interface operation2{
   get():MicrosoftGraphServiceAnnouncement
   patch(requestBody:MicrosoftGraphServiceAnnouncement):"Success"
   delete():"Success"
}
export interface operation3{
   get():MicrosoftGraphServiceHealthCollectionResponse
   post(requestBody:MicrosoftGraphServiceHealth):MicrosoftGraphServiceHealth
}
export interface operation4{
   get():MicrosoftGraphServiceHealth
   patch(requestBody:MicrosoftGraphServiceHealth):"Success"
   delete():"Success"
}
export interface operation5{
   get():MicrosoftGraphServiceHealthIssueCollectionResponse
   post(requestBody:MicrosoftGraphServiceHealthIssue):MicrosoftGraphServiceHealthIssue
}
export interface operation6{
   get():MicrosoftGraphServiceHealthIssue
   patch(requestBody:MicrosoftGraphServiceHealthIssue):"Success"
   delete():"Success"
}
export interface operation7{
   get():{value?: string,}
}
export interface operation8{
   get():ODataCountResponse
}
export interface operation9{
   get():ODataCountResponse
}
export interface operation10{
   get():MicrosoftGraphServiceHealthIssueCollectionResponse
   post(requestBody:MicrosoftGraphServiceHealthIssue):MicrosoftGraphServiceHealthIssue
}
export interface operation11{
   get():MicrosoftGraphServiceHealthIssue
   patch(requestBody:MicrosoftGraphServiceHealthIssue):"Success"
   delete():"Success"
}
export interface operation12{
   get():{value?: string,}
}
export interface operation13{
   get():ODataCountResponse
}
export interface operation14{
   get():MicrosoftGraphServiceUpdateMessageCollectionResponse
   post(requestBody:MicrosoftGraphServiceUpdateMessage):MicrosoftGraphServiceUpdateMessage
}
export interface operation15{
   get():MicrosoftGraphServiceUpdateMessage
   patch(requestBody:MicrosoftGraphServiceUpdateMessage):"Success"
   delete():"Success"
}
export interface operation16{
   get():MicrosoftGraphServiceAnnouncementAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphServiceAnnouncementAttachment):MicrosoftGraphServiceAnnouncementAttachment
}
export interface operation17{
   get():MicrosoftGraphServiceAnnouncementAttachment
   patch(requestBody:MicrosoftGraphServiceAnnouncementAttachment):"Success"
   delete():"Success"
}
export interface operation18{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation19{
   get():ODataCountResponse
}
export interface operation20{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation21{
   get():ODataCountResponse
}
export interface operation22{
   post(requestBody:{messageIds?: string[],}):{value?: boolean,}
}
export interface operation23{
   post(requestBody:{messageIds?: string[],}):{value?: boolean,}
}
export interface operation24{
   post(requestBody:{messageIds?: string[],}):{value?: boolean,}
}
export interface operation25{
   post(requestBody:{messageIds?: string[],}):{value?: boolean,}
}
export interface operation26{
   post(requestBody:{messageIds?: string[],}):{value?: boolean,}
}
export interface operation27{
   post(requestBody:{messageIds?: string[],}):{value?: boolean,}
}
export interface operation28{
   get():MicrosoftGraphAgreementAcceptanceCollectionResponse
   post(requestBody:MicrosoftGraphAgreementAcceptance):MicrosoftGraphAgreementAcceptance
}
export interface operation29{
   get():MicrosoftGraphAgreementAcceptance
   patch(requestBody:MicrosoftGraphAgreementAcceptance):"Success"
   delete():"Success"
}
export interface operation30{
   get():MicrosoftGraphAgreementCollectionResponse
   post(requestBody:MicrosoftGraphAgreement):MicrosoftGraphAgreement
}
export interface operation31{
   get():MicrosoftGraphAgreement
   patch(requestBody:MicrosoftGraphAgreement):"Success"
   delete():"Success"
}
export interface operation32{
   get():MicrosoftGraphAgreementAcceptanceCollectionResponse
   post(requestBody:MicrosoftGraphAgreementAcceptance):MicrosoftGraphAgreementAcceptance
}
export interface operation33{
   get():MicrosoftGraphAgreementAcceptance
   patch(requestBody:MicrosoftGraphAgreementAcceptance):"Success"
   delete():"Success"
}
export interface operation34{
   get():ODataCountResponse
}
export interface operation35{
   get():MicrosoftGraphAgreementFile
   patch(requestBody:MicrosoftGraphAgreementFile):"Success"
   delete():"Success"
}
export interface operation36{
   get():MicrosoftGraphAgreementFileLocalizationCollectionResponse
   post(requestBody:MicrosoftGraphAgreementFileLocalization):MicrosoftGraphAgreementFileLocalization
}
export interface operation37{
   get():MicrosoftGraphAgreementFileLocalization
   patch(requestBody:MicrosoftGraphAgreementFileLocalization):"Success"
   delete():"Success"
}
export interface operation38{
   get():MicrosoftGraphAgreementFileVersionCollectionResponse
   post(requestBody:MicrosoftGraphAgreementFileVersion):MicrosoftGraphAgreementFileVersion
}
export interface operation39{
   get():MicrosoftGraphAgreementFileVersion
   patch(requestBody:MicrosoftGraphAgreementFileVersion):"Success"
   delete():"Success"
}
export interface operation40{
   get():ODataCountResponse
}
export interface operation41{
   get():ODataCountResponse
}
export interface operation42{
   get():MicrosoftGraphAgreementFileLocalizationCollectionResponse
   post(requestBody:MicrosoftGraphAgreementFileLocalization):MicrosoftGraphAgreementFileLocalization
}
export interface operation43{
   get():MicrosoftGraphAgreementFileLocalization
   patch(requestBody:MicrosoftGraphAgreementFileLocalization):"Success"
   delete():"Success"
}
export interface operation44{
   get():MicrosoftGraphAgreementFileVersionCollectionResponse
   post(requestBody:MicrosoftGraphAgreementFileVersion):MicrosoftGraphAgreementFileVersion
}
export interface operation45{
   get():MicrosoftGraphAgreementFileVersion
   patch(requestBody:MicrosoftGraphAgreementFileVersion):"Success"
   delete():"Success"
}
export interface operation46{
   get():ODataCountResponse
}
export interface operation47{
   get():ODataCountResponse
}
export interface operation48{
   get():MicrosoftGraphAppCatalogs
   patch(requestBody:MicrosoftGraphAppCatalogs):"Success"
}
export interface operation49{
   get():MicrosoftGraphTeamsAppCollectionResponse
   post(requestBody:MicrosoftGraphTeamsApp):MicrosoftGraphTeamsApp
}
export interface operation50{
   get():MicrosoftGraphTeamsApp
   patch(requestBody:MicrosoftGraphTeamsApp):"Success"
   delete():"Success"
}
export interface operation51{
   get():MicrosoftGraphTeamsAppDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphTeamsAppDefinition):MicrosoftGraphTeamsAppDefinition
}
export interface operation52{
   get():MicrosoftGraphTeamsAppDefinition
   patch(requestBody:MicrosoftGraphTeamsAppDefinition):"Success"
   delete():"Success"
}
export interface operation53{
   get():MicrosoftGraphTeamworkBot
   patch(requestBody:MicrosoftGraphTeamworkBot):"Success"
   delete():"Success"
}
export interface operation54{
   get():ODataCountResponse
}
export interface operation55{
   get():ODataCountResponse
}
export interface operation56{
   get():MicrosoftGraphApplicationCollectionResponse
   post(requestBody:MicrosoftGraphApplication):MicrosoftGraphApplication
}
export interface operation57{
   get():MicrosoftGraphApplication
   patch(requestBody:MicrosoftGraphApplication):"Success"
   delete():"Success"
}
export interface operation58{
   get():MicrosoftGraphDirectoryObject
}
export interface operation59{
   get():MicrosoftGraphExtensionPropertyCollectionResponse
   post(requestBody:MicrosoftGraphExtensionProperty):MicrosoftGraphExtensionProperty
}
export interface operation60{
   get():MicrosoftGraphExtensionProperty
   patch(requestBody:MicrosoftGraphExtensionProperty):"Success"
   delete():"Success"
}
export interface operation61{
   get():ODataCountResponse
}
export interface operation62{
   get():MicrosoftGraphFederatedIdentityCredentialCollectionResponse
   post(requestBody:MicrosoftGraphFederatedIdentityCredential):MicrosoftGraphFederatedIdentityCredential
}
export interface operation63{
   get():MicrosoftGraphFederatedIdentityCredential
   patch(requestBody:MicrosoftGraphFederatedIdentityCredential):"Success"
   delete():"Success"
}
export interface operation64{
   get():ODataCountResponse
}
export interface operation65{
   get():MicrosoftGraphHomeRealmDiscoveryPolicyCollectionResponse
}
export interface operation66{
   get():MicrosoftGraphHomeRealmDiscoveryPolicy
}
export interface operation67{
   get():ODataCountResponse
}
export interface operation68{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation69{
   post(requestBody:{keyCredential?: {customKeyIdentifier?: string,displayName?: string,endDateTime?: string,key?: string,keyId?: string,startDateTime?: string,type?: string,usage?: string,"@odata.type"?: string,},passwordCredential?: MicrosoftGraphPasswordCredential,proof?: string,}):MicrosoftGraphKeyCredential
}
export interface operation70{
   post(requestBody:{passwordCredential?: MicrosoftGraphPasswordCredential,}):MicrosoftGraphPasswordCredential
}
export interface operation71{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation72{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation73{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation74{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation75{
   post(requestBody:{keyId?: string,proof?: string,}):"Success"
}
export interface operation76{
   post(requestBody:{keyId?: string,}):"Success"
}
export interface operation77{
   post():{}
}
export interface operation78{
   post(requestBody:{verifiedPublisherId?: string,}):"Success"
}
export interface operation79{
   post():"Success"
}
export interface operation80{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation81{
   delete():"Success"
}
export interface operation82{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation83{
   get():MicrosoftGraphEndpoint
}
export interface operation84{
   get():MicrosoftGraphServicePrincipal
}
export interface operation85{
   get():MicrosoftGraphUser
}
export interface operation86{
   get():ODataCountResponse
}
export interface operation87{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation88{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation89{
   get():ODataCountResponse
}
export interface operation90{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation91{
   get():ODataCountResponse
}
export interface operation92{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation93{
   get():ODataCountResponse
}
export interface operation94{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation95{
   get():ODataCountResponse
}
export interface operation96{
   get():MicrosoftGraphTokenIssuancePolicyCollectionResponse
}
export interface operation97{
   delete():"Success"
}
export interface operation98{
   get():ODataCountResponse
}
export interface operation99{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation100{
   get():MicrosoftGraphTokenLifetimePolicyCollectionResponse
}
export interface operation101{
   delete():"Success"
}
export interface operation102{
   get():ODataCountResponse
}
export interface operation103{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation104{
   get():ODataCountResponse
}
export interface operation105{
   get():{value?: MicrosoftGraphApplication[],}
}
export interface operation106{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation107{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation108{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation109{
   get():MicrosoftGraphApplicationTemplateCollectionResponse
   post(requestBody:MicrosoftGraphApplicationTemplate):MicrosoftGraphApplicationTemplate
}
export interface operation110{
   get():MicrosoftGraphApplicationTemplate
   patch(requestBody:MicrosoftGraphApplicationTemplate):"Success"
   delete():"Success"
}
export interface operation111{
   post(requestBody:{displayName?: string,}):{}
}
export interface operation112{
   get():ODataCountResponse
}
export interface operation113{
   get():MicrosoftGraphAuditLogRoot
   patch(requestBody:MicrosoftGraphAuditLogRoot):"Success"
}
export interface operation114{
   get():MicrosoftGraphDirectoryAuditCollectionResponse
   post(requestBody:MicrosoftGraphDirectoryAudit):MicrosoftGraphDirectoryAudit
}
export interface operation115{
   get():MicrosoftGraphDirectoryAudit
   patch(requestBody:MicrosoftGraphDirectoryAudit):"Success"
   delete():"Success"
}
export interface operation116{
   get():ODataCountResponse
}
export interface operation117{
   get():MicrosoftGraphProvisioningObjectSummaryCollectionResponse
   post(requestBody:MicrosoftGraphProvisioningObjectSummary):MicrosoftGraphProvisioningObjectSummary
}
export interface operation118{
   get():MicrosoftGraphProvisioningObjectSummary
   patch(requestBody:MicrosoftGraphProvisioningObjectSummary):"Success"
   delete():"Success"
}
export interface operation119{
   get():ODataCountResponse
}
export interface operation120{
   get():MicrosoftGraphSignInCollectionResponse
   post(requestBody:MicrosoftGraphSignIn):MicrosoftGraphSignIn
}
export interface operation121{
   get():MicrosoftGraphSignIn
   patch(requestBody:MicrosoftGraphSignIn):"Success"
   delete():"Success"
}
export interface operation122{
   get():ODataCountResponse
}
export interface operation123{
   get():MicrosoftGraphAuthenticationMethodConfigurationCollectionResponse
   post(requestBody:MicrosoftGraphAuthenticationMethodConfiguration):MicrosoftGraphAuthenticationMethodConfiguration
}
export interface operation124{
   get():MicrosoftGraphAuthenticationMethodConfiguration
   patch(requestBody:MicrosoftGraphAuthenticationMethodConfiguration):"Success"
   delete():"Success"
}
export interface operation125{
   get():ODataCountResponse
}
export interface operation126{
   get():MicrosoftGraphAuthenticationMethodsPolicy
   patch(requestBody:MicrosoftGraphAuthenticationMethodsPolicy):"Success"
}
export interface operation127{
   get():MicrosoftGraphAuthenticationMethodConfigurationCollectionResponse
   post(requestBody:MicrosoftGraphAuthenticationMethodConfiguration):MicrosoftGraphAuthenticationMethodConfiguration
}
export interface operation128{
   get():MicrosoftGraphAuthenticationMethodConfiguration
   patch(requestBody:MicrosoftGraphAuthenticationMethodConfiguration):"Success"
   delete():"Success"
}
export interface operation129{
   get():ODataCountResponse
}
export interface operation130{
   get():MicrosoftGraphOrganizationalBranding
   patch(requestBody:MicrosoftGraphOrganizationalBranding):"Success"
}
export interface operation131{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation132{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation133{
   get():MicrosoftGraphOrganizationalBrandingLocalizationCollectionResponse
   post(requestBody:MicrosoftGraphOrganizationalBrandingLocalization):MicrosoftGraphOrganizationalBrandingLocalization
}
export interface operation134{
   get():MicrosoftGraphOrganizationalBrandingLocalization
   patch(requestBody:MicrosoftGraphOrganizationalBrandingLocalization):"Success"
   delete():"Success"
}
export interface operation135{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation136{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation137{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation138{
   get():ODataCountResponse
}
export interface operation139{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation140{
   get():MicrosoftGraphCertificateBasedAuthConfigurationCollectionResponse
   post(requestBody:MicrosoftGraphCertificateBasedAuthConfiguration):MicrosoftGraphCertificateBasedAuthConfiguration
}
export interface operation141{
   get():MicrosoftGraphCertificateBasedAuthConfiguration
   patch(requestBody:MicrosoftGraphCertificateBasedAuthConfiguration):"Success"
   delete():"Success"
}
export interface operation142{
   get():ODataCountResponse
}
export interface operation143{
   get():MicrosoftGraphChatCollectionResponse
   post(requestBody:MicrosoftGraphChat):MicrosoftGraphChat
}
export interface operation144{
   get():MicrosoftGraphChat
   patch(requestBody:MicrosoftGraphChat):"Success"
   delete():"Success"
}
export interface operation145{
   get():MicrosoftGraphTeamsAppInstallationCollectionResponse
   post(requestBody:MicrosoftGraphTeamsAppInstallation):MicrosoftGraphTeamsAppInstallation
}
export interface operation146{
   get():MicrosoftGraphTeamsAppInstallation
   patch(requestBody:MicrosoftGraphTeamsAppInstallation):"Success"
   delete():"Success"
}
export interface operation147{
   post():"Success"
}
export interface operation148{
   get():MicrosoftGraphTeamsApp
}
export interface operation149{
   get():MicrosoftGraphTeamsAppDefinition
}
export interface operation150{
   get():ODataCountResponse
}
export interface operation151{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation152{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation153{
   get():ODataCountResponse
}
export interface operation154{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation155{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation156{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation157{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation158{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation159{
   get():ODataCountResponse
}
export interface operation160{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation161{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation162{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation163{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation164{
   get():ODataCountResponse
}
export interface operation165{
   get():ODataCountResponse
}
export interface operation166{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation167{
   get():ODataCountResponse
}
export interface operation168{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation169{
   post(requestBody:{topic?: MicrosoftGraphTeamworkActivityTopic,activityType?: string,chainId?: number,previewText?: MicrosoftGraphItemBody,templateParameters?: MicrosoftGraphKeyValuePair[],recipient?: MicrosoftGraphTeamworkNotificationRecipient,}):"Success"
}
export interface operation170{
   get():MicrosoftGraphPinnedChatMessageInfoCollectionResponse
   post(requestBody:MicrosoftGraphPinnedChatMessageInfo):MicrosoftGraphPinnedChatMessageInfo
}
export interface operation171{
   get():MicrosoftGraphPinnedChatMessageInfo
   patch(requestBody:MicrosoftGraphPinnedChatMessageInfo):"Success"
   delete():"Success"
}
export interface operation172{
   get():MicrosoftGraphChatMessage
}
export interface operation173{
   get():ODataCountResponse
}
export interface operation174{
   get():MicrosoftGraphTeamsTabCollectionResponse
   post(requestBody:MicrosoftGraphTeamsTab):MicrosoftGraphTeamsTab
}
export interface operation175{
   get():MicrosoftGraphTeamsTab
   patch(requestBody:MicrosoftGraphTeamsTab):"Success"
   delete():"Success"
}
export interface operation176{
   get():MicrosoftGraphTeamsApp
}
export interface operation177{
   get():ODataCountResponse
}
export interface operation178{
   get():ODataCountResponse
}
export interface operation179{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation180{
   get():MicrosoftGraphCloudCommunications
   patch(requestBody:MicrosoftGraphCloudCommunications):"Success"
}
export interface operation181{
   get():MicrosoftGraphCallRecordsCallRecordCollectionResponse
   post(requestBody:MicrosoftGraphCallRecordsCallRecord):MicrosoftGraphCallRecordsCallRecord
}
export interface operation182{
   get():MicrosoftGraphCallRecordsCallRecord
   patch(requestBody:MicrosoftGraphCallRecordsCallRecord):"Success"
   delete():"Success"
}
export interface operation183{
   get():MicrosoftGraphCallRecordsSessionCollectionResponse
   post(requestBody:MicrosoftGraphCallRecordsSession):MicrosoftGraphCallRecordsSession
}
export interface operation184{
   get():MicrosoftGraphCallRecordsSession
   patch(requestBody:MicrosoftGraphCallRecordsSession):"Success"
   delete():"Success"
}
export interface operation185{
   get():MicrosoftGraphCallRecordsSegmentCollectionResponse
   post(requestBody:MicrosoftGraphCallRecordsSegment):MicrosoftGraphCallRecordsSegment
}
export interface operation186{
   get():MicrosoftGraphCallRecordsSegment
   patch(requestBody:MicrosoftGraphCallRecordsSegment):"Success"
   delete():"Success"
}
export interface operation187{
   get():ODataCountResponse
}
export interface operation188{
   get():ODataCountResponse
}
export interface operation189{
   get():ODataCountResponse
}
export interface operation190{
   get():{value?: MicrosoftGraphCallRecordsDirectRoutingLogRow[],}
}
export interface operation191{
   get():{value?: MicrosoftGraphCallRecordsPstnCallLogRow[],}
}
export interface operation192{
   get():MicrosoftGraphCallCollectionResponse
   post(requestBody:MicrosoftGraphCall):MicrosoftGraphCall
}
export interface operation193{
   get():MicrosoftGraphCall
   patch(requestBody:MicrosoftGraphCall):"Success"
   delete():"Success"
}
export interface operation194{
   get():MicrosoftGraphAudioRoutingGroupCollectionResponse
   post(requestBody:MicrosoftGraphAudioRoutingGroup):MicrosoftGraphAudioRoutingGroup
}
export interface operation195{
   get():MicrosoftGraphAudioRoutingGroup
   patch(requestBody:MicrosoftGraphAudioRoutingGroup):"Success"
   delete():"Success"
}
export interface operation196{
   get():ODataCountResponse
}
export interface operation197{
   post(requestBody:{callbackUri?: string,mediaConfig?: {"@odata.type"?: string,},acceptedModalities?: MicrosoftGraphModality[],participantCapacity?: number,callOptions?: MicrosoftGraphIncomingCallOptions,}):"Success"
}
export interface operation198{
   post(requestBody:{clientContext?: string,}):{}
}
export interface operation199{
   post(requestBody:{role?: string,}):"Success"
}
export interface operation200{
   post():"Success"
}
export interface operation201{
   post(requestBody:{clientContext?: string,}):{}
}
export interface operation202{
   post(requestBody:{prompts?: {"@odata.type"?: string,},clientContext?: string,}):{}
}
export interface operation203{
   post(requestBody:{prompts?: MicrosoftGraphPrompt[],bargeInAllowed?: boolean,initialSilenceTimeoutInSeconds?: number,maxSilenceTimeoutInSeconds?: number,maxRecordDurationInSeconds?: number,playBeep?: boolean,stopTones?: string[],clientContext?: string,}):{}
}
export interface operation204{
   post(requestBody:{targets?: {hidden?: boolean,identity?: {application?: MicrosoftGraphIdentity,device?: MicrosoftGraphIdentity,user?: MicrosoftGraphIdentity,"@odata.type"?: string,},participantId?: string,removeFromDefaultAudioRoutingGroup?: boolean,replacesCallId?: string,"@odata.type"?: string,},timeout?: number,callbackUri?: string,}):"Success"
}
export interface operation205{
   post(requestBody:{reason?: MicrosoftGraphRejectReason,callbackUri?: string,}):"Success"
}
export interface operation206{
   post(requestBody:{clientContext?: string,}):{}
}
export interface operation207{
   post(requestBody:{transferTarget?: {hidden?: boolean,identity?: {application?: MicrosoftGraphIdentity,device?: MicrosoftGraphIdentity,user?: MicrosoftGraphIdentity,"@odata.type"?: string,},participantId?: string,removeFromDefaultAudioRoutingGroup?: boolean,replacesCallId?: string,"@odata.type"?: string,},transferee?: MicrosoftGraphParticipantInfo,}):"Success"
}
export interface operation208{
   post(requestBody:{clientContext?: string,}):{}
}
export interface operation209{
   post(requestBody:{status?: string,clientContext?: string,}):{}
}
export interface operation210{
   get():MicrosoftGraphCommsOperationCollectionResponse
   post(requestBody:MicrosoftGraphCommsOperation):MicrosoftGraphCommsOperation
}
export interface operation211{
   get():MicrosoftGraphCommsOperation
   patch(requestBody:MicrosoftGraphCommsOperation):"Success"
   delete():"Success"
}
export interface operation212{
   get():ODataCountResponse
}
export interface operation213{
   get():MicrosoftGraphParticipantCollectionResponse
   post(requestBody:MicrosoftGraphParticipant):MicrosoftGraphParticipant
}
export interface operation214{
   get():MicrosoftGraphParticipant
   patch(requestBody:MicrosoftGraphParticipant):"Success"
   delete():"Success"
}
export interface operation215{
   post(requestBody:{clientContext?: string,}):{}
}
export interface operation216{
   post(requestBody:{customPrompt?: MicrosoftGraphPrompt,clientContext?: string,}):{}
}
export interface operation217{
   post(requestBody:{clientContext?: string,}):{}
}
export interface operation218{
   get():ODataCountResponse
}
export interface operation219{
   post(requestBody:{participants?: {hidden?: boolean,identity?: {application?: MicrosoftGraphIdentity,device?: MicrosoftGraphIdentity,user?: MicrosoftGraphIdentity,"@odata.type"?: string,},participantId?: string,removeFromDefaultAudioRoutingGroup?: boolean,replacesCallId?: string,"@odata.type"?: string,},clientContext?: string,}):{}
}
export interface operation220{
   get():ODataCountResponse
}
export interface operation221{
   post(requestBody:{quality?: {callChainId?: string,cloudServiceDeploymentEnvironment?: string,cloudServiceDeploymentId?: string,cloudServiceInstanceName?: string,cloudServiceName?: string,deviceDescription?: string,deviceName?: string,mediaLegId?: string,mediaQualityList?: {averageInboundJitter?: string,averageInboundPacketLossRateInPercentage?: number | string,averageInboundRoundTripDelay?: string,averageOutboundJitter?: string,averageOutboundPacketLossRateInPercentage?: number | string,averageOutboundRoundTripDelay?: string,channelIndex?: number,inboundPackets?: number,localIPAddress?: string,localPort?: number,maximumInboundJitter?: string,maximumInboundPacketLossRateInPercentage?: number | string,maximumInboundRoundTripDelay?: string,maximumOutboundJitter?: string,maximumOutboundPacketLossRateInPercentage?: number | string,maximumOutboundRoundTripDelay?: string,mediaDuration?: string,networkLinkSpeedInBytes?: number,outboundPackets?: number,remoteIPAddress?: string,remotePort?: number,"@odata.type"?: string,},participantId?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation222{
   post(requestBody:{ids?: string[],}):{value?: MicrosoftGraphPresence[],}
}
export interface operation223{
   get():MicrosoftGraphOnlineMeetingCollectionResponse
   post(requestBody:MicrosoftGraphOnlineMeeting):MicrosoftGraphOnlineMeeting
}
export interface operation224{
   get():MicrosoftGraphOnlineMeeting
   patch(requestBody:MicrosoftGraphOnlineMeeting):"Success"
   delete():"Success"
}
export interface operation225{
   get():MicrosoftGraphMeetingAttendanceReportCollectionResponse
   post(requestBody:MicrosoftGraphMeetingAttendanceReport):MicrosoftGraphMeetingAttendanceReport
}
export interface operation226{
   get():MicrosoftGraphMeetingAttendanceReport
   patch(requestBody:MicrosoftGraphMeetingAttendanceReport):"Success"
   delete():"Success"
}
export interface operation227{
   get():MicrosoftGraphAttendanceRecordCollectionResponse
   post(requestBody:MicrosoftGraphAttendanceRecord):MicrosoftGraphAttendanceRecord
}
export interface operation228{
   get():MicrosoftGraphAttendanceRecord
   patch(requestBody:MicrosoftGraphAttendanceRecord):"Success"
   delete():"Success"
}
export interface operation229{
   get():ODataCountResponse
}
export interface operation230{
   get():ODataCountResponse
}
export interface operation231{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation232{
   get():ODataCountResponse
}
export interface operation233{
   post(requestBody:{chatInfo?: MicrosoftGraphChatInfo,endDateTime?: string,externalId?: string,participants?: MicrosoftGraphMeetingParticipants,startDateTime?: string,subject?: string,}):{}
}
export interface operation234{
   get():MicrosoftGraphPresenceCollectionResponse
   post(requestBody:MicrosoftGraphPresence):MicrosoftGraphPresence
}
export interface operation235{
   get():MicrosoftGraphPresence
   patch(requestBody:MicrosoftGraphPresence):"Success"
   delete():"Success"
}
export interface operation236{
   post(requestBody:{sessionId?: string,}):"Success"
}
export interface operation237{
   post():"Success"
}
export interface operation238{
   post(requestBody:{sessionId?: string,availability?: string,activity?: string,expirationDuration?: string,}):"Success"
}
export interface operation239{
   post(requestBody:{availability?: string,activity?: string,expirationDuration?: string,}):"Success"
}
export interface operation240{
   get():ODataCountResponse
}
export interface operation241{
   get():MicrosoftGraphCompliance
   patch(requestBody:MicrosoftGraphCompliance):"Success"
}
export interface operation242{
   get():MicrosoftGraphExternalConnectorsExternalConnectionCollectionResponse
   post(requestBody:MicrosoftGraphExternalConnectorsExternalConnection):MicrosoftGraphExternalConnectorsExternalConnection
}
export interface operation243{
   get():MicrosoftGraphExternalConnectorsExternalConnection
   patch(requestBody:MicrosoftGraphExternalConnectorsExternalConnection):"Success"
   delete():"Success"
}
export interface operation244{
   get():MicrosoftGraphExternalConnectorsExternalGroupCollectionResponse
   post(requestBody:MicrosoftGraphExternalConnectorsExternalGroup):MicrosoftGraphExternalConnectorsExternalGroup
}
export interface operation245{
   get():MicrosoftGraphExternalConnectorsExternalGroup
   patch(requestBody:MicrosoftGraphExternalConnectorsExternalGroup):"Success"
   delete():"Success"
}
export interface operation246{
   get():MicrosoftGraphExternalConnectorsIdentityCollectionResponse
   post(requestBody:MicrosoftGraphExternalConnectorsIdentity):MicrosoftGraphExternalConnectorsIdentity
}
export interface operation247{
   get():MicrosoftGraphExternalConnectorsIdentity
   patch(requestBody:MicrosoftGraphExternalConnectorsIdentity):"Success"
   delete():"Success"
}
export interface operation248{
   get():ODataCountResponse
}
export interface operation249{
   get():ODataCountResponse
}
export interface operation250{
   get():MicrosoftGraphExternalConnectorsExternalItemCollectionResponse
   post(requestBody:MicrosoftGraphExternalConnectorsExternalItem):MicrosoftGraphExternalConnectorsExternalItem
}
export interface operation251{
   get():MicrosoftGraphExternalConnectorsExternalItem
   patch(requestBody:MicrosoftGraphExternalConnectorsExternalItem):"Success"
   delete():"Success"
}
export interface operation252{
   get():ODataCountResponse
}
export interface operation253{
   get():MicrosoftGraphExternalConnectorsConnectionOperationCollectionResponse
   post(requestBody:MicrosoftGraphExternalConnectorsConnectionOperation):MicrosoftGraphExternalConnectorsConnectionOperation
}
export interface operation254{
   get():MicrosoftGraphExternalConnectorsConnectionOperation
   patch(requestBody:MicrosoftGraphExternalConnectorsConnectionOperation):"Success"
   delete():"Success"
}
export interface operation255{
   get():ODataCountResponse
}
export interface operation256{
   get():MicrosoftGraphExternalConnectorsSchema
   patch(requestBody:MicrosoftGraphExternalConnectorsSchema):"Success"
   delete():"Success"
}
export interface operation257{
   get():ODataCountResponse
}
export interface operation258{
   get():MicrosoftGraphOrgContactCollectionResponse
   post(requestBody:MicrosoftGraphOrgContact):MicrosoftGraphOrgContact
}
export interface operation259{
   get():MicrosoftGraphOrgContact
   patch(requestBody:MicrosoftGraphOrgContact):"Success"
   delete():"Success"
}
export interface operation260{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation261{
   get():MicrosoftGraphDirectoryObject
}
export interface operation262{
   get():MicrosoftGraphOrgContact
}
export interface operation263{
   get():MicrosoftGraphUser
}
export interface operation264{
   get():ODataCountResponse
}
export interface operation265{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation266{
   get():ODataCountResponse
}
export interface operation267{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation268{
   get():ODataCountResponse
}
export interface operation269{
   get():MicrosoftGraphDirectoryObject
}
export interface operation270{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation271{
   get():MicrosoftGraphDirectoryObject
}
export interface operation272{
   get():MicrosoftGraphApplication
}
export interface operation273{
   get():MicrosoftGraphDevice
}
export interface operation274{
   get():MicrosoftGraphGroup
}
export interface operation275{
   get():MicrosoftGraphOrgContact
}
export interface operation276{
   get():MicrosoftGraphServicePrincipal
}
export interface operation277{
   get():MicrosoftGraphUser
}
export interface operation278{
   get():ODataCountResponse
}
export interface operation279{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation280{
   get():ODataCountResponse
}
export interface operation281{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation282{
   get():ODataCountResponse
}
export interface operation283{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation284{
   get():ODataCountResponse
}
export interface operation285{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation286{
   get():ODataCountResponse
}
export interface operation287{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation288{
   get():ODataCountResponse
}
export interface operation289{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation290{
   get():ODataCountResponse
}
export interface operation291{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation292{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation293{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation294{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation295{
   post():{}
}
export interface operation296{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation297{
   get():MicrosoftGraphDirectoryObject
}
export interface operation298{
   get():MicrosoftGraphApplication
}
export interface operation299{
   get():MicrosoftGraphDevice
}
export interface operation300{
   get():MicrosoftGraphGroup
}
export interface operation301{
   get():MicrosoftGraphOrgContact
}
export interface operation302{
   get():MicrosoftGraphServicePrincipal
}
export interface operation303{
   get():MicrosoftGraphUser
}
export interface operation304{
   get():ODataCountResponse
}
export interface operation305{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation306{
   get():ODataCountResponse
}
export interface operation307{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation308{
   get():ODataCountResponse
}
export interface operation309{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation310{
   get():ODataCountResponse
}
export interface operation311{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation312{
   get():ODataCountResponse
}
export interface operation313{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation314{
   get():ODataCountResponse
}
export interface operation315{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation316{
   get():ODataCountResponse
}
export interface operation317{
   get():ODataCountResponse
}
export interface operation318{
   get():{value?: MicrosoftGraphOrgContact[],}
}
export interface operation319{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation320{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation321{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation322{
   get():MicrosoftGraphContractCollectionResponse
   post(requestBody:MicrosoftGraphContract):MicrosoftGraphContract
}
export interface operation323{
   get():MicrosoftGraphContract
   patch(requestBody:MicrosoftGraphContract):"Success"
   delete():"Success"
}
export interface operation324{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation325{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation326{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation327{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation328{
   post():{}
}
export interface operation329{
   get():ODataCountResponse
}
export interface operation330{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation331{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation332{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation333{
   get():MicrosoftGraphDataPolicyOperationCollectionResponse
   post(requestBody:MicrosoftGraphDataPolicyOperation):MicrosoftGraphDataPolicyOperation
}
export interface operation334{
   get():MicrosoftGraphDataPolicyOperation
   patch(requestBody:MicrosoftGraphDataPolicyOperation):"Success"
   delete():"Success"
}
export interface operation335{
   get():ODataCountResponse
}
export interface operation336{
   get():MicrosoftGraphDeviceAppManagement
   patch(requestBody:MicrosoftGraphDeviceAppManagement):"Success"
}
export interface operation337{
   get():MicrosoftGraphAndroidManagedAppProtectionCollectionResponse
   post(requestBody:MicrosoftGraphAndroidManagedAppProtection):MicrosoftGraphAndroidManagedAppProtection
}
export interface operation338{
   get():MicrosoftGraphAndroidManagedAppProtection
   patch(requestBody:MicrosoftGraphAndroidManagedAppProtection):"Success"
   delete():"Success"
}
export interface operation339{
   get():MicrosoftGraphManagedMobileAppCollectionResponse
   post(requestBody:MicrosoftGraphManagedMobileApp):MicrosoftGraphManagedMobileApp
}
export interface operation340{
   get():MicrosoftGraphManagedMobileApp
   patch(requestBody:MicrosoftGraphManagedMobileApp):"Success"
   delete():"Success"
}
export interface operation341{
   get():ODataCountResponse
}
export interface operation342{
   get():MicrosoftGraphManagedAppPolicyDeploymentSummary
   patch(requestBody:MicrosoftGraphManagedAppPolicyDeploymentSummary):"Success"
   delete():"Success"
}
export interface operation343{
   get():ODataCountResponse
}
export interface operation344{
   get():MicrosoftGraphDefaultManagedAppProtectionCollectionResponse
   post(requestBody:MicrosoftGraphDefaultManagedAppProtection):MicrosoftGraphDefaultManagedAppProtection
}
export interface operation345{
   get():MicrosoftGraphDefaultManagedAppProtection
   patch(requestBody:MicrosoftGraphDefaultManagedAppProtection):"Success"
   delete():"Success"
}
export interface operation346{
   get():MicrosoftGraphManagedMobileAppCollectionResponse
   post(requestBody:MicrosoftGraphManagedMobileApp):MicrosoftGraphManagedMobileApp
}
export interface operation347{
   get():MicrosoftGraphManagedMobileApp
   patch(requestBody:MicrosoftGraphManagedMobileApp):"Success"
   delete():"Success"
}
export interface operation348{
   get():ODataCountResponse
}
export interface operation349{
   get():MicrosoftGraphManagedAppPolicyDeploymentSummary
   patch(requestBody:MicrosoftGraphManagedAppPolicyDeploymentSummary):"Success"
   delete():"Success"
}
export interface operation350{
   get():ODataCountResponse
}
export interface operation351{
   get():MicrosoftGraphIosManagedAppProtectionCollectionResponse
   post(requestBody:MicrosoftGraphIosManagedAppProtection):MicrosoftGraphIosManagedAppProtection
}
export interface operation352{
   get():MicrosoftGraphIosManagedAppProtection
   patch(requestBody:MicrosoftGraphIosManagedAppProtection):"Success"
   delete():"Success"
}
export interface operation353{
   get():MicrosoftGraphManagedMobileAppCollectionResponse
   post(requestBody:MicrosoftGraphManagedMobileApp):MicrosoftGraphManagedMobileApp
}
export interface operation354{
   get():MicrosoftGraphManagedMobileApp
   patch(requestBody:MicrosoftGraphManagedMobileApp):"Success"
   delete():"Success"
}
export interface operation355{
   get():ODataCountResponse
}
export interface operation356{
   get():MicrosoftGraphManagedAppPolicyDeploymentSummary
   patch(requestBody:MicrosoftGraphManagedAppPolicyDeploymentSummary):"Success"
   delete():"Success"
}
export interface operation357{
   get():ODataCountResponse
}
export interface operation358{
   get():MicrosoftGraphManagedAppPolicyCollectionResponse
   post(requestBody:MicrosoftGraphManagedAppPolicy):MicrosoftGraphManagedAppPolicy
}
export interface operation359{
   get():MicrosoftGraphManagedAppPolicy
   patch(requestBody:MicrosoftGraphManagedAppPolicy):"Success"
   delete():"Success"
}
export interface operation360{
   post(requestBody:{apps?: MicrosoftGraphManagedMobileApp[],}):"Success"
}
export interface operation361{
   get():ODataCountResponse
}
export interface operation362{
   get():MicrosoftGraphManagedAppRegistrationCollectionResponse
   post(requestBody:MicrosoftGraphManagedAppRegistration):MicrosoftGraphManagedAppRegistration
}
export interface operation363{
   get():MicrosoftGraphManagedAppRegistration
   patch(requestBody:MicrosoftGraphManagedAppRegistration):"Success"
   delete():"Success"
}
export interface operation364{
   get():MicrosoftGraphManagedAppPolicyCollectionResponse
   post(requestBody:MicrosoftGraphManagedAppPolicy):MicrosoftGraphManagedAppPolicy
}
export interface operation365{
   get():MicrosoftGraphManagedAppPolicy
   patch(requestBody:MicrosoftGraphManagedAppPolicy):"Success"
   delete():"Success"
}
export interface operation366{
   post(requestBody:{apps?: MicrosoftGraphManagedMobileApp[],}):"Success"
}
export interface operation367{
   get():ODataCountResponse
}
export interface operation368{
   get():MicrosoftGraphManagedAppPolicyCollectionResponse
   post(requestBody:MicrosoftGraphManagedAppPolicy):MicrosoftGraphManagedAppPolicy
}
export interface operation369{
   get():MicrosoftGraphManagedAppPolicy
   patch(requestBody:MicrosoftGraphManagedAppPolicy):"Success"
   delete():"Success"
}
export interface operation370{
   post(requestBody:{apps?: MicrosoftGraphManagedMobileApp[],}):"Success"
}
export interface operation371{
   get():ODataCountResponse
}
export interface operation372{
   get():MicrosoftGraphManagedAppOperationCollectionResponse
   post(requestBody:MicrosoftGraphManagedAppOperation):MicrosoftGraphManagedAppOperation
}
export interface operation373{
   get():MicrosoftGraphManagedAppOperation
   patch(requestBody:MicrosoftGraphManagedAppOperation):"Success"
   delete():"Success"
}
export interface operation374{
   get():ODataCountResponse
}
export interface operation375{
   get():ODataCountResponse
}
export interface operation376{
   get():{value?: string[],}
}
export interface operation377{
   get():MicrosoftGraphManagedAppStatusCollectionResponse
   post(requestBody:MicrosoftGraphManagedAppStatus):MicrosoftGraphManagedAppStatus
}
export interface operation378{
   get():MicrosoftGraphManagedAppStatus
   patch(requestBody:MicrosoftGraphManagedAppStatus):"Success"
   delete():"Success"
}
export interface operation379{
   get():ODataCountResponse
}
export interface operation380{
   get():MicrosoftGraphManagedEBookCollectionResponse
   post(requestBody:MicrosoftGraphManagedEBook):MicrosoftGraphManagedEBook
}
export interface operation381{
   get():MicrosoftGraphManagedEBook
   patch(requestBody:MicrosoftGraphManagedEBook):"Success"
   delete():"Success"
}
export interface operation382{
   get():MicrosoftGraphManagedEBookAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphManagedEBookAssignment):MicrosoftGraphManagedEBookAssignment
}
export interface operation383{
   get():MicrosoftGraphManagedEBookAssignment
   patch(requestBody:MicrosoftGraphManagedEBookAssignment):"Success"
   delete():"Success"
}
export interface operation384{
   get():ODataCountResponse
}
export interface operation385{
   get():MicrosoftGraphDeviceInstallStateCollectionResponse
   post(requestBody:MicrosoftGraphDeviceInstallState):MicrosoftGraphDeviceInstallState
}
export interface operation386{
   get():MicrosoftGraphDeviceInstallState
   patch(requestBody:MicrosoftGraphDeviceInstallState):"Success"
   delete():"Success"
}
export interface operation387{
   get():ODataCountResponse
}
export interface operation388{
   get():MicrosoftGraphEBookInstallSummary
   patch(requestBody:MicrosoftGraphEBookInstallSummary):"Success"
   delete():"Success"
}
export interface operation389{
   post(requestBody:{managedEBookAssignments?: MicrosoftGraphManagedEBookAssignment[],}):"Success"
}
export interface operation390{
   get():MicrosoftGraphUserInstallStateSummaryCollectionResponse
   post(requestBody:MicrosoftGraphUserInstallStateSummary):MicrosoftGraphUserInstallStateSummary
}
export interface operation391{
   get():MicrosoftGraphUserInstallStateSummary
   patch(requestBody:MicrosoftGraphUserInstallStateSummary):"Success"
   delete():"Success"
}
export interface operation392{
   get():MicrosoftGraphDeviceInstallStateCollectionResponse
   post(requestBody:MicrosoftGraphDeviceInstallState):MicrosoftGraphDeviceInstallState
}
export interface operation393{
   get():MicrosoftGraphDeviceInstallState
   patch(requestBody:MicrosoftGraphDeviceInstallState):"Success"
   delete():"Success"
}
export interface operation394{
   get():ODataCountResponse
}
export interface operation395{
   get():ODataCountResponse
}
export interface operation396{
   get():ODataCountResponse
}
export interface operation397{
   get():MicrosoftGraphMdmWindowsInformationProtectionPolicyCollectionResponse
   post(requestBody:MicrosoftGraphMdmWindowsInformationProtectionPolicy):MicrosoftGraphMdmWindowsInformationProtectionPolicy
}
export interface operation398{
   get():MicrosoftGraphMdmWindowsInformationProtectionPolicy
   patch(requestBody:MicrosoftGraphMdmWindowsInformationProtectionPolicy):"Success"
   delete():"Success"
}
export interface operation399{
   get():ODataCountResponse
}
export interface operation400{
   post():"Success"
}
export interface operation401{
   get():MicrosoftGraphMobileAppCategoryCollectionResponse
   post(requestBody:MicrosoftGraphMobileAppCategory):MicrosoftGraphMobileAppCategory
}
export interface operation402{
   get():MicrosoftGraphMobileAppCategory
   patch(requestBody:MicrosoftGraphMobileAppCategory):"Success"
   delete():"Success"
}
export interface operation403{
   get():ODataCountResponse
}
export interface operation404{
   get():MicrosoftGraphManagedDeviceMobileAppConfigurationCollectionResponse
   post(requestBody:MicrosoftGraphManagedDeviceMobileAppConfiguration):MicrosoftGraphManagedDeviceMobileAppConfiguration
}
export interface operation405{
   get():MicrosoftGraphManagedDeviceMobileAppConfiguration
   patch(requestBody:MicrosoftGraphManagedDeviceMobileAppConfiguration):"Success"
   delete():"Success"
}
export interface operation406{
   get():MicrosoftGraphManagedDeviceMobileAppConfigurationAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment):MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment
}
export interface operation407{
   get():MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment
   patch(requestBody:MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment):"Success"
   delete():"Success"
}
export interface operation408{
   get():ODataCountResponse
}
export interface operation409{
   get():MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatusCollectionResponse
   post(requestBody:MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus):MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus
}
export interface operation410{
   get():MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus
   patch(requestBody:MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus):"Success"
   delete():"Success"
}
export interface operation411{
   get():ODataCountResponse
}
export interface operation412{
   get():MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary
   patch(requestBody:MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary):"Success"
   delete():"Success"
}
export interface operation413{
   post(requestBody:{assignments?: MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment[],}):"Success"
}
export interface operation414{
   get():MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatusCollectionResponse
   post(requestBody:MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus):MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus
}
export interface operation415{
   get():MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus
   patch(requestBody:MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus):"Success"
   delete():"Success"
}
export interface operation416{
   get():ODataCountResponse
}
export interface operation417{
   get():MicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary
   patch(requestBody:MicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary):"Success"
   delete():"Success"
}
export interface operation418{
   get():ODataCountResponse
}
export interface operation419{
   get():MicrosoftGraphMobileAppCollectionResponse
   post(requestBody:MicrosoftGraphMobileApp):MicrosoftGraphMobileApp
}
export interface operation420{
   get():MicrosoftGraphMobileApp
   patch(requestBody:MicrosoftGraphMobileApp):"Success"
   delete():"Success"
}
export interface operation421{
   get():MicrosoftGraphMobileAppAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphMobileAppAssignment):MicrosoftGraphMobileAppAssignment
}
export interface operation422{
   get():MicrosoftGraphMobileAppAssignment
   patch(requestBody:MicrosoftGraphMobileAppAssignment):"Success"
   delete():"Success"
}
export interface operation423{
   get():ODataCountResponse
}
export interface operation424{
   get():MicrosoftGraphMobileAppCategoryCollectionResponse
}
export interface operation425{
   get():MicrosoftGraphMobileAppCategory
}
export interface operation426{
   get():ODataCountResponse
}
export interface operation427{
   post(requestBody:{mobileAppAssignments?: MicrosoftGraphMobileAppAssignment[],}):"Success"
}
export interface operation428{
   get():MicrosoftGraphManagedMobileLobApp
}
export interface operation429{
   get():MicrosoftGraphMobileLobApp
}
export interface operation430{
   get():ODataCountResponse
}
export interface operation431{
   get():MicrosoftGraphManagedMobileLobAppCollectionResponse
}
export interface operation432{
   get():ODataCountResponse
}
export interface operation433{
   get():MicrosoftGraphMobileLobAppCollectionResponse
}
export interface operation434{
   get():ODataCountResponse
}
export interface operation435{
   get():MicrosoftGraphTargetedManagedAppConfigurationCollectionResponse
   post(requestBody:MicrosoftGraphTargetedManagedAppConfiguration):MicrosoftGraphTargetedManagedAppConfiguration
}
export interface operation436{
   get():MicrosoftGraphTargetedManagedAppConfiguration
   patch(requestBody:MicrosoftGraphTargetedManagedAppConfiguration):"Success"
   delete():"Success"
}
export interface operation437{
   get():MicrosoftGraphManagedMobileAppCollectionResponse
   post(requestBody:MicrosoftGraphManagedMobileApp):MicrosoftGraphManagedMobileApp
}
export interface operation438{
   get():MicrosoftGraphManagedMobileApp
   patch(requestBody:MicrosoftGraphManagedMobileApp):"Success"
   delete():"Success"
}
export interface operation439{
   get():ODataCountResponse
}
export interface operation440{
   get():MicrosoftGraphTargetedManagedAppPolicyAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphTargetedManagedAppPolicyAssignment):MicrosoftGraphTargetedManagedAppPolicyAssignment
}
export interface operation441{
   get():MicrosoftGraphTargetedManagedAppPolicyAssignment
   patch(requestBody:MicrosoftGraphTargetedManagedAppPolicyAssignment):"Success"
   delete():"Success"
}
export interface operation442{
   get():ODataCountResponse
}
export interface operation443{
   get():MicrosoftGraphManagedAppPolicyDeploymentSummary
   patch(requestBody:MicrosoftGraphManagedAppPolicyDeploymentSummary):"Success"
   delete():"Success"
}
export interface operation444{
   post(requestBody:{assignments?: MicrosoftGraphTargetedManagedAppPolicyAssignment[],}):"Success"
}
export interface operation445{
   post(requestBody:{apps?: MicrosoftGraphManagedMobileApp[],appGroupType?: MicrosoftGraphTargetedManagedAppGroupType,}):"Success"
}
export interface operation446{
   get():ODataCountResponse
}
export interface operation447{
   get():MicrosoftGraphVppTokenCollectionResponse
   post(requestBody:MicrosoftGraphVppToken):MicrosoftGraphVppToken
}
export interface operation448{
   get():MicrosoftGraphVppToken
   patch(requestBody:MicrosoftGraphVppToken):"Success"
   delete():"Success"
}
export interface operation449{
   post():{}
}
export interface operation450{
   get():ODataCountResponse
}
export interface operation451{
   get():MicrosoftGraphWindowsInformationProtectionPolicyCollectionResponse
   post(requestBody:MicrosoftGraphWindowsInformationProtectionPolicy):MicrosoftGraphWindowsInformationProtectionPolicy
}
export interface operation452{
   get():MicrosoftGraphWindowsInformationProtectionPolicy
   patch(requestBody:MicrosoftGraphWindowsInformationProtectionPolicy):"Success"
   delete():"Success"
}
export interface operation453{
   get():ODataCountResponse
}
export interface operation454{
   get():MicrosoftGraphDeviceManagement
   patch(requestBody:MicrosoftGraphDeviceManagement):"Success"
}
export interface operation455{
   get():MicrosoftGraphApplePushNotificationCertificate
   patch(requestBody:MicrosoftGraphApplePushNotificationCertificate):"Success"
   delete():"Success"
}
export interface operation456{
   get():{value?: string,}
}
export interface operation457{
   get():MicrosoftGraphComplianceManagementPartnerCollectionResponse
   post(requestBody:MicrosoftGraphComplianceManagementPartner):MicrosoftGraphComplianceManagementPartner
}
export interface operation458{
   get():MicrosoftGraphComplianceManagementPartner
   patch(requestBody:MicrosoftGraphComplianceManagementPartner):"Success"
   delete():"Success"
}
export interface operation459{
   get():ODataCountResponse
}
export interface operation460{
   get():MicrosoftGraphOnPremisesConditionalAccessSettings
   patch(requestBody:MicrosoftGraphOnPremisesConditionalAccessSettings):"Success"
   delete():"Success"
}
export interface operation461{
   get():MicrosoftGraphDetectedAppCollectionResponse
   post(requestBody:MicrosoftGraphDetectedApp):MicrosoftGraphDetectedApp
}
export interface operation462{
   get():MicrosoftGraphDetectedApp
   patch(requestBody:MicrosoftGraphDetectedApp):"Success"
   delete():"Success"
}
export interface operation463{
   get():MicrosoftGraphManagedDeviceCollectionResponse
}
export interface operation464{
   get():MicrosoftGraphManagedDevice
}
export interface operation465{
   get():ODataCountResponse
}
export interface operation466{
   get():ODataCountResponse
}
export interface operation467{
   get():MicrosoftGraphDeviceCategoryCollectionResponse
   post(requestBody:MicrosoftGraphDeviceCategory):MicrosoftGraphDeviceCategory
}
export interface operation468{
   get():MicrosoftGraphDeviceCategory
   patch(requestBody:MicrosoftGraphDeviceCategory):"Success"
   delete():"Success"
}
export interface operation469{
   get():ODataCountResponse
}
export interface operation470{
   get():MicrosoftGraphDeviceCompliancePolicyCollectionResponse
   post(requestBody:MicrosoftGraphDeviceCompliancePolicy):MicrosoftGraphDeviceCompliancePolicy
}
export interface operation471{
   get():MicrosoftGraphDeviceCompliancePolicy
   patch(requestBody:MicrosoftGraphDeviceCompliancePolicy):"Success"
   delete():"Success"
}
export interface operation472{
   get():MicrosoftGraphDeviceCompliancePolicyAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphDeviceCompliancePolicyAssignment):MicrosoftGraphDeviceCompliancePolicyAssignment
}
export interface operation473{
   get():MicrosoftGraphDeviceCompliancePolicyAssignment
   patch(requestBody:MicrosoftGraphDeviceCompliancePolicyAssignment):"Success"
   delete():"Success"
}
export interface operation474{
   get():ODataCountResponse
}
export interface operation475{
   get():MicrosoftGraphSettingStateDeviceSummaryCollectionResponse
   post(requestBody:MicrosoftGraphSettingStateDeviceSummary):MicrosoftGraphSettingStateDeviceSummary
}
export interface operation476{
   get():MicrosoftGraphSettingStateDeviceSummary
   patch(requestBody:MicrosoftGraphSettingStateDeviceSummary):"Success"
   delete():"Success"
}
export interface operation477{
   get():ODataCountResponse
}
export interface operation478{
   get():MicrosoftGraphDeviceComplianceDeviceStatusCollectionResponse
   post(requestBody:MicrosoftGraphDeviceComplianceDeviceStatus):MicrosoftGraphDeviceComplianceDeviceStatus
}
export interface operation479{
   get():MicrosoftGraphDeviceComplianceDeviceStatus
   patch(requestBody:MicrosoftGraphDeviceComplianceDeviceStatus):"Success"
   delete():"Success"
}
export interface operation480{
   get():ODataCountResponse
}
export interface operation481{
   get():MicrosoftGraphDeviceComplianceDeviceOverview
   patch(requestBody:MicrosoftGraphDeviceComplianceDeviceOverview):"Success"
   delete():"Success"
}
export interface operation482{
   post(requestBody:{assignments?: MicrosoftGraphDeviceCompliancePolicyAssignment[],}):{value?: MicrosoftGraphDeviceCompliancePolicyAssignment[],}
}
export interface operation483{
   post(requestBody:{deviceComplianceScheduledActionForRules?: MicrosoftGraphDeviceComplianceScheduledActionForRule[],}):"Success"
}
export interface operation484{
   get():MicrosoftGraphDeviceComplianceScheduledActionForRuleCollectionResponse
   post(requestBody:MicrosoftGraphDeviceComplianceScheduledActionForRule):MicrosoftGraphDeviceComplianceScheduledActionForRule
}
export interface operation485{
   get():MicrosoftGraphDeviceComplianceScheduledActionForRule
   patch(requestBody:MicrosoftGraphDeviceComplianceScheduledActionForRule):"Success"
   delete():"Success"
}
export interface operation486{
   get():MicrosoftGraphDeviceComplianceActionItemCollectionResponse
   post(requestBody:MicrosoftGraphDeviceComplianceActionItem):MicrosoftGraphDeviceComplianceActionItem
}
export interface operation487{
   get():MicrosoftGraphDeviceComplianceActionItem
   patch(requestBody:MicrosoftGraphDeviceComplianceActionItem):"Success"
   delete():"Success"
}
export interface operation488{
   get():ODataCountResponse
}
export interface operation489{
   get():ODataCountResponse
}
export interface operation490{
   get():MicrosoftGraphDeviceComplianceUserStatusCollectionResponse
   post(requestBody:MicrosoftGraphDeviceComplianceUserStatus):MicrosoftGraphDeviceComplianceUserStatus
}
export interface operation491{
   get():MicrosoftGraphDeviceComplianceUserStatus
   patch(requestBody:MicrosoftGraphDeviceComplianceUserStatus):"Success"
   delete():"Success"
}
export interface operation492{
   get():ODataCountResponse
}
export interface operation493{
   get():MicrosoftGraphDeviceComplianceUserOverview
   patch(requestBody:MicrosoftGraphDeviceComplianceUserOverview):"Success"
   delete():"Success"
}
export interface operation494{
   get():ODataCountResponse
}
export interface operation495{
   get():MicrosoftGraphDeviceCompliancePolicyDeviceStateSummary
   patch(requestBody:MicrosoftGraphDeviceCompliancePolicyDeviceStateSummary):"Success"
   delete():"Success"
}
export interface operation496{
   get():MicrosoftGraphDeviceCompliancePolicySettingStateSummaryCollectionResponse
   post(requestBody:MicrosoftGraphDeviceCompliancePolicySettingStateSummary):MicrosoftGraphDeviceCompliancePolicySettingStateSummary
}
export interface operation497{
   get():MicrosoftGraphDeviceCompliancePolicySettingStateSummary
   patch(requestBody:MicrosoftGraphDeviceCompliancePolicySettingStateSummary):"Success"
   delete():"Success"
}
export interface operation498{
   get():MicrosoftGraphDeviceComplianceSettingStateCollectionResponse
   post(requestBody:MicrosoftGraphDeviceComplianceSettingState):MicrosoftGraphDeviceComplianceSettingState
}
export interface operation499{
   get():MicrosoftGraphDeviceComplianceSettingState
   patch(requestBody:MicrosoftGraphDeviceComplianceSettingState):"Success"
   delete():"Success"
}
export interface operation500{
   get():ODataCountResponse
}
export interface operation501{
   get():ODataCountResponse
}
export interface operation502{
   get():MicrosoftGraphDeviceConfigurationDeviceStateSummary
   patch(requestBody:MicrosoftGraphDeviceConfigurationDeviceStateSummary):"Success"
   delete():"Success"
}
export interface operation503{
   get():MicrosoftGraphDeviceConfigurationCollectionResponse
   post(requestBody:MicrosoftGraphDeviceConfiguration):MicrosoftGraphDeviceConfiguration
}
export interface operation504{
   get():MicrosoftGraphDeviceConfiguration
   patch(requestBody:MicrosoftGraphDeviceConfiguration):"Success"
   delete():"Success"
}
export interface operation505{
   get():MicrosoftGraphDeviceConfigurationAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphDeviceConfigurationAssignment):MicrosoftGraphDeviceConfigurationAssignment
}
export interface operation506{
   get():MicrosoftGraphDeviceConfigurationAssignment
   patch(requestBody:MicrosoftGraphDeviceConfigurationAssignment):"Success"
   delete():"Success"
}
export interface operation507{
   get():ODataCountResponse
}
export interface operation508{
   get():MicrosoftGraphSettingStateDeviceSummaryCollectionResponse
   post(requestBody:MicrosoftGraphSettingStateDeviceSummary):MicrosoftGraphSettingStateDeviceSummary
}
export interface operation509{
   get():MicrosoftGraphSettingStateDeviceSummary
   patch(requestBody:MicrosoftGraphSettingStateDeviceSummary):"Success"
   delete():"Success"
}
export interface operation510{
   get():ODataCountResponse
}
export interface operation511{
   get():MicrosoftGraphDeviceConfigurationDeviceStatusCollectionResponse
   post(requestBody:MicrosoftGraphDeviceConfigurationDeviceStatus):MicrosoftGraphDeviceConfigurationDeviceStatus
}
export interface operation512{
   get():MicrosoftGraphDeviceConfigurationDeviceStatus
   patch(requestBody:MicrosoftGraphDeviceConfigurationDeviceStatus):"Success"
   delete():"Success"
}
export interface operation513{
   get():ODataCountResponse
}
export interface operation514{
   get():MicrosoftGraphDeviceConfigurationDeviceOverview
   patch(requestBody:MicrosoftGraphDeviceConfigurationDeviceOverview):"Success"
   delete():"Success"
}
export interface operation515{
   post(requestBody:{assignments?: MicrosoftGraphDeviceConfigurationAssignment[],}):{value?: MicrosoftGraphDeviceConfigurationAssignment[],}
}
export interface operation516{
   get():{value?: string,}
}
export interface operation517{
   get():MicrosoftGraphDeviceConfigurationUserStatusCollectionResponse
   post(requestBody:MicrosoftGraphDeviceConfigurationUserStatus):MicrosoftGraphDeviceConfigurationUserStatus
}
export interface operation518{
   get():MicrosoftGraphDeviceConfigurationUserStatus
   patch(requestBody:MicrosoftGraphDeviceConfigurationUserStatus):"Success"
   delete():"Success"
}
export interface operation519{
   get():ODataCountResponse
}
export interface operation520{
   get():MicrosoftGraphDeviceConfigurationUserOverview
   patch(requestBody:MicrosoftGraphDeviceConfigurationUserOverview):"Success"
   delete():"Success"
}
export interface operation521{
   get():ODataCountResponse
}
export interface operation522{
   get():MicrosoftGraphDeviceEnrollmentConfigurationCollectionResponse
   post(requestBody:MicrosoftGraphDeviceEnrollmentConfiguration):MicrosoftGraphDeviceEnrollmentConfiguration
}
export interface operation523{
   get():MicrosoftGraphDeviceEnrollmentConfiguration
   patch(requestBody:MicrosoftGraphDeviceEnrollmentConfiguration):"Success"
   delete():"Success"
}
export interface operation524{
   get():MicrosoftGraphEnrollmentConfigurationAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphEnrollmentConfigurationAssignment):MicrosoftGraphEnrollmentConfigurationAssignment
}
export interface operation525{
   get():MicrosoftGraphEnrollmentConfigurationAssignment
   patch(requestBody:MicrosoftGraphEnrollmentConfigurationAssignment):"Success"
   delete():"Success"
}
export interface operation526{
   get():ODataCountResponse
}
export interface operation527{
   post(requestBody:{enrollmentConfigurationAssignments?: MicrosoftGraphEnrollmentConfigurationAssignment[],}):"Success"
}
export interface operation528{
   post(requestBody:{priority?: number,}):"Success"
}
export interface operation529{
   get():ODataCountResponse
}
export interface operation530{
   get():MicrosoftGraphDeviceManagementPartnerCollectionResponse
   post(requestBody:MicrosoftGraphDeviceManagementPartner):MicrosoftGraphDeviceManagementPartner
}
export interface operation531{
   get():MicrosoftGraphDeviceManagementPartner
   patch(requestBody:MicrosoftGraphDeviceManagementPartner):"Success"
   delete():"Success"
}
export interface operation532{
   get():ODataCountResponse
}
export interface operation533{
   get():MicrosoftGraphDeviceManagementExchangeConnectorCollectionResponse
   post(requestBody:MicrosoftGraphDeviceManagementExchangeConnector):MicrosoftGraphDeviceManagementExchangeConnector
}
export interface operation534{
   get():MicrosoftGraphDeviceManagementExchangeConnector
   patch(requestBody:MicrosoftGraphDeviceManagementExchangeConnector):"Success"
   delete():"Success"
}
export interface operation535{
   post(requestBody:{syncType?: string,}):"Success"
}
export interface operation536{
   get():ODataCountResponse
}
export interface operation537{
   get():MicrosoftGraphImportedWindowsAutopilotDeviceIdentityCollectionResponse
   post(requestBody:MicrosoftGraphImportedWindowsAutopilotDeviceIdentity):MicrosoftGraphImportedWindowsAutopilotDeviceIdentity
}
export interface operation538{
   get():MicrosoftGraphImportedWindowsAutopilotDeviceIdentity
   patch(requestBody:MicrosoftGraphImportedWindowsAutopilotDeviceIdentity):"Success"
   delete():"Success"
}
export interface operation539{
   get():ODataCountResponse
}
export interface operation540{
   post(requestBody:{importedWindowsAutopilotDeviceIdentities?: MicrosoftGraphImportedWindowsAutopilotDeviceIdentity[],}):{value?: MicrosoftGraphImportedWindowsAutopilotDeviceIdentity[],}
}
export interface operation541{
   get():MicrosoftGraphIosUpdateDeviceStatusCollectionResponse
   post(requestBody:MicrosoftGraphIosUpdateDeviceStatus):MicrosoftGraphIosUpdateDeviceStatus
}
export interface operation542{
   get():MicrosoftGraphIosUpdateDeviceStatus
   patch(requestBody:MicrosoftGraphIosUpdateDeviceStatus):"Success"
   delete():"Success"
}
export interface operation543{
   get():ODataCountResponse
}
export interface operation544{
   get():MicrosoftGraphManagedDeviceOverview
}
export interface operation545{
   get():MicrosoftGraphManagedDeviceCollectionResponse
   post(requestBody:MicrosoftGraphManagedDevice):MicrosoftGraphManagedDevice
}
export interface operation546{
   get():MicrosoftGraphManagedDevice
   patch(requestBody:MicrosoftGraphManagedDevice):"Success"
   delete():"Success"
}
export interface operation547{
   get():MicrosoftGraphDeviceCategory
   patch(requestBody:MicrosoftGraphDeviceCategory):"Success"
   delete():"Success"
}
export interface operation548{
   get():MicrosoftGraphDeviceCompliancePolicyStateCollectionResponse
   post(requestBody:MicrosoftGraphDeviceCompliancePolicyState):MicrosoftGraphDeviceCompliancePolicyState
}
export interface operation549{
   get():MicrosoftGraphDeviceCompliancePolicyState
   patch(requestBody:MicrosoftGraphDeviceCompliancePolicyState):"Success"
   delete():"Success"
}
export interface operation550{
   get():ODataCountResponse
}
export interface operation551{
   get():MicrosoftGraphDeviceConfigurationStateCollectionResponse
   post(requestBody:MicrosoftGraphDeviceConfigurationState):MicrosoftGraphDeviceConfigurationState
}
export interface operation552{
   get():MicrosoftGraphDeviceConfigurationState
   patch(requestBody:MicrosoftGraphDeviceConfigurationState):"Success"
   delete():"Success"
}
export interface operation553{
   get():ODataCountResponse
}
export interface operation554{
   post():"Success"
}
export interface operation555{
   post(requestBody:{keepUserData?: boolean,}):"Success"
}
export interface operation556{
   post(requestBody:{userPrincipalName?: string,}):"Success"
}
export interface operation557{
   post():"Success"
}
export interface operation558{
   post():"Success"
}
export interface operation559{
   post():"Success"
}
export interface operation560{
   post():"Success"
}
export interface operation561{
   post():"Success"
}
export interface operation562{
   post():"Success"
}
export interface operation563{
   post():"Success"
}
export interface operation564{
   post():"Success"
}
export interface operation565{
   post():"Success"
}
export interface operation566{
   post():"Success"
}
export interface operation567{
   post():"Success"
}
export interface operation568{
   post(requestBody:{updateWindowsDeviceAccountActionParameter?: MicrosoftGraphUpdateWindowsDeviceAccountActionParameter,}):"Success"
}
export interface operation569{
   post(requestBody:{quickScan?: boolean,}):"Success"
}
export interface operation570{
   post():"Success"
}
export interface operation571{
   post(requestBody:{keepEnrollmentData?: boolean,keepUserData?: boolean,macOsUnlockCode?: string,persistEsimDataPlan?: boolean,}):"Success"
}
export interface operation572{
   get():ODataCountResponse
}
export interface operation573{
   get():{value?: MicrosoftGraphRolePermission[],}
}
export interface operation574{
   get():{value?: boolean,}
}
export interface operation575{
   get():MicrosoftGraphMobileThreatDefenseConnectorCollectionResponse
   post(requestBody:MicrosoftGraphMobileThreatDefenseConnector):MicrosoftGraphMobileThreatDefenseConnector
}
export interface operation576{
   get():MicrosoftGraphMobileThreatDefenseConnector
   patch(requestBody:MicrosoftGraphMobileThreatDefenseConnector):"Success"
   delete():"Success"
}
export interface operation577{
   get():ODataCountResponse
}
export interface operation578{
   get():MicrosoftGraphNotificationMessageTemplateCollectionResponse
   post(requestBody:MicrosoftGraphNotificationMessageTemplate):MicrosoftGraphNotificationMessageTemplate
}
export interface operation579{
   get():MicrosoftGraphNotificationMessageTemplate
   patch(requestBody:MicrosoftGraphNotificationMessageTemplate):"Success"
   delete():"Success"
}
export interface operation580{
   get():MicrosoftGraphLocalizedNotificationMessageCollectionResponse
   post(requestBody:MicrosoftGraphLocalizedNotificationMessage):MicrosoftGraphLocalizedNotificationMessage
}
export interface operation581{
   get():MicrosoftGraphLocalizedNotificationMessage
   patch(requestBody:MicrosoftGraphLocalizedNotificationMessage):"Success"
   delete():"Success"
}
export interface operation582{
   get():ODataCountResponse
}
export interface operation583{
   post():"Success"
}
export interface operation584{
   get():ODataCountResponse
}
export interface operation585{
   get():MicrosoftGraphRemoteAssistancePartnerCollectionResponse
   post(requestBody:MicrosoftGraphRemoteAssistancePartner):MicrosoftGraphRemoteAssistancePartner
}
export interface operation586{
   get():MicrosoftGraphRemoteAssistancePartner
   patch(requestBody:MicrosoftGraphRemoteAssistancePartner):"Success"
   delete():"Success"
}
export interface operation587{
   post():"Success"
}
export interface operation588{
   post():"Success"
}
export interface operation589{
   get():ODataCountResponse
}
export interface operation590{
   get():MicrosoftGraphDeviceManagementReports
   patch(requestBody:MicrosoftGraphDeviceManagementReports):"Success"
   delete():"Success"
}
export interface operation591{
   get():MicrosoftGraphDeviceManagementExportJobCollectionResponse
   post(requestBody:MicrosoftGraphDeviceManagementExportJob):MicrosoftGraphDeviceManagementExportJob
}
export interface operation592{
   get():MicrosoftGraphDeviceManagementExportJob
   patch(requestBody:MicrosoftGraphDeviceManagementExportJob):"Success"
   delete():"Success"
}
export interface operation593{
   get():ODataCountResponse
}
export interface operation594{
   post(requestBody:{id?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,}):{value?: string,}
}
export interface operation595{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation596{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation597{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation598{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation599{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation600{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation601{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation602{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation603{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation604{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,filter?: string,}):{value?: string,}
}
export interface operation605{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation606{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation607{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation608{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation609{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation610{
   post(requestBody:{name?: string,select?: string[],search?: string,groupBy?: string[],orderBy?: string[],skip?: number,top?: number,sessionId?: string,filter?: string,}):{value?: string,}
}
export interface operation611{
   get():MicrosoftGraphResourceOperationCollectionResponse
   post(requestBody:MicrosoftGraphResourceOperation):MicrosoftGraphResourceOperation
}
export interface operation612{
   get():MicrosoftGraphResourceOperation
   patch(requestBody:MicrosoftGraphResourceOperation):"Success"
   delete():"Success"
}
export interface operation613{
   get():ODataCountResponse
}
export interface operation614{
   get():MicrosoftGraphDeviceAndAppManagementRoleAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphDeviceAndAppManagementRoleAssignment):MicrosoftGraphDeviceAndAppManagementRoleAssignment
}
export interface operation615{
   get():MicrosoftGraphDeviceAndAppManagementRoleAssignment
   patch(requestBody:MicrosoftGraphDeviceAndAppManagementRoleAssignment):"Success"
   delete():"Success"
}
export interface operation616{
   get():ODataCountResponse
}
export interface operation617{
   get():MicrosoftGraphRoleDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphRoleDefinition):MicrosoftGraphRoleDefinition
}
export interface operation618{
   get():MicrosoftGraphRoleDefinition
   patch(requestBody:MicrosoftGraphRoleDefinition):"Success"
   delete():"Success"
}
export interface operation619{
   get():MicrosoftGraphRoleAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphRoleAssignment):MicrosoftGraphRoleAssignment
}
export interface operation620{
   get():MicrosoftGraphRoleAssignment
   patch(requestBody:MicrosoftGraphRoleAssignment):"Success"
   delete():"Success"
}
export interface operation621{
   get():MicrosoftGraphRoleDefinition
}
export interface operation622{
   get():ODataCountResponse
}
export interface operation623{
   get():ODataCountResponse
}
export interface operation624{
   get():MicrosoftGraphSoftwareUpdateStatusSummary
}
export interface operation625{
   get():MicrosoftGraphTelecomExpenseManagementPartnerCollectionResponse
   post(requestBody:MicrosoftGraphTelecomExpenseManagementPartner):MicrosoftGraphTelecomExpenseManagementPartner
}
export interface operation626{
   get():MicrosoftGraphTelecomExpenseManagementPartner
   patch(requestBody:MicrosoftGraphTelecomExpenseManagementPartner):"Success"
   delete():"Success"
}
export interface operation627{
   get():ODataCountResponse
}
export interface operation628{
   get():MicrosoftGraphTermsAndConditionsCollectionResponse
   post(requestBody:MicrosoftGraphTermsAndConditions):MicrosoftGraphTermsAndConditions
}
export interface operation629{
   get():MicrosoftGraphTermsAndConditions
   patch(requestBody:MicrosoftGraphTermsAndConditions):"Success"
   delete():"Success"
}
export interface operation630{
   get():MicrosoftGraphTermsAndConditionsAcceptanceStatusCollectionResponse
   post(requestBody:MicrosoftGraphTermsAndConditionsAcceptanceStatus):MicrosoftGraphTermsAndConditionsAcceptanceStatus
}
export interface operation631{
   get():MicrosoftGraphTermsAndConditionsAcceptanceStatus
   patch(requestBody:MicrosoftGraphTermsAndConditionsAcceptanceStatus):"Success"
   delete():"Success"
}
export interface operation632{
   get():MicrosoftGraphTermsAndConditions
}
export interface operation633{
   get():ODataCountResponse
}
export interface operation634{
   get():MicrosoftGraphTermsAndConditionsAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphTermsAndConditionsAssignment):MicrosoftGraphTermsAndConditionsAssignment
}
export interface operation635{
   get():MicrosoftGraphTermsAndConditionsAssignment
   patch(requestBody:MicrosoftGraphTermsAndConditionsAssignment):"Success"
   delete():"Success"
}
export interface operation636{
   get():ODataCountResponse
}
export interface operation637{
   get():ODataCountResponse
}
export interface operation638{
   get():MicrosoftGraphDeviceManagementTroubleshootingEventCollectionResponse
   post(requestBody:MicrosoftGraphDeviceManagementTroubleshootingEvent):MicrosoftGraphDeviceManagementTroubleshootingEvent
}
export interface operation639{
   get():MicrosoftGraphDeviceManagementTroubleshootingEvent
   patch(requestBody:MicrosoftGraphDeviceManagementTroubleshootingEvent):"Success"
   delete():"Success"
}
export interface operation640{
   get():ODataCountResponse
}
export interface operation641{
   get():MicrosoftGraphWindowsAutopilotDeviceIdentityCollectionResponse
   post(requestBody:MicrosoftGraphWindowsAutopilotDeviceIdentity):MicrosoftGraphWindowsAutopilotDeviceIdentity
}
export interface operation642{
   get():MicrosoftGraphWindowsAutopilotDeviceIdentity
   patch(requestBody:MicrosoftGraphWindowsAutopilotDeviceIdentity):"Success"
   delete():"Success"
}
export interface operation643{
   post(requestBody:{userPrincipalName?: string,addressableUserName?: string,}):"Success"
}
export interface operation644{
   post():"Success"
}
export interface operation645{
   post(requestBody:{userPrincipalName?: string,addressableUserName?: string,groupTag?: string,displayName?: string,}):"Success"
}
export interface operation646{
   get():ODataCountResponse
}
export interface operation647{
   get():MicrosoftGraphWindowsInformationProtectionAppLearningSummaryCollectionResponse
   post(requestBody:MicrosoftGraphWindowsInformationProtectionAppLearningSummary):MicrosoftGraphWindowsInformationProtectionAppLearningSummary
}
export interface operation648{
   get():MicrosoftGraphWindowsInformationProtectionAppLearningSummary
   patch(requestBody:MicrosoftGraphWindowsInformationProtectionAppLearningSummary):"Success"
   delete():"Success"
}
export interface operation649{
   get():ODataCountResponse
}
export interface operation650{
   get():MicrosoftGraphWindowsInformationProtectionNetworkLearningSummaryCollectionResponse
   post(requestBody:MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary):MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary
}
export interface operation651{
   get():MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary
   patch(requestBody:MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary):"Success"
   delete():"Success"
}
export interface operation652{
   get():ODataCountResponse
}
export interface operation653{
   get():MicrosoftGraphDeviceCollectionResponse
   post(requestBody:MicrosoftGraphDevice):MicrosoftGraphDevice
}
export interface operation654{
   get():MicrosoftGraphDevice
   patch(requestBody:MicrosoftGraphDevice):"Success"
   delete():"Success"
}
export interface operation655{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation656{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation657{
   get():ODataCountResponse
}
export interface operation658{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation659{
   get():MicrosoftGraphDirectoryObject
}
export interface operation660{
   get():MicrosoftGraphApplication
}
export interface operation661{
   get():MicrosoftGraphDevice
}
export interface operation662{
   get():MicrosoftGraphGroup
}
export interface operation663{
   get():MicrosoftGraphOrgContact
}
export interface operation664{
   get():MicrosoftGraphServicePrincipal
}
export interface operation665{
   get():MicrosoftGraphUser
}
export interface operation666{
   get():ODataCountResponse
}
export interface operation667{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation668{
   get():ODataCountResponse
}
export interface operation669{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation670{
   get():ODataCountResponse
}
export interface operation671{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation672{
   get():ODataCountResponse
}
export interface operation673{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation674{
   get():ODataCountResponse
}
export interface operation675{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation676{
   get():ODataCountResponse
}
export interface operation677{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation678{
   get():ODataCountResponse
}
export interface operation679{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation680{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation681{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation682{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation683{
   post():{}
}
export interface operation684{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation685{
   delete():"Success"
}
export interface operation686{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation687{
   get():MicrosoftGraphEndpoint
}
export interface operation688{
   get():MicrosoftGraphServicePrincipal
}
export interface operation689{
   get():MicrosoftGraphUser
}
export interface operation690{
   get():ODataCountResponse
}
export interface operation691{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation692{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation693{
   get():ODataCountResponse
}
export interface operation694{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation695{
   get():ODataCountResponse
}
export interface operation696{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation697{
   get():ODataCountResponse
}
export interface operation698{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation699{
   get():ODataCountResponse
}
export interface operation700{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation701{
   get():MicrosoftGraphDirectoryObject
}
export interface operation702{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation703{
   get():MicrosoftGraphEndpoint
}
export interface operation704{
   get():MicrosoftGraphServicePrincipal
}
export interface operation705{
   get():MicrosoftGraphUser
}
export interface operation706{
   get():ODataCountResponse
}
export interface operation707{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation708{
   get():ODataCountResponse
}
export interface operation709{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation710{
   get():ODataCountResponse
}
export interface operation711{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation712{
   get():ODataCountResponse
}
export interface operation713{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation714{
   get():ODataCountResponse
}
export interface operation715{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation716{
   get():MicrosoftGraphDirectoryObject
}
export interface operation717{
   get():MicrosoftGraphApplication
}
export interface operation718{
   get():MicrosoftGraphDevice
}
export interface operation719{
   get():MicrosoftGraphGroup
}
export interface operation720{
   get():MicrosoftGraphOrgContact
}
export interface operation721{
   get():MicrosoftGraphServicePrincipal
}
export interface operation722{
   get():MicrosoftGraphUser
}
export interface operation723{
   get():ODataCountResponse
}
export interface operation724{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation725{
   get():ODataCountResponse
}
export interface operation726{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation727{
   get():ODataCountResponse
}
export interface operation728{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation729{
   get():ODataCountResponse
}
export interface operation730{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation731{
   get():ODataCountResponse
}
export interface operation732{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation733{
   get():ODataCountResponse
}
export interface operation734{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation735{
   get():ODataCountResponse
}
export interface operation736{
   get():ODataCountResponse
}
export interface operation737{
   get():{value?: MicrosoftGraphDevice[],}
}
export interface operation738{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation739{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation740{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation741{
   get():MicrosoftGraphDirectory
   patch(requestBody:MicrosoftGraphDirectory):"Success"
}
export interface operation742{
   get():MicrosoftGraphAdministrativeUnitCollectionResponse
   post(requestBody:MicrosoftGraphAdministrativeUnit):MicrosoftGraphAdministrativeUnit
}
export interface operation743{
   get():MicrosoftGraphAdministrativeUnit
   patch(requestBody:MicrosoftGraphAdministrativeUnit):"Success"
   delete():"Success"
}
export interface operation744{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation745{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation746{
   get():ODataCountResponse
}
export interface operation747{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation748{
   delete():"Success"
}
export interface operation749{
   get():MicrosoftGraphApplication
}
export interface operation750{
   get():MicrosoftGraphDevice
}
export interface operation751{
   get():MicrosoftGraphGroup
}
export interface operation752{
   get():MicrosoftGraphOrgContact
}
export interface operation753{
   get():MicrosoftGraphServicePrincipal
}
export interface operation754{
   get():MicrosoftGraphUser
}
export interface operation755{
   get():ODataCountResponse
}
export interface operation756{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation757{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation758{
   get():ODataCountResponse
}
export interface operation759{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation760{
   get():ODataCountResponse
}
export interface operation761{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation762{
   get():ODataCountResponse
}
export interface operation763{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation764{
   get():ODataCountResponse
}
export interface operation765{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation766{
   get():ODataCountResponse
}
export interface operation767{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation768{
   get():ODataCountResponse
}
export interface operation769{
   get():MicrosoftGraphScopedRoleMembershipCollectionResponse
   post(requestBody:MicrosoftGraphScopedRoleMembership):MicrosoftGraphScopedRoleMembership
}
export interface operation770{
   get():MicrosoftGraphScopedRoleMembership
   patch(requestBody:MicrosoftGraphScopedRoleMembership):"Success"
   delete():"Success"
}
export interface operation771{
   get():ODataCountResponse
}
export interface operation772{
   get():ODataCountResponse
}
export interface operation773{
   get():{value?: MicrosoftGraphAdministrativeUnit[],}
}
export interface operation774{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
   post(requestBody:MicrosoftGraphDirectoryObject):MicrosoftGraphDirectoryObject
}
export interface operation775{
   get():MicrosoftGraphDirectoryObject
   patch(requestBody:MicrosoftGraphDirectoryObject):"Success"
   delete():"Success"
}
export interface operation776{
   get():MicrosoftGraphApplication
}
export interface operation777{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation778{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation779{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation780{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation781{
   get():MicrosoftGraphGroup
}
export interface operation782{
   post():{}
}
export interface operation783{
   get():MicrosoftGraphUser
}
export interface operation784{
   get():ODataCountResponse
}
export interface operation785{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation786{
   get():ODataCountResponse
}
export interface operation787{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation788{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation789{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation790{
   get():ODataCountResponse
}
export interface operation791{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation792{
   get():ODataCountResponse
}
export interface operation793{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation794{
   get():MicrosoftGraphIdentityProviderBaseCollectionResponse
   post(requestBody:MicrosoftGraphIdentityProviderBase):MicrosoftGraphIdentityProviderBase
}
export interface operation795{
   get():MicrosoftGraphIdentityProviderBase
   patch(requestBody:MicrosoftGraphIdentityProviderBase):"Success"
   delete():"Success"
}
export interface operation796{
   get():ODataCountResponse
}
export interface operation797{
   get():{value?: string[],}
}
export interface operation798{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
   post(requestBody:MicrosoftGraphDirectoryObject):MicrosoftGraphDirectoryObject
}
export interface operation799{
   get():MicrosoftGraphDirectoryObject
   patch(requestBody:MicrosoftGraphDirectoryObject):"Success"
   delete():"Success"
}
export interface operation800{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation801{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation802{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation803{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation804{
   post():{}
}
export interface operation805{
   get():ODataCountResponse
}
export interface operation806{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation807{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation808{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation809{
   get():MicrosoftGraphDirectoryRoleCollectionResponse
   post(requestBody:MicrosoftGraphDirectoryRole):MicrosoftGraphDirectoryRole
}
export interface operation810{
   get():MicrosoftGraphDirectoryRole
   patch(requestBody:MicrosoftGraphDirectoryRole):"Success"
   delete():"Success"
}
export interface operation811{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation812{
   delete():"Success"
}
export interface operation813{
   get():MicrosoftGraphApplication
}
export interface operation814{
   get():MicrosoftGraphDevice
}
export interface operation815{
   get():MicrosoftGraphGroup
}
export interface operation816{
   get():MicrosoftGraphOrgContact
}
export interface operation817{
   get():MicrosoftGraphServicePrincipal
}
export interface operation818{
   get():MicrosoftGraphUser
}
export interface operation819{
   get():ODataCountResponse
}
export interface operation820{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation821{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation822{
   get():ODataCountResponse
}
export interface operation823{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation824{
   get():ODataCountResponse
}
export interface operation825{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation826{
   get():ODataCountResponse
}
export interface operation827{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation828{
   get():ODataCountResponse
}
export interface operation829{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation830{
   get():ODataCountResponse
}
export interface operation831{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation832{
   get():ODataCountResponse
}
export interface operation833{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation834{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation835{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation836{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation837{
   post():{}
}
export interface operation838{
   get():MicrosoftGraphScopedRoleMembershipCollectionResponse
   post(requestBody:MicrosoftGraphScopedRoleMembership):MicrosoftGraphScopedRoleMembership
}
export interface operation839{
   get():MicrosoftGraphScopedRoleMembership
   patch(requestBody:MicrosoftGraphScopedRoleMembership):"Success"
   delete():"Success"
}
export interface operation840{
   get():ODataCountResponse
}
export interface operation841{
   get():ODataCountResponse
}
export interface operation842{
   get():{value?: MicrosoftGraphDirectoryRole[],}
}
export interface operation843{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation844{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation845{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation846{
   get():MicrosoftGraphDirectoryRoleTemplateCollectionResponse
   post(requestBody:MicrosoftGraphDirectoryRoleTemplate):MicrosoftGraphDirectoryRoleTemplate
}
export interface operation847{
   get():MicrosoftGraphDirectoryRoleTemplate
   patch(requestBody:MicrosoftGraphDirectoryRoleTemplate):"Success"
   delete():"Success"
}
export interface operation848{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation849{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation850{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation851{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation852{
   post():{}
}
export interface operation853{
   get():ODataCountResponse
}
export interface operation854{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation855{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation856{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation857{
   get():MicrosoftGraphDomainDnsRecordCollectionResponse
   post(requestBody:MicrosoftGraphDomainDnsRecord):MicrosoftGraphDomainDnsRecord
}
export interface operation858{
   get():MicrosoftGraphDomainDnsRecord
   patch(requestBody:MicrosoftGraphDomainDnsRecord):"Success"
   delete():"Success"
}
export interface operation859{
   get():ODataCountResponse
}
export interface operation860{
   get():MicrosoftGraphDomainCollectionResponse
   post(requestBody:MicrosoftGraphDomain):MicrosoftGraphDomain
}
export interface operation861{
   get():MicrosoftGraphDomain
   patch(requestBody:MicrosoftGraphDomain):"Success"
   delete():"Success"
}
export interface operation862{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation863{
   get():MicrosoftGraphDirectoryObject
}
export interface operation864{
   get():ODataCountResponse
}
export interface operation865{
   get():MicrosoftGraphInternalDomainFederationCollectionResponse
   post(requestBody:MicrosoftGraphInternalDomainFederation):MicrosoftGraphInternalDomainFederation
}
export interface operation866{
   get():MicrosoftGraphInternalDomainFederation
   patch(requestBody:MicrosoftGraphInternalDomainFederation):"Success"
   delete():"Success"
}
export interface operation867{
   get():ODataCountResponse
}
export interface operation868{
   post(requestBody:{disableUserAccounts?: boolean,}):"Success"
}
export interface operation869{
   post():{}
}
export interface operation870{
   get():MicrosoftGraphDomainDnsRecordCollectionResponse
   post(requestBody:MicrosoftGraphDomainDnsRecord):MicrosoftGraphDomainDnsRecord
}
export interface operation871{
   get():MicrosoftGraphDomainDnsRecord
   patch(requestBody:MicrosoftGraphDomainDnsRecord):"Success"
   delete():"Success"
}
export interface operation872{
   get():ODataCountResponse
}
export interface operation873{
   get():MicrosoftGraphDomainDnsRecordCollectionResponse
   post(requestBody:MicrosoftGraphDomainDnsRecord):MicrosoftGraphDomainDnsRecord
}
export interface operation874{
   get():MicrosoftGraphDomainDnsRecord
   patch(requestBody:MicrosoftGraphDomainDnsRecord):"Success"
   delete():"Success"
}
export interface operation875{
   get():ODataCountResponse
}
export interface operation876{
   get():ODataCountResponse
}
export interface operation877{
   get():MicrosoftGraphDrive
   patch(requestBody:MicrosoftGraphDrive):"Success"
}
export interface operation878{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation879{
   get():MicrosoftGraphDriveItem
}
export interface operation880{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation881{
   get():ODataCountResponse
}
export interface operation882{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation883{
   get():MicrosoftGraphDriveItem
}
export interface operation884{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation885{
   get():ODataCountResponse
}
export interface operation886{
   get():MicrosoftGraphDriveItemCollectionResponse
   post(requestBody:MicrosoftGraphDriveItem):MicrosoftGraphDriveItem
}
export interface operation887{
   get():MicrosoftGraphDriveItem
   patch(requestBody:MicrosoftGraphDriveItem):"Success"
   delete():"Success"
}
export interface operation888{
   get():MicrosoftGraphItemAnalytics
}
export interface operation889{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation890{
   get():MicrosoftGraphDriveItem
}
export interface operation891{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation892{
   get():ODataCountResponse
}
export interface operation893{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation894{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation895{
   get():MicrosoftGraphItemAnalytics
}
export interface operation896{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation897{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation898{
   post():"Success"
}
export interface operation899{
   get():ODataCountResponse
}
export interface operation900{
   get():MicrosoftGraphDriveItem
}
export interface operation901{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation902{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation903{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation904{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation905{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation906{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation907{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation908{
   post():"Success"
}
export interface operation909{
   get():ODataCountResponse
}
export interface operation910{
   post(requestBody:{checkInAs?: string,comment?: string,}):"Success"
}
export interface operation911{
   post():"Success"
}
export interface operation912{
   post(requestBody:{name?: string,parentReference?: MicrosoftGraphItemReference,}):{}
}
export interface operation913{
   post(requestBody:{type?: string,scope?: string,expirationDateTime?: string,password?: string,message?: string,retainInheritedPermissions?: boolean,}):{}
}
export interface operation914{
   post(requestBody:{item?: MicrosoftGraphDriveItemUploadableProperties,}):{}
}
export interface operation915{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation916{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation917{
   post():{}
}
export interface operation918{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation919{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation920{
   post(requestBody:{requireSignIn?: boolean,roles?: string[],sendInvitation?: boolean,message?: string,recipients?: {alias?: string,email?: string,objectId?: string,"@odata.type"?: string,},retainInheritedPermissions?: boolean,expirationDateTime?: string,password?: string,}):{value?: MicrosoftGraphPermission[],}
}
export interface operation921{
   post(requestBody:{page?: string,zoom?: number | string,}):{}
}
export interface operation922{
   post(requestBody:{parentReference?: MicrosoftGraphItemReference,name?: string,}):{}
}
export interface operation923{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation924{
   post():"Success"
}
export interface operation925{
   post(requestBody:{challengeToken?: string,password?: string,}):"Success"
}
export interface operation926{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation927{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation928{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation929{
   get():ODataCountResponse
}
export interface operation930{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation931{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation932{
   post():"Success"
}
export interface operation933{
   get():ODataCountResponse
}
export interface operation934{
   get():MicrosoftGraphThumbnailSetCollectionResponse
   post(requestBody:MicrosoftGraphThumbnailSet):MicrosoftGraphThumbnailSet
}
export interface operation935{
   get():MicrosoftGraphThumbnailSet
   patch(requestBody:MicrosoftGraphThumbnailSet):"Success"
   delete():"Success"
}
export interface operation936{
   get():ODataCountResponse
}
export interface operation937{
   get():MicrosoftGraphDriveItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphDriveItemVersion):MicrosoftGraphDriveItemVersion
}
export interface operation938{
   get():MicrosoftGraphDriveItemVersion
   patch(requestBody:MicrosoftGraphDriveItemVersion):"Success"
   delete():"Success"
}
export interface operation939{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation940{
   post():"Success"
}
export interface operation941{
   get():ODataCountResponse
}
export interface operation942{
   get():ODataCountResponse
}
export interface operation943{
   get():MicrosoftGraphList
   patch(requestBody:MicrosoftGraphList):"Success"
   delete():"Success"
}
export interface operation944{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation945{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation946{
   get():MicrosoftGraphColumnDefinition
}
export interface operation947{
   get():ODataCountResponse
}
export interface operation948{
   get():MicrosoftGraphContentTypeCollectionResponse
   post(requestBody:MicrosoftGraphContentType):MicrosoftGraphContentType
}
export interface operation949{
   get():MicrosoftGraphContentType
   patch(requestBody:MicrosoftGraphContentType):"Success"
   delete():"Success"
}
export interface operation950{
   get():MicrosoftGraphContentType
}
export interface operation951{
   get():MicrosoftGraphContentTypeCollectionResponse
}
export interface operation952{
   get():MicrosoftGraphContentType
}
export interface operation953{
   get():ODataCountResponse
}
export interface operation954{
   get():MicrosoftGraphColumnLinkCollectionResponse
   post(requestBody:MicrosoftGraphColumnLink):MicrosoftGraphColumnLink
}
export interface operation955{
   get():MicrosoftGraphColumnLink
   patch(requestBody:MicrosoftGraphColumnLink):"Success"
   delete():"Success"
}
export interface operation956{
   get():ODataCountResponse
}
export interface operation957{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
}
export interface operation958{
   get():MicrosoftGraphColumnDefinition
}
export interface operation959{
   get():ODataCountResponse
}
export interface operation960{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation961{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation962{
   get():MicrosoftGraphColumnDefinition
}
export interface operation963{
   get():ODataCountResponse
}
export interface operation964{
   post(requestBody:{hubSiteUrls?: string[],propagateToExistingLists?: boolean,}):"Success"
}
export interface operation965{
   post(requestBody:{sourceFile?: {driveId?: string,driveType?: string,id?: string,name?: string,path?: string,shareId?: string,sharepointIds?: MicrosoftGraphSharepointIds,siteId?: string,"@odata.type"?: string,},destinationFileName?: string,}):"Success"
}
export interface operation966{
   get():{value?: boolean,}
}
export interface operation967{
   post():"Success"
}
export interface operation968{
   post():"Success"
}
export interface operation969{
   get():ODataCountResponse
}
export interface operation970{
   post(requestBody:{contentType?: string,}):{}
}
export interface operation971{
   post(requestBody:{contentTypeId?: string,}):{}
}
export interface operation972{
   get():{value?: MicrosoftGraphContentType[],}
}
export interface operation973{
   get():MicrosoftGraphDrive
}
export interface operation974{
   get():MicrosoftGraphListItemCollectionResponse
   post(requestBody:MicrosoftGraphListItem):MicrosoftGraphListItem
}
export interface operation975{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation976{
   get():MicrosoftGraphItemAnalytics
}
export interface operation977{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation978{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation979{
   post():"Success"
}
export interface operation980{
   get():ODataCountResponse
}
export interface operation981{
   get():MicrosoftGraphDriveItem
}
export interface operation982{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation983{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation984{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation985{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation986{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation987{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation988{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation989{
   post():"Success"
}
export interface operation990{
   get():ODataCountResponse
}
export interface operation991{
   get():ODataCountResponse
}
export interface operation992{
   get():MicrosoftGraphRichLongRunningOperationCollectionResponse
   post(requestBody:MicrosoftGraphRichLongRunningOperation):MicrosoftGraphRichLongRunningOperation
}
export interface operation993{
   get():MicrosoftGraphRichLongRunningOperation
   patch(requestBody:MicrosoftGraphRichLongRunningOperation):"Success"
   delete():"Success"
}
export interface operation994{
   get():ODataCountResponse
}
export interface operation995{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation996{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation997{
   post():"Success"
}
export interface operation998{
   get():ODataCountResponse
}
export interface operation999{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1000{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1001{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1002{
   get():MicrosoftGraphDriveItem
   patch(requestBody:MicrosoftGraphDriveItem):"Success"
   delete():"Success"
}
export interface operation1003{
   get():MicrosoftGraphItemAnalytics
}
export interface operation1004{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation1005{
   get():MicrosoftGraphDriveItem
}
export interface operation1006{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1007{
   get():ODataCountResponse
}
export interface operation1008{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1009{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation1010{
   get():MicrosoftGraphItemAnalytics
}
export interface operation1011{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation1012{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation1013{
   post():"Success"
}
export interface operation1014{
   get():ODataCountResponse
}
export interface operation1015{
   get():MicrosoftGraphDriveItem
}
export interface operation1016{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1017{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1018{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1019{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1020{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation1021{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation1022{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1023{
   post():"Success"
}
export interface operation1024{
   get():ODataCountResponse
}
export interface operation1025{
   post(requestBody:{checkInAs?: string,comment?: string,}):"Success"
}
export interface operation1026{
   post():"Success"
}
export interface operation1027{
   post(requestBody:{name?: string,parentReference?: MicrosoftGraphItemReference,}):{}
}
export interface operation1028{
   post(requestBody:{type?: string,scope?: string,expirationDateTime?: string,password?: string,message?: string,retainInheritedPermissions?: boolean,}):{}
}
export interface operation1029{
   post(requestBody:{item?: MicrosoftGraphDriveItemUploadableProperties,}):{}
}
export interface operation1030{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1031{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1032{
   post():{}
}
export interface operation1033{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1034{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1035{
   post(requestBody:{requireSignIn?: boolean,roles?: string[],sendInvitation?: boolean,message?: string,recipients?: {alias?: string,email?: string,objectId?: string,"@odata.type"?: string,},retainInheritedPermissions?: boolean,expirationDateTime?: string,password?: string,}):{value?: MicrosoftGraphPermission[],}
}
export interface operation1036{
   post(requestBody:{page?: string,zoom?: number | string,}):{}
}
export interface operation1037{
   post(requestBody:{parentReference?: MicrosoftGraphItemReference,name?: string,}):{}
}
export interface operation1038{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1039{
   post():"Success"
}
export interface operation1040{
   post(requestBody:{challengeToken?: string,password?: string,}):"Success"
}
export interface operation1041{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation1042{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation1043{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation1044{
   get():ODataCountResponse
}
export interface operation1045{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation1046{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation1047{
   post():"Success"
}
export interface operation1048{
   get():ODataCountResponse
}
export interface operation1049{
   get():MicrosoftGraphThumbnailSetCollectionResponse
   post(requestBody:MicrosoftGraphThumbnailSet):MicrosoftGraphThumbnailSet
}
export interface operation1050{
   get():MicrosoftGraphThumbnailSet
   patch(requestBody:MicrosoftGraphThumbnailSet):"Success"
   delete():"Success"
}
export interface operation1051{
   get():ODataCountResponse
}
export interface operation1052{
   get():MicrosoftGraphDriveItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphDriveItemVersion):MicrosoftGraphDriveItemVersion
}
export interface operation1053{
   get():MicrosoftGraphDriveItemVersion
   patch(requestBody:MicrosoftGraphDriveItemVersion):"Success"
   delete():"Success"
}
export interface operation1054{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1055{
   post():"Success"
}
export interface operation1056{
   get():ODataCountResponse
}
export interface operation1057{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation1058{
   get():MicrosoftGraphDriveItem
}
export interface operation1059{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1060{
   get():ODataCountResponse
}
export interface operation1061{
   get():MicrosoftGraphDriveCollectionResponse
   post(requestBody:MicrosoftGraphDrive):MicrosoftGraphDrive
}
export interface operation1062{
   get():MicrosoftGraphDrive
   patch(requestBody:MicrosoftGraphDrive):"Success"
   delete():"Success"
}
export interface operation1063{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation1064{
   get():MicrosoftGraphDriveItem
}
export interface operation1065{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1066{
   get():ODataCountResponse
}
export interface operation1067{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation1068{
   get():MicrosoftGraphDriveItem
}
export interface operation1069{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1070{
   get():ODataCountResponse
}
export interface operation1071{
   get():MicrosoftGraphDriveItemCollectionResponse
   post(requestBody:MicrosoftGraphDriveItem):MicrosoftGraphDriveItem
}
export interface operation1072{
   get():MicrosoftGraphDriveItem
   patch(requestBody:MicrosoftGraphDriveItem):"Success"
   delete():"Success"
}
export interface operation1073{
   get():MicrosoftGraphItemAnalytics
}
export interface operation1074{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation1075{
   get():MicrosoftGraphDriveItem
}
export interface operation1076{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1077{
   get():ODataCountResponse
}
export interface operation1078{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1079{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation1080{
   get():MicrosoftGraphItemAnalytics
}
export interface operation1081{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation1082{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation1083{
   post():"Success"
}
export interface operation1084{
   get():ODataCountResponse
}
export interface operation1085{
   get():MicrosoftGraphDriveItem
}
export interface operation1086{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1087{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1088{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1089{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1090{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation1091{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation1092{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1093{
   post():"Success"
}
export interface operation1094{
   get():ODataCountResponse
}
export interface operation1095{
   post(requestBody:{checkInAs?: string,comment?: string,}):"Success"
}
export interface operation1096{
   post():"Success"
}
export interface operation1097{
   post(requestBody:{name?: string,parentReference?: MicrosoftGraphItemReference,}):{}
}
export interface operation1098{
   post(requestBody:{type?: string,scope?: string,expirationDateTime?: string,password?: string,message?: string,retainInheritedPermissions?: boolean,}):{}
}
export interface operation1099{
   post(requestBody:{item?: MicrosoftGraphDriveItemUploadableProperties,}):{}
}
export interface operation1100{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1101{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1102{
   post():{}
}
export interface operation1103{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1104{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1105{
   post(requestBody:{requireSignIn?: boolean,roles?: string[],sendInvitation?: boolean,message?: string,recipients?: {alias?: string,email?: string,objectId?: string,"@odata.type"?: string,},retainInheritedPermissions?: boolean,expirationDateTime?: string,password?: string,}):{value?: MicrosoftGraphPermission[],}
}
export interface operation1106{
   post(requestBody:{page?: string,zoom?: number | string,}):{}
}
export interface operation1107{
   post(requestBody:{parentReference?: MicrosoftGraphItemReference,name?: string,}):{}
}
export interface operation1108{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1109{
   post():"Success"
}
export interface operation1110{
   post(requestBody:{challengeToken?: string,password?: string,}):"Success"
}
export interface operation1111{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation1112{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation1113{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation1114{
   get():ODataCountResponse
}
export interface operation1115{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation1116{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation1117{
   post():"Success"
}
export interface operation1118{
   get():ODataCountResponse
}
export interface operation1119{
   get():MicrosoftGraphThumbnailSetCollectionResponse
   post(requestBody:MicrosoftGraphThumbnailSet):MicrosoftGraphThumbnailSet
}
export interface operation1120{
   get():MicrosoftGraphThumbnailSet
   patch(requestBody:MicrosoftGraphThumbnailSet):"Success"
   delete():"Success"
}
export interface operation1121{
   get():ODataCountResponse
}
export interface operation1122{
   get():MicrosoftGraphDriveItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphDriveItemVersion):MicrosoftGraphDriveItemVersion
}
export interface operation1123{
   get():MicrosoftGraphDriveItemVersion
   patch(requestBody:MicrosoftGraphDriveItemVersion):"Success"
   delete():"Success"
}
export interface operation1124{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1125{
   post():"Success"
}
export interface operation1126{
   get():ODataCountResponse
}
export interface operation1127{
   get():ODataCountResponse
}
export interface operation1128{
   get():MicrosoftGraphList
   patch(requestBody:MicrosoftGraphList):"Success"
   delete():"Success"
}
export interface operation1129{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation1130{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation1131{
   get():MicrosoftGraphColumnDefinition
}
export interface operation1132{
   get():ODataCountResponse
}
export interface operation1133{
   get():MicrosoftGraphContentTypeCollectionResponse
   post(requestBody:MicrosoftGraphContentType):MicrosoftGraphContentType
}
export interface operation1134{
   get():MicrosoftGraphContentType
   patch(requestBody:MicrosoftGraphContentType):"Success"
   delete():"Success"
}
export interface operation1135{
   get():MicrosoftGraphContentType
}
export interface operation1136{
   get():MicrosoftGraphContentTypeCollectionResponse
}
export interface operation1137{
   get():MicrosoftGraphContentType
}
export interface operation1138{
   get():ODataCountResponse
}
export interface operation1139{
   get():MicrosoftGraphColumnLinkCollectionResponse
   post(requestBody:MicrosoftGraphColumnLink):MicrosoftGraphColumnLink
}
export interface operation1140{
   get():MicrosoftGraphColumnLink
   patch(requestBody:MicrosoftGraphColumnLink):"Success"
   delete():"Success"
}
export interface operation1141{
   get():ODataCountResponse
}
export interface operation1142{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
}
export interface operation1143{
   get():MicrosoftGraphColumnDefinition
}
export interface operation1144{
   get():ODataCountResponse
}
export interface operation1145{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation1146{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation1147{
   get():MicrosoftGraphColumnDefinition
}
export interface operation1148{
   get():ODataCountResponse
}
export interface operation1149{
   post(requestBody:{hubSiteUrls?: string[],propagateToExistingLists?: boolean,}):"Success"
}
export interface operation1150{
   post(requestBody:{sourceFile?: {driveId?: string,driveType?: string,id?: string,name?: string,path?: string,shareId?: string,sharepointIds?: MicrosoftGraphSharepointIds,siteId?: string,"@odata.type"?: string,},destinationFileName?: string,}):"Success"
}
export interface operation1151{
   get():{value?: boolean,}
}
export interface operation1152{
   post():"Success"
}
export interface operation1153{
   post():"Success"
}
export interface operation1154{
   get():ODataCountResponse
}
export interface operation1155{
   post(requestBody:{contentType?: string,}):{}
}
export interface operation1156{
   post(requestBody:{contentTypeId?: string,}):{}
}
export interface operation1157{
   get():{value?: MicrosoftGraphContentType[],}
}
export interface operation1158{
   get():MicrosoftGraphDrive
}
export interface operation1159{
   get():MicrosoftGraphListItemCollectionResponse
   post(requestBody:MicrosoftGraphListItem):MicrosoftGraphListItem
}
export interface operation1160{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation1161{
   get():MicrosoftGraphItemAnalytics
}
export interface operation1162{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation1163{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation1164{
   post():"Success"
}
export interface operation1165{
   get():ODataCountResponse
}
export interface operation1166{
   get():MicrosoftGraphDriveItem
}
export interface operation1167{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1168{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1169{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1170{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1171{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation1172{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation1173{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1174{
   post():"Success"
}
export interface operation1175{
   get():ODataCountResponse
}
export interface operation1176{
   get():ODataCountResponse
}
export interface operation1177{
   get():MicrosoftGraphRichLongRunningOperationCollectionResponse
   post(requestBody:MicrosoftGraphRichLongRunningOperation):MicrosoftGraphRichLongRunningOperation
}
export interface operation1178{
   get():MicrosoftGraphRichLongRunningOperation
   patch(requestBody:MicrosoftGraphRichLongRunningOperation):"Success"
   delete():"Success"
}
export interface operation1179{
   get():ODataCountResponse
}
export interface operation1180{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation1181{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation1182{
   post():"Success"
}
export interface operation1183{
   get():ODataCountResponse
}
export interface operation1184{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1185{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1186{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1187{
   get():MicrosoftGraphDriveItem
   patch(requestBody:MicrosoftGraphDriveItem):"Success"
   delete():"Success"
}
export interface operation1188{
   get():MicrosoftGraphItemAnalytics
}
export interface operation1189{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation1190{
   get():MicrosoftGraphDriveItem
}
export interface operation1191{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1192{
   get():ODataCountResponse
}
export interface operation1193{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1194{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation1195{
   get():MicrosoftGraphItemAnalytics
}
export interface operation1196{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation1197{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation1198{
   post():"Success"
}
export interface operation1199{
   get():ODataCountResponse
}
export interface operation1200{
   get():MicrosoftGraphDriveItem
}
export interface operation1201{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1202{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1203{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1204{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1205{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation1206{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation1207{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1208{
   post():"Success"
}
export interface operation1209{
   get():ODataCountResponse
}
export interface operation1210{
   post(requestBody:{checkInAs?: string,comment?: string,}):"Success"
}
export interface operation1211{
   post():"Success"
}
export interface operation1212{
   post(requestBody:{name?: string,parentReference?: MicrosoftGraphItemReference,}):{}
}
export interface operation1213{
   post(requestBody:{type?: string,scope?: string,expirationDateTime?: string,password?: string,message?: string,retainInheritedPermissions?: boolean,}):{}
}
export interface operation1214{
   post(requestBody:{item?: MicrosoftGraphDriveItemUploadableProperties,}):{}
}
export interface operation1215{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1216{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1217{
   post():{}
}
export interface operation1218{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1219{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1220{
   post(requestBody:{requireSignIn?: boolean,roles?: string[],sendInvitation?: boolean,message?: string,recipients?: {alias?: string,email?: string,objectId?: string,"@odata.type"?: string,},retainInheritedPermissions?: boolean,expirationDateTime?: string,password?: string,}):{value?: MicrosoftGraphPermission[],}
}
export interface operation1221{
   post(requestBody:{page?: string,zoom?: number | string,}):{}
}
export interface operation1222{
   post(requestBody:{parentReference?: MicrosoftGraphItemReference,name?: string,}):{}
}
export interface operation1223{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1224{
   post():"Success"
}
export interface operation1225{
   post(requestBody:{challengeToken?: string,password?: string,}):"Success"
}
export interface operation1226{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation1227{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation1228{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation1229{
   get():ODataCountResponse
}
export interface operation1230{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation1231{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation1232{
   post():"Success"
}
export interface operation1233{
   get():ODataCountResponse
}
export interface operation1234{
   get():MicrosoftGraphThumbnailSetCollectionResponse
   post(requestBody:MicrosoftGraphThumbnailSet):MicrosoftGraphThumbnailSet
}
export interface operation1235{
   get():MicrosoftGraphThumbnailSet
   patch(requestBody:MicrosoftGraphThumbnailSet):"Success"
   delete():"Success"
}
export interface operation1236{
   get():ODataCountResponse
}
export interface operation1237{
   get():MicrosoftGraphDriveItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphDriveItemVersion):MicrosoftGraphDriveItemVersion
}
export interface operation1238{
   get():MicrosoftGraphDriveItemVersion
   patch(requestBody:MicrosoftGraphDriveItemVersion):"Success"
   delete():"Success"
}
export interface operation1239{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1240{
   post():"Success"
}
export interface operation1241{
   get():ODataCountResponse
}
export interface operation1242{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation1243{
   get():MicrosoftGraphDriveItem
}
export interface operation1244{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1245{
   get():ODataCountResponse
}
export interface operation1246{
   get():ODataCountResponse
}
export interface operation1247{
   get():MicrosoftGraphEducationRoot
   patch(requestBody:MicrosoftGraphEducationRoot):"Success"
}
export interface operation1248{
   get():MicrosoftGraphEducationClassCollectionResponse
   post(requestBody:MicrosoftGraphEducationClass):MicrosoftGraphEducationClass
}
export interface operation1249{
   get():MicrosoftGraphEducationClass
   patch(requestBody:MicrosoftGraphEducationClass):"Success"
   delete():"Success"
}
export interface operation1250{
   get():MicrosoftGraphEducationCategoryCollectionResponse
   post(requestBody:MicrosoftGraphEducationCategory):MicrosoftGraphEducationCategory
}
export interface operation1251{
   get():MicrosoftGraphEducationCategory
   patch(requestBody:MicrosoftGraphEducationCategory):"Success"
   delete():"Success"
}
export interface operation1252{
   get():ODataCountResponse
}
export interface operation1253{
   get():{value?: MicrosoftGraphEducationCategory[],}
}
export interface operation1254{
   get():MicrosoftGraphEducationAssignmentDefaults
   patch(requestBody:MicrosoftGraphEducationAssignmentDefaults):"Success"
   delete():"Success"
}
export interface operation1255{
   get():MicrosoftGraphEducationAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphEducationAssignment):MicrosoftGraphEducationAssignment
}
export interface operation1256{
   get():MicrosoftGraphEducationAssignment
   patch(requestBody:MicrosoftGraphEducationAssignment):"Success"
   delete():"Success"
}
export interface operation1257{
   get():MicrosoftGraphEducationCategoryCollectionResponse
   post(requestBody:MicrosoftGraphEducationCategory):MicrosoftGraphEducationCategory
}
export interface operation1258{
   delete():"Success"
}
export interface operation1259{
   get():ODataCountResponse
}
export interface operation1260{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation1261{
   get():{value?: MicrosoftGraphEducationCategory[],}
}
export interface operation1262{
   post():{}
}
export interface operation1263{
   post():{}
}
export interface operation1264{
   get():MicrosoftGraphEducationAssignmentResourceCollectionResponse
   post(requestBody:MicrosoftGraphEducationAssignmentResource):MicrosoftGraphEducationAssignmentResource
}
export interface operation1265{
   get():MicrosoftGraphEducationAssignmentResource
   patch(requestBody:MicrosoftGraphEducationAssignmentResource):"Success"
   delete():"Success"
}
export interface operation1266{
   get():ODataCountResponse
}
export interface operation1267{
   get():MicrosoftGraphEducationRubric
   patch(requestBody:MicrosoftGraphEducationRubric):"Success"
   delete():"Success"
}
export interface operation1268{
   get():{}
   put(requestBody:ReferenceUpdate):"Success"
   delete():"Success"
}
export interface operation1269{
   get():MicrosoftGraphEducationSubmissionCollectionResponse
   post(requestBody:MicrosoftGraphEducationSubmission):MicrosoftGraphEducationSubmission
}
export interface operation1270{
   get():MicrosoftGraphEducationSubmission
   patch(requestBody:MicrosoftGraphEducationSubmission):"Success"
   delete():"Success"
}
export interface operation1271{
   post():{}
}
export interface operation1272{
   post():{}
}
export interface operation1273{
   post():{}
}
export interface operation1274{
   post():{}
}
export interface operation1275{
   post():{}
}
export interface operation1276{
   get():MicrosoftGraphEducationOutcomeCollectionResponse
   post(requestBody:MicrosoftGraphEducationOutcome):MicrosoftGraphEducationOutcome
}
export interface operation1277{
   get():MicrosoftGraphEducationOutcome
   patch(requestBody:MicrosoftGraphEducationOutcome):"Success"
   delete():"Success"
}
export interface operation1278{
   get():ODataCountResponse
}
export interface operation1279{
   get():MicrosoftGraphEducationSubmissionResourceCollectionResponse
   post(requestBody:MicrosoftGraphEducationSubmissionResource):MicrosoftGraphEducationSubmissionResource
}
export interface operation1280{
   get():MicrosoftGraphEducationSubmissionResource
   patch(requestBody:MicrosoftGraphEducationSubmissionResource):"Success"
   delete():"Success"
}
export interface operation1281{
   get():ODataCountResponse
}
export interface operation1282{
   get():MicrosoftGraphEducationSubmissionResourceCollectionResponse
   post(requestBody:MicrosoftGraphEducationSubmissionResource):MicrosoftGraphEducationSubmissionResource
}
export interface operation1283{
   get():MicrosoftGraphEducationSubmissionResource
   patch(requestBody:MicrosoftGraphEducationSubmissionResource):"Success"
   delete():"Success"
}
export interface operation1284{
   get():ODataCountResponse
}
export interface operation1285{
   get():ODataCountResponse
}
export interface operation1286{
   get():ODataCountResponse
}
export interface operation1287{
   get():{value?: MicrosoftGraphEducationAssignment[],}
}
export interface operation1288{
   get():MicrosoftGraphEducationAssignmentSettings
   patch(requestBody:MicrosoftGraphEducationAssignmentSettings):"Success"
   delete():"Success"
}
export interface operation1289{
   get():MicrosoftGraphGroup
}
export interface operation1290{
   get():MicrosoftGraphEducationUserCollectionResponse
}
export interface operation1291{
   delete():"Success"
}
export interface operation1292{
   get():ODataCountResponse
}
export interface operation1293{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation1294{
   get():MicrosoftGraphEducationSchoolCollectionResponse
}
export interface operation1295{
   get():MicrosoftGraphEducationSchool
}
export interface operation1296{
   get():ODataCountResponse
}
export interface operation1297{
   get():MicrosoftGraphEducationUserCollectionResponse
}
export interface operation1298{
   delete():"Success"
}
export interface operation1299{
   get():ODataCountResponse
}
export interface operation1300{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation1301{
   get():ODataCountResponse
}
export interface operation1302{
   get():{value?: MicrosoftGraphEducationClass[],}
}
export interface operation1303{
   get():MicrosoftGraphEducationUser
   patch(requestBody:MicrosoftGraphEducationUser):"Success"
   delete():"Success"
}
export interface operation1304{
   get():MicrosoftGraphEducationAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphEducationAssignment):MicrosoftGraphEducationAssignment
}
export interface operation1305{
   get():MicrosoftGraphEducationAssignment
   patch(requestBody:MicrosoftGraphEducationAssignment):"Success"
   delete():"Success"
}
export interface operation1306{
   get():MicrosoftGraphEducationCategoryCollectionResponse
   post(requestBody:MicrosoftGraphEducationCategory):MicrosoftGraphEducationCategory
}
export interface operation1307{
   delete():"Success"
}
export interface operation1308{
   get():ODataCountResponse
}
export interface operation1309{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation1310{
   get():{value?: MicrosoftGraphEducationCategory[],}
}
export interface operation1311{
   post():{}
}
export interface operation1312{
   post():{}
}
export interface operation1313{
   get():MicrosoftGraphEducationAssignmentResourceCollectionResponse
   post(requestBody:MicrosoftGraphEducationAssignmentResource):MicrosoftGraphEducationAssignmentResource
}
export interface operation1314{
   get():MicrosoftGraphEducationAssignmentResource
   patch(requestBody:MicrosoftGraphEducationAssignmentResource):"Success"
   delete():"Success"
}
export interface operation1315{
   get():ODataCountResponse
}
export interface operation1316{
   get():MicrosoftGraphEducationRubric
   patch(requestBody:MicrosoftGraphEducationRubric):"Success"
   delete():"Success"
}
export interface operation1317{
   get():{}
   put(requestBody:ReferenceUpdate):"Success"
   delete():"Success"
}
export interface operation1318{
   get():MicrosoftGraphEducationSubmissionCollectionResponse
   post(requestBody:MicrosoftGraphEducationSubmission):MicrosoftGraphEducationSubmission
}
export interface operation1319{
   get():MicrosoftGraphEducationSubmission
   patch(requestBody:MicrosoftGraphEducationSubmission):"Success"
   delete():"Success"
}
export interface operation1320{
   post():{}
}
export interface operation1321{
   post():{}
}
export interface operation1322{
   post():{}
}
export interface operation1323{
   post():{}
}
export interface operation1324{
   post():{}
}
export interface operation1325{
   get():MicrosoftGraphEducationOutcomeCollectionResponse
   post(requestBody:MicrosoftGraphEducationOutcome):MicrosoftGraphEducationOutcome
}
export interface operation1326{
   get():MicrosoftGraphEducationOutcome
   patch(requestBody:MicrosoftGraphEducationOutcome):"Success"
   delete():"Success"
}
export interface operation1327{
   get():ODataCountResponse
}
export interface operation1328{
   get():MicrosoftGraphEducationSubmissionResourceCollectionResponse
   post(requestBody:MicrosoftGraphEducationSubmissionResource):MicrosoftGraphEducationSubmissionResource
}
export interface operation1329{
   get():MicrosoftGraphEducationSubmissionResource
   patch(requestBody:MicrosoftGraphEducationSubmissionResource):"Success"
   delete():"Success"
}
export interface operation1330{
   get():ODataCountResponse
}
export interface operation1331{
   get():MicrosoftGraphEducationSubmissionResourceCollectionResponse
   post(requestBody:MicrosoftGraphEducationSubmissionResource):MicrosoftGraphEducationSubmissionResource
}
export interface operation1332{
   get():MicrosoftGraphEducationSubmissionResource
   patch(requestBody:MicrosoftGraphEducationSubmissionResource):"Success"
   delete():"Success"
}
export interface operation1333{
   get():ODataCountResponse
}
export interface operation1334{
   get():ODataCountResponse
}
export interface operation1335{
   get():ODataCountResponse
}
export interface operation1336{
   get():{value?: MicrosoftGraphEducationAssignment[],}
}
export interface operation1337{
   get():MicrosoftGraphEducationClassCollectionResponse
}
export interface operation1338{
   get():MicrosoftGraphEducationClass
}
export interface operation1339{
   get():ODataCountResponse
}
export interface operation1340{
   get():MicrosoftGraphEducationRubricCollectionResponse
   post(requestBody:MicrosoftGraphEducationRubric):MicrosoftGraphEducationRubric
}
export interface operation1341{
   get():MicrosoftGraphEducationRubric
   patch(requestBody:MicrosoftGraphEducationRubric):"Success"
   delete():"Success"
}
export interface operation1342{
   get():ODataCountResponse
}
export interface operation1343{
   get():MicrosoftGraphEducationSchoolCollectionResponse
}
export interface operation1344{
   get():MicrosoftGraphEducationSchool
}
export interface operation1345{
   get():ODataCountResponse
}
export interface operation1346{
   get():MicrosoftGraphEducationClassCollectionResponse
}
export interface operation1347{
   get():MicrosoftGraphEducationClass
}
export interface operation1348{
   get():ODataCountResponse
}
export interface operation1349{
   get():MicrosoftGraphUser
}
export interface operation1350{
   get():MicrosoftGraphEducationSchoolCollectionResponse
   post(requestBody:MicrosoftGraphEducationSchool):MicrosoftGraphEducationSchool
}
export interface operation1351{
   get():MicrosoftGraphEducationSchool
   patch(requestBody:MicrosoftGraphEducationSchool):"Success"
   delete():"Success"
}
export interface operation1352{
   get():MicrosoftGraphAdministrativeUnit
}
export interface operation1353{
   get():MicrosoftGraphEducationClassCollectionResponse
}
export interface operation1354{
   delete():"Success"
}
export interface operation1355{
   get():ODataCountResponse
}
export interface operation1356{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation1357{
   get():MicrosoftGraphEducationUserCollectionResponse
}
export interface operation1358{
   delete():"Success"
}
export interface operation1359{
   get():ODataCountResponse
}
export interface operation1360{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation1361{
   get():ODataCountResponse
}
export interface operation1362{
   get():{value?: MicrosoftGraphEducationSchool[],}
}
export interface operation1363{
   get():MicrosoftGraphEducationUserCollectionResponse
   post(requestBody:MicrosoftGraphEducationUser):MicrosoftGraphEducationUser
}
export interface operation1364{
   get():MicrosoftGraphEducationUser
   patch(requestBody:MicrosoftGraphEducationUser):"Success"
   delete():"Success"
}
export interface operation1365{
   get():MicrosoftGraphEducationAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphEducationAssignment):MicrosoftGraphEducationAssignment
}
export interface operation1366{
   get():MicrosoftGraphEducationAssignment
   patch(requestBody:MicrosoftGraphEducationAssignment):"Success"
   delete():"Success"
}
export interface operation1367{
   get():MicrosoftGraphEducationCategoryCollectionResponse
   post(requestBody:MicrosoftGraphEducationCategory):MicrosoftGraphEducationCategory
}
export interface operation1368{
   delete():"Success"
}
export interface operation1369{
   get():ODataCountResponse
}
export interface operation1370{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation1371{
   get():{value?: MicrosoftGraphEducationCategory[],}
}
export interface operation1372{
   post():{}
}
export interface operation1373{
   post():{}
}
export interface operation1374{
   get():MicrosoftGraphEducationAssignmentResourceCollectionResponse
   post(requestBody:MicrosoftGraphEducationAssignmentResource):MicrosoftGraphEducationAssignmentResource
}
export interface operation1375{
   get():MicrosoftGraphEducationAssignmentResource
   patch(requestBody:MicrosoftGraphEducationAssignmentResource):"Success"
   delete():"Success"
}
export interface operation1376{
   get():ODataCountResponse
}
export interface operation1377{
   get():MicrosoftGraphEducationRubric
   patch(requestBody:MicrosoftGraphEducationRubric):"Success"
   delete():"Success"
}
export interface operation1378{
   get():{}
   put(requestBody:ReferenceUpdate):"Success"
   delete():"Success"
}
export interface operation1379{
   get():MicrosoftGraphEducationSubmissionCollectionResponse
   post(requestBody:MicrosoftGraphEducationSubmission):MicrosoftGraphEducationSubmission
}
export interface operation1380{
   get():MicrosoftGraphEducationSubmission
   patch(requestBody:MicrosoftGraphEducationSubmission):"Success"
   delete():"Success"
}
export interface operation1381{
   post():{}
}
export interface operation1382{
   post():{}
}
export interface operation1383{
   post():{}
}
export interface operation1384{
   post():{}
}
export interface operation1385{
   post():{}
}
export interface operation1386{
   get():MicrosoftGraphEducationOutcomeCollectionResponse
   post(requestBody:MicrosoftGraphEducationOutcome):MicrosoftGraphEducationOutcome
}
export interface operation1387{
   get():MicrosoftGraphEducationOutcome
   patch(requestBody:MicrosoftGraphEducationOutcome):"Success"
   delete():"Success"
}
export interface operation1388{
   get():ODataCountResponse
}
export interface operation1389{
   get():MicrosoftGraphEducationSubmissionResourceCollectionResponse
   post(requestBody:MicrosoftGraphEducationSubmissionResource):MicrosoftGraphEducationSubmissionResource
}
export interface operation1390{
   get():MicrosoftGraphEducationSubmissionResource
   patch(requestBody:MicrosoftGraphEducationSubmissionResource):"Success"
   delete():"Success"
}
export interface operation1391{
   get():ODataCountResponse
}
export interface operation1392{
   get():MicrosoftGraphEducationSubmissionResourceCollectionResponse
   post(requestBody:MicrosoftGraphEducationSubmissionResource):MicrosoftGraphEducationSubmissionResource
}
export interface operation1393{
   get():MicrosoftGraphEducationSubmissionResource
   patch(requestBody:MicrosoftGraphEducationSubmissionResource):"Success"
   delete():"Success"
}
export interface operation1394{
   get():ODataCountResponse
}
export interface operation1395{
   get():ODataCountResponse
}
export interface operation1396{
   get():ODataCountResponse
}
export interface operation1397{
   get():{value?: MicrosoftGraphEducationAssignment[],}
}
export interface operation1398{
   get():MicrosoftGraphEducationClassCollectionResponse
}
export interface operation1399{
   get():MicrosoftGraphEducationClass
}
export interface operation1400{
   get():ODataCountResponse
}
export interface operation1401{
   get():MicrosoftGraphEducationRubricCollectionResponse
   post(requestBody:MicrosoftGraphEducationRubric):MicrosoftGraphEducationRubric
}
export interface operation1402{
   get():MicrosoftGraphEducationRubric
   patch(requestBody:MicrosoftGraphEducationRubric):"Success"
   delete():"Success"
}
export interface operation1403{
   get():ODataCountResponse
}
export interface operation1404{
   get():MicrosoftGraphEducationSchoolCollectionResponse
}
export interface operation1405{
   get():MicrosoftGraphEducationSchool
}
export interface operation1406{
   get():ODataCountResponse
}
export interface operation1407{
   get():MicrosoftGraphEducationClassCollectionResponse
}
export interface operation1408{
   get():MicrosoftGraphEducationClass
}
export interface operation1409{
   get():ODataCountResponse
}
export interface operation1410{
   get():MicrosoftGraphUser
}
export interface operation1411{
   get():ODataCountResponse
}
export interface operation1412{
   get():{value?: MicrosoftGraphEducationUser[],}
}
export interface operation1413{
   get():MicrosoftGraphExternalConnectorsExternal
   patch(requestBody:MicrosoftGraphExternalConnectorsExternal):"Success"
}
export interface operation1414{
   get():MicrosoftGraphExternalConnectorsExternalConnectionCollectionResponse
   post(requestBody:MicrosoftGraphExternalConnectorsExternalConnection):MicrosoftGraphExternalConnectorsExternalConnection
}
export interface operation1415{
   get():MicrosoftGraphExternalConnectorsExternalConnection
   patch(requestBody:MicrosoftGraphExternalConnectorsExternalConnection):"Success"
   delete():"Success"
}
export interface operation1416{
   get():MicrosoftGraphExternalConnectorsExternalGroupCollectionResponse
   post(requestBody:MicrosoftGraphExternalConnectorsExternalGroup):MicrosoftGraphExternalConnectorsExternalGroup
}
export interface operation1417{
   get():MicrosoftGraphExternalConnectorsExternalGroup
   patch(requestBody:MicrosoftGraphExternalConnectorsExternalGroup):"Success"
   delete():"Success"
}
export interface operation1418{
   get():MicrosoftGraphExternalConnectorsIdentityCollectionResponse
   post(requestBody:MicrosoftGraphExternalConnectorsIdentity):MicrosoftGraphExternalConnectorsIdentity
}
export interface operation1419{
   get():MicrosoftGraphExternalConnectorsIdentity
   patch(requestBody:MicrosoftGraphExternalConnectorsIdentity):"Success"
   delete():"Success"
}
export interface operation1420{
   get():ODataCountResponse
}
export interface operation1421{
   get():ODataCountResponse
}
export interface operation1422{
   get():MicrosoftGraphExternalConnectorsExternalItemCollectionResponse
   post(requestBody:MicrosoftGraphExternalConnectorsExternalItem):MicrosoftGraphExternalConnectorsExternalItem
}
export interface operation1423{
   get():MicrosoftGraphExternalConnectorsExternalItem
   patch(requestBody:MicrosoftGraphExternalConnectorsExternalItem):"Success"
   delete():"Success"
}
export interface operation1424{
   get():ODataCountResponse
}
export interface operation1425{
   get():MicrosoftGraphExternalConnectorsConnectionOperationCollectionResponse
   post(requestBody:MicrosoftGraphExternalConnectorsConnectionOperation):MicrosoftGraphExternalConnectorsConnectionOperation
}
export interface operation1426{
   get():MicrosoftGraphExternalConnectorsConnectionOperation
   patch(requestBody:MicrosoftGraphExternalConnectorsConnectionOperation):"Success"
   delete():"Success"
}
export interface operation1427{
   get():ODataCountResponse
}
export interface operation1428{
   get():MicrosoftGraphExternalConnectorsSchema
   patch(requestBody:MicrosoftGraphExternalConnectorsSchema):"Success"
   delete():"Success"
}
export interface operation1429{
   get():ODataCountResponse
}
export interface operation1430{
   get():MicrosoftGraphGroupLifecyclePolicyCollectionResponse
   post(requestBody:MicrosoftGraphGroupLifecyclePolicy):MicrosoftGraphGroupLifecyclePolicy
}
export interface operation1431{
   get():MicrosoftGraphGroupLifecyclePolicy
   patch(requestBody:MicrosoftGraphGroupLifecyclePolicy):"Success"
   delete():"Success"
}
export interface operation1432{
   post(requestBody:{groupId?: string,}):{value?: boolean,}
}
export interface operation1433{
   post(requestBody:{groupId?: string,}):{value?: boolean,}
}
export interface operation1434{
   get():ODataCountResponse
}
export interface operation1435{
   get():MicrosoftGraphGroupCollectionResponse
   post(requestBody:MicrosoftGraphGroup):MicrosoftGraphGroup
}
export interface operation1436{
   get():MicrosoftGraphGroup
   patch(requestBody:MicrosoftGraphGroup):"Success"
   delete():"Success"
}
export interface operation1437{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation1438{
   delete():"Success"
}
export interface operation1439{
   get():ODataCountResponse
}
export interface operation1440{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation1441{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphAppRoleAssignment):MicrosoftGraphAppRoleAssignment
}
export interface operation1442{
   get():MicrosoftGraphAppRoleAssignment
   patch(requestBody:MicrosoftGraphAppRoleAssignment):"Success"
   delete():"Success"
}
export interface operation1443{
   get():ODataCountResponse
}
export interface operation1444{
   get():MicrosoftGraphCalendar
   patch(requestBody:MicrosoftGraphCalendar):"Success"
   delete():"Success"
}
export interface operation1445{
   get():MicrosoftGraphCalendarPermissionCollectionResponse
   post(requestBody:MicrosoftGraphCalendarPermission):MicrosoftGraphCalendarPermission
}
export interface operation1446{
   get():MicrosoftGraphCalendarPermission
   patch(requestBody:MicrosoftGraphCalendarPermission):"Success"
   delete():"Success"
}
export interface operation1447{
   get():ODataCountResponse
}
export interface operation1448{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation1449{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation1450{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation1451{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation1452{
   get():ODataCountResponse
}
export interface operation1453{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation1454{
   get():MicrosoftGraphCalendar
}
export interface operation1455{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation1456{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation1457{
   get():ODataCountResponse
}
export interface operation1458{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation1459{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation1460{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation1461{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation1462{
   get():ODataCountResponse
}
export interface operation1463{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation1464{
   get():MicrosoftGraphCalendar
}
export interface operation1465{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation1466{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation1467{
   get():ODataCountResponse
}
export interface operation1468{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation1469{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation1470{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1471{
   post():"Success"
}
export interface operation1472{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation1473{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation1474{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1475{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation1476{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1477{
   get():ODataCountResponse
}
export interface operation1478{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation1479{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1480{
   get():ODataCountResponse
}
export interface operation1481{
   get():ODataCountResponse
}
export interface operation1482{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation1483{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation1484{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation1485{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1486{
   post():"Success"
}
export interface operation1487{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation1488{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation1489{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1490{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation1491{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1492{
   get():ODataCountResponse
}
export interface operation1493{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation1494{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1495{
   get():ODataCountResponse
}
export interface operation1496{
   get():ODataCountResponse
}
export interface operation1497{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation1498{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation1499{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation1500{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation1501{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation1502{
   get():ODataCountResponse
}
export interface operation1503{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation1504{
   get():MicrosoftGraphCalendar
}
export interface operation1505{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation1506{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation1507{
   get():ODataCountResponse
}
export interface operation1508{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation1509{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation1510{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation1511{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation1512{
   get():ODataCountResponse
}
export interface operation1513{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation1514{
   get():MicrosoftGraphCalendar
}
export interface operation1515{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation1516{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation1517{
   get():ODataCountResponse
}
export interface operation1518{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation1519{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation1520{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1521{
   post():"Success"
}
export interface operation1522{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation1523{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation1524{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1525{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation1526{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1527{
   get():ODataCountResponse
}
export interface operation1528{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation1529{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1530{
   get():ODataCountResponse
}
export interface operation1531{
   get():ODataCountResponse
}
export interface operation1532{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation1533{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation1534{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation1535{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1536{
   post():"Success"
}
export interface operation1537{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation1538{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation1539{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1540{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation1541{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1542{
   get():ODataCountResponse
}
export interface operation1543{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation1544{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1545{
   get():ODataCountResponse
}
export interface operation1546{
   get():ODataCountResponse
}
export interface operation1547{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation1548{
   get():{value?: string[],}
}
export interface operation1549{
   post(requestBody:{Schedules?: string[],EndTime?: MicrosoftGraphDateTimeTimeZone,StartTime?: MicrosoftGraphDateTimeTimeZone,AvailabilityViewInterval?: number,}):{value?: MicrosoftGraphScheduleInformation[],}
}
export interface operation1550{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation1551{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1552{
   get():ODataCountResponse
}
export interface operation1553{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation1554{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1555{
   get():ODataCountResponse
}
export interface operation1556{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation1557{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation1558{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation1559{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation1560{
   get():ODataCountResponse
}
export interface operation1561{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation1562{
   get():MicrosoftGraphCalendar
}
export interface operation1563{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation1564{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation1565{
   get():ODataCountResponse
}
export interface operation1566{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation1567{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation1568{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation1569{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation1570{
   get():ODataCountResponse
}
export interface operation1571{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation1572{
   get():MicrosoftGraphCalendar
}
export interface operation1573{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation1574{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation1575{
   get():ODataCountResponse
}
export interface operation1576{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation1577{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation1578{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1579{
   post():"Success"
}
export interface operation1580{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation1581{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation1582{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1583{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation1584{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1585{
   get():ODataCountResponse
}
export interface operation1586{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation1587{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1588{
   get():ODataCountResponse
}
export interface operation1589{
   get():ODataCountResponse
}
export interface operation1590{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation1591{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation1592{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation1593{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1594{
   post():"Success"
}
export interface operation1595{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation1596{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation1597{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1598{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation1599{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1600{
   get():ODataCountResponse
}
export interface operation1601{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation1602{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1603{
   get():ODataCountResponse
}
export interface operation1604{
   get():ODataCountResponse
}
export interface operation1605{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation1606{
   get():MicrosoftGraphConversationCollectionResponse
   post(requestBody:MicrosoftGraphConversation):MicrosoftGraphConversation
}
export interface operation1607{
   get():MicrosoftGraphConversation
   patch(requestBody:MicrosoftGraphConversation):"Success"
   delete():"Success"
}
export interface operation1608{
   get():MicrosoftGraphConversationThreadCollectionResponse
   post(requestBody:MicrosoftGraphConversationThread):MicrosoftGraphConversationThread
}
export interface operation1609{
   get():MicrosoftGraphConversationThread
   patch(requestBody:MicrosoftGraphConversationThread):"Success"
   delete():"Success"
}
export interface operation1610{
   post(requestBody:{Post?: MicrosoftGraphPost,}):"Success"
}
export interface operation1611{
   get():MicrosoftGraphPostCollectionResponse
   post(requestBody:MicrosoftGraphPost):MicrosoftGraphPost
}
export interface operation1612{
   get():MicrosoftGraphPost
   patch(requestBody:MicrosoftGraphPost):"Success"
   delete():"Success"
}
export interface operation1613{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation1614{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation1615{
   get():ODataCountResponse
}
export interface operation1616{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation1617{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation1618{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation1619{
   get():ODataCountResponse
}
export interface operation1620{
   get():MicrosoftGraphPost
   patch(requestBody:MicrosoftGraphPost):"Success"
   delete():"Success"
}
export interface operation1621{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation1622{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation1623{
   get():ODataCountResponse
}
export interface operation1624{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation1625{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation1626{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation1627{
   get():ODataCountResponse
}
export interface operation1628{
   post(requestBody:{Comment?: string,ToRecipients?: {emailAddress?: MicrosoftGraphEmailAddress,"@odata.type"?: string,},}):"Success"
}
export interface operation1629{
   post(requestBody:{Post?: MicrosoftGraphPost,}):"Success"
}
export interface operation1630{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation1631{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1632{
   get():ODataCountResponse
}
export interface operation1633{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation1634{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1635{
   get():ODataCountResponse
}
export interface operation1636{
   post(requestBody:{Comment?: string,ToRecipients?: {emailAddress?: MicrosoftGraphEmailAddress,"@odata.type"?: string,},}):"Success"
}
export interface operation1637{
   post(requestBody:{Post?: MicrosoftGraphPost,}):"Success"
}
export interface operation1638{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation1639{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1640{
   get():ODataCountResponse
}
export interface operation1641{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation1642{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1643{
   get():ODataCountResponse
}
export interface operation1644{
   get():ODataCountResponse
}
export interface operation1645{
   get():ODataCountResponse
}
export interface operation1646{
   get():ODataCountResponse
}
export interface operation1647{
   get():MicrosoftGraphDirectoryObject
}
export interface operation1648{
   get():MicrosoftGraphDrive
}
export interface operation1649{
   get():MicrosoftGraphDriveCollectionResponse
   post(requestBody:MicrosoftGraphDrive):MicrosoftGraphDrive
}
export interface operation1650{
   get():MicrosoftGraphDrive
   patch(requestBody:MicrosoftGraphDrive):"Success"
   delete():"Success"
}
export interface operation1651{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation1652{
   get():MicrosoftGraphDriveItem
}
export interface operation1653{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1654{
   get():ODataCountResponse
}
export interface operation1655{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation1656{
   get():MicrosoftGraphDriveItem
}
export interface operation1657{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1658{
   get():ODataCountResponse
}
export interface operation1659{
   get():MicrosoftGraphDriveItemCollectionResponse
   post(requestBody:MicrosoftGraphDriveItem):MicrosoftGraphDriveItem
}
export interface operation1660{
   get():MicrosoftGraphDriveItem
   patch(requestBody:MicrosoftGraphDriveItem):"Success"
   delete():"Success"
}
export interface operation1661{
   get():MicrosoftGraphItemAnalytics
}
export interface operation1662{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation1663{
   get():MicrosoftGraphDriveItem
}
export interface operation1664{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1665{
   get():ODataCountResponse
}
export interface operation1666{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1667{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation1668{
   get():MicrosoftGraphItemAnalytics
}
export interface operation1669{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation1670{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation1671{
   post():"Success"
}
export interface operation1672{
   get():ODataCountResponse
}
export interface operation1673{
   get():MicrosoftGraphDriveItem
}
export interface operation1674{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1675{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1676{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1677{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1678{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation1679{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation1680{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1681{
   post():"Success"
}
export interface operation1682{
   get():ODataCountResponse
}
export interface operation1683{
   post(requestBody:{checkInAs?: string,comment?: string,}):"Success"
}
export interface operation1684{
   post():"Success"
}
export interface operation1685{
   post(requestBody:{name?: string,parentReference?: MicrosoftGraphItemReference,}):{}
}
export interface operation1686{
   post(requestBody:{type?: string,scope?: string,expirationDateTime?: string,password?: string,message?: string,retainInheritedPermissions?: boolean,}):{}
}
export interface operation1687{
   post(requestBody:{item?: MicrosoftGraphDriveItemUploadableProperties,}):{}
}
export interface operation1688{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1689{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1690{
   post():{}
}
export interface operation1691{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1692{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1693{
   post(requestBody:{requireSignIn?: boolean,roles?: string[],sendInvitation?: boolean,message?: string,recipients?: {alias?: string,email?: string,objectId?: string,"@odata.type"?: string,},retainInheritedPermissions?: boolean,expirationDateTime?: string,password?: string,}):{value?: MicrosoftGraphPermission[],}
}
export interface operation1694{
   post(requestBody:{page?: string,zoom?: number | string,}):{}
}
export interface operation1695{
   post(requestBody:{parentReference?: MicrosoftGraphItemReference,name?: string,}):{}
}
export interface operation1696{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1697{
   post():"Success"
}
export interface operation1698{
   post(requestBody:{challengeToken?: string,password?: string,}):"Success"
}
export interface operation1699{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation1700{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation1701{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation1702{
   get():ODataCountResponse
}
export interface operation1703{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation1704{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation1705{
   post():"Success"
}
export interface operation1706{
   get():ODataCountResponse
}
export interface operation1707{
   get():MicrosoftGraphThumbnailSetCollectionResponse
   post(requestBody:MicrosoftGraphThumbnailSet):MicrosoftGraphThumbnailSet
}
export interface operation1708{
   get():MicrosoftGraphThumbnailSet
   patch(requestBody:MicrosoftGraphThumbnailSet):"Success"
   delete():"Success"
}
export interface operation1709{
   get():ODataCountResponse
}
export interface operation1710{
   get():MicrosoftGraphDriveItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphDriveItemVersion):MicrosoftGraphDriveItemVersion
}
export interface operation1711{
   get():MicrosoftGraphDriveItemVersion
   patch(requestBody:MicrosoftGraphDriveItemVersion):"Success"
   delete():"Success"
}
export interface operation1712{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1713{
   post():"Success"
}
export interface operation1714{
   get():ODataCountResponse
}
export interface operation1715{
   get():ODataCountResponse
}
export interface operation1716{
   get():MicrosoftGraphList
   patch(requestBody:MicrosoftGraphList):"Success"
   delete():"Success"
}
export interface operation1717{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation1718{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation1719{
   get():MicrosoftGraphColumnDefinition
}
export interface operation1720{
   get():ODataCountResponse
}
export interface operation1721{
   get():MicrosoftGraphContentTypeCollectionResponse
   post(requestBody:MicrosoftGraphContentType):MicrosoftGraphContentType
}
export interface operation1722{
   get():MicrosoftGraphContentType
   patch(requestBody:MicrosoftGraphContentType):"Success"
   delete():"Success"
}
export interface operation1723{
   get():MicrosoftGraphContentType
}
export interface operation1724{
   get():MicrosoftGraphContentTypeCollectionResponse
}
export interface operation1725{
   get():MicrosoftGraphContentType
}
export interface operation1726{
   get():ODataCountResponse
}
export interface operation1727{
   get():MicrosoftGraphColumnLinkCollectionResponse
   post(requestBody:MicrosoftGraphColumnLink):MicrosoftGraphColumnLink
}
export interface operation1728{
   get():MicrosoftGraphColumnLink
   patch(requestBody:MicrosoftGraphColumnLink):"Success"
   delete():"Success"
}
export interface operation1729{
   get():ODataCountResponse
}
export interface operation1730{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
}
export interface operation1731{
   get():MicrosoftGraphColumnDefinition
}
export interface operation1732{
   get():ODataCountResponse
}
export interface operation1733{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation1734{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation1735{
   get():MicrosoftGraphColumnDefinition
}
export interface operation1736{
   get():ODataCountResponse
}
export interface operation1737{
   post(requestBody:{hubSiteUrls?: string[],propagateToExistingLists?: boolean,}):"Success"
}
export interface operation1738{
   post(requestBody:{sourceFile?: {driveId?: string,driveType?: string,id?: string,name?: string,path?: string,shareId?: string,sharepointIds?: MicrosoftGraphSharepointIds,siteId?: string,"@odata.type"?: string,},destinationFileName?: string,}):"Success"
}
export interface operation1739{
   get():{value?: boolean,}
}
export interface operation1740{
   post():"Success"
}
export interface operation1741{
   post():"Success"
}
export interface operation1742{
   get():ODataCountResponse
}
export interface operation1743{
   post(requestBody:{contentType?: string,}):{}
}
export interface operation1744{
   post(requestBody:{contentTypeId?: string,}):{}
}
export interface operation1745{
   get():{value?: MicrosoftGraphContentType[],}
}
export interface operation1746{
   get():MicrosoftGraphDrive
}
export interface operation1747{
   get():MicrosoftGraphListItemCollectionResponse
   post(requestBody:MicrosoftGraphListItem):MicrosoftGraphListItem
}
export interface operation1748{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation1749{
   get():MicrosoftGraphItemAnalytics
}
export interface operation1750{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation1751{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation1752{
   post():"Success"
}
export interface operation1753{
   get():ODataCountResponse
}
export interface operation1754{
   get():MicrosoftGraphDriveItem
}
export interface operation1755{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1756{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1757{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1758{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1759{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation1760{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation1761{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1762{
   post():"Success"
}
export interface operation1763{
   get():ODataCountResponse
}
export interface operation1764{
   get():ODataCountResponse
}
export interface operation1765{
   get():MicrosoftGraphRichLongRunningOperationCollectionResponse
   post(requestBody:MicrosoftGraphRichLongRunningOperation):MicrosoftGraphRichLongRunningOperation
}
export interface operation1766{
   get():MicrosoftGraphRichLongRunningOperation
   patch(requestBody:MicrosoftGraphRichLongRunningOperation):"Success"
   delete():"Success"
}
export interface operation1767{
   get():ODataCountResponse
}
export interface operation1768{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation1769{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation1770{
   post():"Success"
}
export interface operation1771{
   get():ODataCountResponse
}
export interface operation1772{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1773{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1774{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1775{
   get():MicrosoftGraphDriveItem
   patch(requestBody:MicrosoftGraphDriveItem):"Success"
   delete():"Success"
}
export interface operation1776{
   get():MicrosoftGraphItemAnalytics
}
export interface operation1777{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation1778{
   get():MicrosoftGraphDriveItem
}
export interface operation1779{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1780{
   get():ODataCountResponse
}
export interface operation1781{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1782{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation1783{
   get():MicrosoftGraphItemAnalytics
}
export interface operation1784{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation1785{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation1786{
   post():"Success"
}
export interface operation1787{
   get():ODataCountResponse
}
export interface operation1788{
   get():MicrosoftGraphDriveItem
}
export interface operation1789{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1790{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1791{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1792{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1793{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation1794{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation1795{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation1796{
   post():"Success"
}
export interface operation1797{
   get():ODataCountResponse
}
export interface operation1798{
   post(requestBody:{checkInAs?: string,comment?: string,}):"Success"
}
export interface operation1799{
   post():"Success"
}
export interface operation1800{
   post(requestBody:{name?: string,parentReference?: MicrosoftGraphItemReference,}):{}
}
export interface operation1801{
   post(requestBody:{type?: string,scope?: string,expirationDateTime?: string,password?: string,message?: string,retainInheritedPermissions?: boolean,}):{}
}
export interface operation1802{
   post(requestBody:{item?: MicrosoftGraphDriveItemUploadableProperties,}):{}
}
export interface operation1803{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1804{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1805{
   post():{}
}
export interface operation1806{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1807{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation1808{
   post(requestBody:{requireSignIn?: boolean,roles?: string[],sendInvitation?: boolean,message?: string,recipients?: {alias?: string,email?: string,objectId?: string,"@odata.type"?: string,},retainInheritedPermissions?: boolean,expirationDateTime?: string,password?: string,}):{value?: MicrosoftGraphPermission[],}
}
export interface operation1809{
   post(requestBody:{page?: string,zoom?: number | string,}):{}
}
export interface operation1810{
   post(requestBody:{parentReference?: MicrosoftGraphItemReference,name?: string,}):{}
}
export interface operation1811{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation1812{
   post():"Success"
}
export interface operation1813{
   post(requestBody:{challengeToken?: string,password?: string,}):"Success"
}
export interface operation1814{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation1815{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation1816{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation1817{
   get():ODataCountResponse
}
export interface operation1818{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation1819{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation1820{
   post():"Success"
}
export interface operation1821{
   get():ODataCountResponse
}
export interface operation1822{
   get():MicrosoftGraphThumbnailSetCollectionResponse
   post(requestBody:MicrosoftGraphThumbnailSet):MicrosoftGraphThumbnailSet
}
export interface operation1823{
   get():MicrosoftGraphThumbnailSet
   patch(requestBody:MicrosoftGraphThumbnailSet):"Success"
   delete():"Success"
}
export interface operation1824{
   get():ODataCountResponse
}
export interface operation1825{
   get():MicrosoftGraphDriveItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphDriveItemVersion):MicrosoftGraphDriveItemVersion
}
export interface operation1826{
   get():MicrosoftGraphDriveItemVersion
   patch(requestBody:MicrosoftGraphDriveItemVersion):"Success"
   delete():"Success"
}
export interface operation1827{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1828{
   post():"Success"
}
export interface operation1829{
   get():ODataCountResponse
}
export interface operation1830{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation1831{
   get():MicrosoftGraphDriveItem
}
export interface operation1832{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1833{
   get():ODataCountResponse
}
export interface operation1834{
   get():ODataCountResponse
}
export interface operation1835{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation1836{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation1837{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation1838{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation1839{
   get():ODataCountResponse
}
export interface operation1840{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation1841{
   get():MicrosoftGraphCalendar
}
export interface operation1842{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation1843{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation1844{
   get():ODataCountResponse
}
export interface operation1845{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation1846{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation1847{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation1848{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation1849{
   get():ODataCountResponse
}
export interface operation1850{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation1851{
   get():MicrosoftGraphCalendar
}
export interface operation1852{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation1853{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation1854{
   get():ODataCountResponse
}
export interface operation1855{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation1856{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation1857{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1858{
   post():"Success"
}
export interface operation1859{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation1860{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation1861{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1862{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation1863{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1864{
   get():ODataCountResponse
}
export interface operation1865{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation1866{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1867{
   get():ODataCountResponse
}
export interface operation1868{
   get():ODataCountResponse
}
export interface operation1869{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation1870{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation1871{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation1872{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1873{
   post():"Success"
}
export interface operation1874{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation1875{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation1876{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation1877{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation1878{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1879{
   get():ODataCountResponse
}
export interface operation1880{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation1881{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation1882{
   get():ODataCountResponse
}
export interface operation1883{
   get():ODataCountResponse
}
export interface operation1884{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation1885{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation1886{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation1887{
   get():ODataCountResponse
}
export interface operation1888{
   get():MicrosoftGraphGroupLifecyclePolicyCollectionResponse
   post(requestBody:MicrosoftGraphGroupLifecyclePolicy):MicrosoftGraphGroupLifecyclePolicy
}
export interface operation1889{
   get():MicrosoftGraphGroupLifecyclePolicy
   patch(requestBody:MicrosoftGraphGroupLifecyclePolicy):"Success"
   delete():"Success"
}
export interface operation1890{
   post(requestBody:{groupId?: string,}):{value?: boolean,}
}
export interface operation1891{
   post(requestBody:{groupId?: string,}):{value?: boolean,}
}
export interface operation1892{
   get():ODataCountResponse
}
export interface operation1893{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation1894{
   get():MicrosoftGraphDirectoryObject
}
export interface operation1895{
   get():MicrosoftGraphApplication
}
export interface operation1896{
   get():MicrosoftGraphDevice
}
export interface operation1897{
   get():MicrosoftGraphGroup
}
export interface operation1898{
   get():MicrosoftGraphOrgContact
}
export interface operation1899{
   get():MicrosoftGraphServicePrincipal
}
export interface operation1900{
   get():MicrosoftGraphUser
}
export interface operation1901{
   get():ODataCountResponse
}
export interface operation1902{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation1903{
   get():ODataCountResponse
}
export interface operation1904{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation1905{
   get():ODataCountResponse
}
export interface operation1906{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation1907{
   get():ODataCountResponse
}
export interface operation1908{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation1909{
   get():ODataCountResponse
}
export interface operation1910{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation1911{
   get():ODataCountResponse
}
export interface operation1912{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation1913{
   get():ODataCountResponse
}
export interface operation1914{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation1915{
   delete():"Success"
}
export interface operation1916{
   get():MicrosoftGraphApplication
}
export interface operation1917{
   get():MicrosoftGraphDevice
}
export interface operation1918{
   get():MicrosoftGraphGroup
}
export interface operation1919{
   get():MicrosoftGraphOrgContact
}
export interface operation1920{
   get():MicrosoftGraphServicePrincipal
}
export interface operation1921{
   get():MicrosoftGraphUser
}
export interface operation1922{
   get():ODataCountResponse
}
export interface operation1923{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation1924{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation1925{
   get():ODataCountResponse
}
export interface operation1926{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation1927{
   get():ODataCountResponse
}
export interface operation1928{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation1929{
   get():ODataCountResponse
}
export interface operation1930{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation1931{
   get():ODataCountResponse
}
export interface operation1932{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation1933{
   get():ODataCountResponse
}
export interface operation1934{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation1935{
   get():ODataCountResponse
}
export interface operation1936{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation1937{
   get():MicrosoftGraphDirectoryObject
}
export interface operation1938{
   get():MicrosoftGraphApplication
}
export interface operation1939{
   get():MicrosoftGraphDevice
}
export interface operation1940{
   get():MicrosoftGraphGroup
}
export interface operation1941{
   get():MicrosoftGraphOrgContact
}
export interface operation1942{
   get():MicrosoftGraphServicePrincipal
}
export interface operation1943{
   get():MicrosoftGraphUser
}
export interface operation1944{
   get():ODataCountResponse
}
export interface operation1945{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation1946{
   get():ODataCountResponse
}
export interface operation1947{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation1948{
   get():ODataCountResponse
}
export interface operation1949{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation1950{
   get():ODataCountResponse
}
export interface operation1951{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation1952{
   get():ODataCountResponse
}
export interface operation1953{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation1954{
   get():ODataCountResponse
}
export interface operation1955{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation1956{
   get():ODataCountResponse
}
export interface operation1957{
   post():"Success"
}
export interface operation1958{
   post(requestBody:{addLicenses?: {disabledPlans?: string[],skuId?: string,"@odata.type"?: string,},removeLicenses?: string[],}):{}
}
export interface operation1959{
   post():{value?: MicrosoftGraphResourceSpecificPermissionGrant[],}
}
export interface operation1960{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation1961{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation1962{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation1963{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation1964{
   post():"Success"
}
export interface operation1965{
   post():"Success"
}
export interface operation1966{
   post():"Success"
}
export interface operation1967{
   post():{}
}
export interface operation1968{
   post():"Success"
}
export interface operation1969{
   post():"Success"
}
export interface operation1970{
   post(requestBody:{displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation1971{
   get():MicrosoftGraphOnenote
   patch(requestBody:MicrosoftGraphOnenote):"Success"
   delete():"Success"
}
export interface operation1972{
   get():MicrosoftGraphNotebookCollectionResponse
   post(requestBody:MicrosoftGraphNotebook):MicrosoftGraphNotebook
}
export interface operation1973{
   get():MicrosoftGraphNotebook
   patch(requestBody:MicrosoftGraphNotebook):"Success"
   delete():"Success"
}
export interface operation1974{
   post(requestBody:{groupId?: string,renameAs?: string,notebookFolder?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation1975{
   get():MicrosoftGraphSectionGroupCollectionResponse
   post(requestBody:MicrosoftGraphSectionGroup):MicrosoftGraphSectionGroup
}
export interface operation1976{
   get():MicrosoftGraphSectionGroup
   patch(requestBody:MicrosoftGraphSectionGroup):"Success"
   delete():"Success"
}
export interface operation1977{
   get():MicrosoftGraphNotebook
}
export interface operation1978{
   get():MicrosoftGraphSectionGroup
}
export interface operation1979{
   get():MicrosoftGraphSectionGroupCollectionResponse
}
export interface operation1980{
   get():MicrosoftGraphSectionGroup
}
export interface operation1981{
   get():ODataCountResponse
}
export interface operation1982{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation1983{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation1984{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation1985{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation1986{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation1987{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation1988{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation1989{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation1990{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation1991{
   get():{}
}
export interface operation1992{
   get():MicrosoftGraphNotebook
}
export interface operation1993{
   get():MicrosoftGraphOnenoteSection
}
export interface operation1994{
   get():ODataCountResponse
}
export interface operation1995{
   get():MicrosoftGraphNotebook
}
export interface operation1996{
   get():MicrosoftGraphSectionGroup
}
export interface operation1997{
   get():ODataCountResponse
}
export interface operation1998{
   get():ODataCountResponse
}
export interface operation1999{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation2000{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation2001{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2002{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2003{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation2004{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation2005{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2006{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2007{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation2008{
   get():{}
}
export interface operation2009{
   get():MicrosoftGraphNotebook
}
export interface operation2010{
   get():MicrosoftGraphOnenoteSection
}
export interface operation2011{
   get():ODataCountResponse
}
export interface operation2012{
   get():MicrosoftGraphNotebook
}
export interface operation2013{
   get():MicrosoftGraphSectionGroup
}
export interface operation2014{
   get():ODataCountResponse
}
export interface operation2015{
   get():ODataCountResponse
}
export interface operation2016{
   post(requestBody:{webUrl?: string,}):{}
}
export interface operation2017{
   get():{value?: MicrosoftGraphRecentNotebook[],}
}
export interface operation2018{
   get():MicrosoftGraphOnenoteOperationCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteOperation):MicrosoftGraphOnenoteOperation
}
export interface operation2019{
   get():MicrosoftGraphOnenoteOperation
   patch(requestBody:MicrosoftGraphOnenoteOperation):"Success"
   delete():"Success"
}
export interface operation2020{
   get():ODataCountResponse
}
export interface operation2021{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation2022{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation2023{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2024{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2025{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation2026{
   get():{}
}
export interface operation2027{
   get():MicrosoftGraphNotebook
}
export interface operation2028{
   get():MicrosoftGraphOnenoteSection
}
export interface operation2029{
   get():ODataCountResponse
}
export interface operation2030{
   get():MicrosoftGraphOnenoteResourceCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteResource):MicrosoftGraphOnenoteResource
}
export interface operation2031{
   get():MicrosoftGraphOnenoteResource
   patch(requestBody:MicrosoftGraphOnenoteResource):"Success"
   delete():"Success"
}
export interface operation2032{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2033{
   get():ODataCountResponse
}
export interface operation2034{
   get():MicrosoftGraphSectionGroupCollectionResponse
   post(requestBody:MicrosoftGraphSectionGroup):MicrosoftGraphSectionGroup
}
export interface operation2035{
   get():MicrosoftGraphSectionGroup
   patch(requestBody:MicrosoftGraphSectionGroup):"Success"
   delete():"Success"
}
export interface operation2036{
   get():MicrosoftGraphNotebook
}
export interface operation2037{
   get():MicrosoftGraphSectionGroup
}
export interface operation2038{
   get():MicrosoftGraphSectionGroupCollectionResponse
}
export interface operation2039{
   get():MicrosoftGraphSectionGroup
}
export interface operation2040{
   get():ODataCountResponse
}
export interface operation2041{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation2042{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation2043{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2044{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2045{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation2046{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation2047{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2048{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2049{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation2050{
   get():{}
}
export interface operation2051{
   get():MicrosoftGraphNotebook
}
export interface operation2052{
   get():MicrosoftGraphOnenoteSection
}
export interface operation2053{
   get():ODataCountResponse
}
export interface operation2054{
   get():MicrosoftGraphNotebook
}
export interface operation2055{
   get():MicrosoftGraphSectionGroup
}
export interface operation2056{
   get():ODataCountResponse
}
export interface operation2057{
   get():ODataCountResponse
}
export interface operation2058{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation2059{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation2060{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2061{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2062{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation2063{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation2064{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2065{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2066{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation2067{
   get():{}
}
export interface operation2068{
   get():MicrosoftGraphNotebook
}
export interface operation2069{
   get():MicrosoftGraphOnenoteSection
}
export interface operation2070{
   get():ODataCountResponse
}
export interface operation2071{
   get():MicrosoftGraphNotebook
}
export interface operation2072{
   get():MicrosoftGraphSectionGroup
}
export interface operation2073{
   get():ODataCountResponse
}
export interface operation2074{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation2075{
   delete():"Success"
}
export interface operation2076{
   get():MicrosoftGraphApplication
}
export interface operation2077{
   get():MicrosoftGraphDevice
}
export interface operation2078{
   get():MicrosoftGraphGroup
}
export interface operation2079{
   get():MicrosoftGraphOrgContact
}
export interface operation2080{
   get():MicrosoftGraphServicePrincipal
}
export interface operation2081{
   get():MicrosoftGraphUser
}
export interface operation2082{
   get():ODataCountResponse
}
export interface operation2083{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation2084{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation2085{
   get():ODataCountResponse
}
export interface operation2086{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation2087{
   get():ODataCountResponse
}
export interface operation2088{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation2089{
   get():ODataCountResponse
}
export interface operation2090{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation2091{
   get():ODataCountResponse
}
export interface operation2092{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation2093{
   get():ODataCountResponse
}
export interface operation2094{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation2095{
   get():ODataCountResponse
}
export interface operation2096{
   get():MicrosoftGraphResourceSpecificPermissionGrantCollectionResponse
   post(requestBody:MicrosoftGraphResourceSpecificPermissionGrant):MicrosoftGraphResourceSpecificPermissionGrant
}
export interface operation2097{
   get():MicrosoftGraphResourceSpecificPermissionGrant
   patch(requestBody:MicrosoftGraphResourceSpecificPermissionGrant):"Success"
   delete():"Success"
}
export interface operation2098{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation2099{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation2100{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation2101{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation2102{
   post():{}
}
export interface operation2103{
   get():ODataCountResponse
}
export interface operation2104{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation2105{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation2106{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation2107{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation2108{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2109{
   get():MicrosoftGraphProfilePhotoCollectionResponse
   post(requestBody:MicrosoftGraphProfilePhoto):MicrosoftGraphProfilePhoto
}
export interface operation2110{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation2111{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2112{
   get():ODataCountResponse
}
export interface operation2113{
   get():MicrosoftGraphPlannerGroup
   patch(requestBody:MicrosoftGraphPlannerGroup):"Success"
   delete():"Success"
}
export interface operation2114{
   get():MicrosoftGraphPlannerPlanCollectionResponse
   post(requestBody:MicrosoftGraphPlannerPlan):MicrosoftGraphPlannerPlan
}
export interface operation2115{
   get():MicrosoftGraphPlannerPlan
   patch(requestBody:MicrosoftGraphPlannerPlan):"Success"
   delete():"Success"
}
export interface operation2116{
   get():MicrosoftGraphPlannerBucketCollectionResponse
   post(requestBody:MicrosoftGraphPlannerBucket):MicrosoftGraphPlannerBucket
}
export interface operation2117{
   get():MicrosoftGraphPlannerBucket
   patch(requestBody:MicrosoftGraphPlannerBucket):"Success"
   delete():"Success"
}
export interface operation2118{
   get():MicrosoftGraphPlannerTaskCollectionResponse
   post(requestBody:MicrosoftGraphPlannerTask):MicrosoftGraphPlannerTask
}
export interface operation2119{
   get():MicrosoftGraphPlannerTask
   patch(requestBody:MicrosoftGraphPlannerTask):"Success"
   delete():"Success"
}
export interface operation2120{
   get():MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation2121{
   get():MicrosoftGraphPlannerBucketTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerBucketTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation2122{
   get():MicrosoftGraphPlannerTaskDetails
   patch(requestBody:MicrosoftGraphPlannerTaskDetails):"Success"
   delete():"Success"
}
export interface operation2123{
   get():MicrosoftGraphPlannerProgressTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerProgressTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation2124{
   get():ODataCountResponse
}
export interface operation2125{
   get():ODataCountResponse
}
export interface operation2126{
   get():MicrosoftGraphPlannerPlanDetails
   patch(requestBody:MicrosoftGraphPlannerPlanDetails):"Success"
   delete():"Success"
}
export interface operation2127{
   get():MicrosoftGraphPlannerTaskCollectionResponse
   post(requestBody:MicrosoftGraphPlannerTask):MicrosoftGraphPlannerTask
}
export interface operation2128{
   get():MicrosoftGraphPlannerTask
   patch(requestBody:MicrosoftGraphPlannerTask):"Success"
   delete():"Success"
}
export interface operation2129{
   get():MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation2130{
   get():MicrosoftGraphPlannerBucketTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerBucketTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation2131{
   get():MicrosoftGraphPlannerTaskDetails
   patch(requestBody:MicrosoftGraphPlannerTaskDetails):"Success"
   delete():"Success"
}
export interface operation2132{
   get():MicrosoftGraphPlannerProgressTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerProgressTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation2133{
   get():ODataCountResponse
}
export interface operation2134{
   get():ODataCountResponse
}
export interface operation2135{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation2136{
   delete():"Success"
}
export interface operation2137{
   get():ODataCountResponse
}
export interface operation2138{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation2139{
   get():MicrosoftGraphGroupSettingCollectionResponse
   post(requestBody:MicrosoftGraphGroupSetting):MicrosoftGraphGroupSetting
}
export interface operation2140{
   get():MicrosoftGraphGroupSetting
   patch(requestBody:MicrosoftGraphGroupSetting):"Success"
   delete():"Success"
}
export interface operation2141{
   get():ODataCountResponse
}
export interface operation2142{
   get():MicrosoftGraphSiteCollectionResponse
   post(requestBody:MicrosoftGraphSite):MicrosoftGraphSite
}
export interface operation2143{
   get():MicrosoftGraphSite
   patch(requestBody:MicrosoftGraphSite):"Success"
}
export interface operation2144{
   get():MicrosoftGraphItemAnalytics
}
export interface operation2145{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation2146{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation2147{
   get():MicrosoftGraphColumnDefinition
}
export interface operation2148{
   get():ODataCountResponse
}
export interface operation2149{
   get():MicrosoftGraphContentTypeCollectionResponse
   post(requestBody:MicrosoftGraphContentType):MicrosoftGraphContentType
}
export interface operation2150{
   get():MicrosoftGraphContentType
   patch(requestBody:MicrosoftGraphContentType):"Success"
   delete():"Success"
}
export interface operation2151{
   get():MicrosoftGraphContentType
}
export interface operation2152{
   get():MicrosoftGraphContentTypeCollectionResponse
}
export interface operation2153{
   get():MicrosoftGraphContentType
}
export interface operation2154{
   get():ODataCountResponse
}
export interface operation2155{
   get():MicrosoftGraphColumnLinkCollectionResponse
   post(requestBody:MicrosoftGraphColumnLink):MicrosoftGraphColumnLink
}
export interface operation2156{
   get():MicrosoftGraphColumnLink
   patch(requestBody:MicrosoftGraphColumnLink):"Success"
   delete():"Success"
}
export interface operation2157{
   get():ODataCountResponse
}
export interface operation2158{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
}
export interface operation2159{
   get():MicrosoftGraphColumnDefinition
}
export interface operation2160{
   get():ODataCountResponse
}
export interface operation2161{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation2162{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation2163{
   get():MicrosoftGraphColumnDefinition
}
export interface operation2164{
   get():ODataCountResponse
}
export interface operation2165{
   post(requestBody:{hubSiteUrls?: string[],propagateToExistingLists?: boolean,}):"Success"
}
export interface operation2166{
   post(requestBody:{sourceFile?: {driveId?: string,driveType?: string,id?: string,name?: string,path?: string,shareId?: string,sharepointIds?: MicrosoftGraphSharepointIds,siteId?: string,"@odata.type"?: string,},destinationFileName?: string,}):"Success"
}
export interface operation2167{
   get():{value?: boolean,}
}
export interface operation2168{
   post():"Success"
}
export interface operation2169{
   post():"Success"
}
export interface operation2170{
   get():ODataCountResponse
}
export interface operation2171{
   post(requestBody:{contentType?: string,}):{}
}
export interface operation2172{
   post(requestBody:{contentTypeId?: string,}):{}
}
export interface operation2173{
   get():{value?: MicrosoftGraphContentType[],}
}
export interface operation2174{
   get():MicrosoftGraphDrive
}
export interface operation2175{
   get():MicrosoftGraphDriveCollectionResponse
}
export interface operation2176{
   get():MicrosoftGraphDrive
}
export interface operation2177{
   get():ODataCountResponse
}
export interface operation2178{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
}
export interface operation2179{
   get():MicrosoftGraphColumnDefinition
}
export interface operation2180{
   get():ODataCountResponse
}
export interface operation2181{
   get():MicrosoftGraphBaseItemCollectionResponse
}
export interface operation2182{
   get():MicrosoftGraphBaseItem
}
export interface operation2183{
   get():ODataCountResponse
}
export interface operation2184{
   get():MicrosoftGraphListCollectionResponse
   post(requestBody:MicrosoftGraphList):MicrosoftGraphList
}
export interface operation2185{
   get():MicrosoftGraphList
   patch(requestBody:MicrosoftGraphList):"Success"
   delete():"Success"
}
export interface operation2186{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation2187{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation2188{
   get():MicrosoftGraphColumnDefinition
}
export interface operation2189{
   get():ODataCountResponse
}
export interface operation2190{
   get():MicrosoftGraphContentTypeCollectionResponse
   post(requestBody:MicrosoftGraphContentType):MicrosoftGraphContentType
}
export interface operation2191{
   get():MicrosoftGraphContentType
   patch(requestBody:MicrosoftGraphContentType):"Success"
   delete():"Success"
}
export interface operation2192{
   get():MicrosoftGraphContentType
}
export interface operation2193{
   get():MicrosoftGraphContentTypeCollectionResponse
}
export interface operation2194{
   get():MicrosoftGraphContentType
}
export interface operation2195{
   get():ODataCountResponse
}
export interface operation2196{
   get():MicrosoftGraphColumnLinkCollectionResponse
   post(requestBody:MicrosoftGraphColumnLink):MicrosoftGraphColumnLink
}
export interface operation2197{
   get():MicrosoftGraphColumnLink
   patch(requestBody:MicrosoftGraphColumnLink):"Success"
   delete():"Success"
}
export interface operation2198{
   get():ODataCountResponse
}
export interface operation2199{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
}
export interface operation2200{
   get():MicrosoftGraphColumnDefinition
}
export interface operation2201{
   get():ODataCountResponse
}
export interface operation2202{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation2203{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation2204{
   get():MicrosoftGraphColumnDefinition
}
export interface operation2205{
   get():ODataCountResponse
}
export interface operation2206{
   post(requestBody:{hubSiteUrls?: string[],propagateToExistingLists?: boolean,}):"Success"
}
export interface operation2207{
   post(requestBody:{sourceFile?: {driveId?: string,driveType?: string,id?: string,name?: string,path?: string,shareId?: string,sharepointIds?: MicrosoftGraphSharepointIds,siteId?: string,"@odata.type"?: string,},destinationFileName?: string,}):"Success"
}
export interface operation2208{
   get():{value?: boolean,}
}
export interface operation2209{
   post():"Success"
}
export interface operation2210{
   post():"Success"
}
export interface operation2211{
   get():ODataCountResponse
}
export interface operation2212{
   post(requestBody:{contentType?: string,}):{}
}
export interface operation2213{
   post(requestBody:{contentTypeId?: string,}):{}
}
export interface operation2214{
   get():{value?: MicrosoftGraphContentType[],}
}
export interface operation2215{
   get():MicrosoftGraphDrive
}
export interface operation2216{
   get():MicrosoftGraphListItemCollectionResponse
   post(requestBody:MicrosoftGraphListItem):MicrosoftGraphListItem
}
export interface operation2217{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation2218{
   get():MicrosoftGraphItemAnalytics
}
export interface operation2219{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation2220{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation2221{
   post():"Success"
}
export interface operation2222{
   get():ODataCountResponse
}
export interface operation2223{
   get():MicrosoftGraphDriveItem
}
export interface operation2224{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2225{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation2226{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation2227{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation2228{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation2229{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation2230{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation2231{
   post():"Success"
}
export interface operation2232{
   get():ODataCountResponse
}
export interface operation2233{
   get():ODataCountResponse
}
export interface operation2234{
   get():MicrosoftGraphRichLongRunningOperationCollectionResponse
   post(requestBody:MicrosoftGraphRichLongRunningOperation):MicrosoftGraphRichLongRunningOperation
}
export interface operation2235{
   get():MicrosoftGraphRichLongRunningOperation
   patch(requestBody:MicrosoftGraphRichLongRunningOperation):"Success"
   delete():"Success"
}
export interface operation2236{
   get():ODataCountResponse
}
export interface operation2237{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation2238{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation2239{
   post():"Success"
}
export interface operation2240{
   get():ODataCountResponse
}
export interface operation2241{
   get():ODataCountResponse
}
export interface operation2242{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation2243{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation2244{
   get():{value?: MicrosoftGraphContentType[],}
}
export interface operation2245{
   get():{}
}
export interface operation2246{
   get():MicrosoftGraphOnenote
   patch(requestBody:MicrosoftGraphOnenote):"Success"
   delete():"Success"
}
export interface operation2247{
   get():MicrosoftGraphNotebookCollectionResponse
   post(requestBody:MicrosoftGraphNotebook):MicrosoftGraphNotebook
}
export interface operation2248{
   get():MicrosoftGraphNotebook
   patch(requestBody:MicrosoftGraphNotebook):"Success"
   delete():"Success"
}
export interface operation2249{
   post(requestBody:{groupId?: string,renameAs?: string,notebookFolder?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2250{
   get():MicrosoftGraphSectionGroupCollectionResponse
   post(requestBody:MicrosoftGraphSectionGroup):MicrosoftGraphSectionGroup
}
export interface operation2251{
   get():MicrosoftGraphSectionGroup
   patch(requestBody:MicrosoftGraphSectionGroup):"Success"
   delete():"Success"
}
export interface operation2252{
   get():MicrosoftGraphNotebook
}
export interface operation2253{
   get():MicrosoftGraphSectionGroup
}
export interface operation2254{
   get():MicrosoftGraphSectionGroupCollectionResponse
}
export interface operation2255{
   get():MicrosoftGraphSectionGroup
}
export interface operation2256{
   get():ODataCountResponse
}
export interface operation2257{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation2258{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation2259{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2260{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2261{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation2262{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation2263{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2264{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2265{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation2266{
   get():{}
}
export interface operation2267{
   get():MicrosoftGraphNotebook
}
export interface operation2268{
   get():MicrosoftGraphOnenoteSection
}
export interface operation2269{
   get():ODataCountResponse
}
export interface operation2270{
   get():MicrosoftGraphNotebook
}
export interface operation2271{
   get():MicrosoftGraphSectionGroup
}
export interface operation2272{
   get():ODataCountResponse
}
export interface operation2273{
   get():ODataCountResponse
}
export interface operation2274{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation2275{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation2276{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2277{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2278{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation2279{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation2280{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2281{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2282{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation2283{
   get():{}
}
export interface operation2284{
   get():MicrosoftGraphNotebook
}
export interface operation2285{
   get():MicrosoftGraphOnenoteSection
}
export interface operation2286{
   get():ODataCountResponse
}
export interface operation2287{
   get():MicrosoftGraphNotebook
}
export interface operation2288{
   get():MicrosoftGraphSectionGroup
}
export interface operation2289{
   get():ODataCountResponse
}
export interface operation2290{
   get():ODataCountResponse
}
export interface operation2291{
   post(requestBody:{webUrl?: string,}):{}
}
export interface operation2292{
   get():{value?: MicrosoftGraphRecentNotebook[],}
}
export interface operation2293{
   get():MicrosoftGraphOnenoteOperationCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteOperation):MicrosoftGraphOnenoteOperation
}
export interface operation2294{
   get():MicrosoftGraphOnenoteOperation
   patch(requestBody:MicrosoftGraphOnenoteOperation):"Success"
   delete():"Success"
}
export interface operation2295{
   get():ODataCountResponse
}
export interface operation2296{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation2297{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation2298{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2299{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2300{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation2301{
   get():{}
}
export interface operation2302{
   get():MicrosoftGraphNotebook
}
export interface operation2303{
   get():MicrosoftGraphOnenoteSection
}
export interface operation2304{
   get():ODataCountResponse
}
export interface operation2305{
   get():MicrosoftGraphOnenoteResourceCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteResource):MicrosoftGraphOnenoteResource
}
export interface operation2306{
   get():MicrosoftGraphOnenoteResource
   patch(requestBody:MicrosoftGraphOnenoteResource):"Success"
   delete():"Success"
}
export interface operation2307{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2308{
   get():ODataCountResponse
}
export interface operation2309{
   get():MicrosoftGraphSectionGroupCollectionResponse
   post(requestBody:MicrosoftGraphSectionGroup):MicrosoftGraphSectionGroup
}
export interface operation2310{
   get():MicrosoftGraphSectionGroup
   patch(requestBody:MicrosoftGraphSectionGroup):"Success"
   delete():"Success"
}
export interface operation2311{
   get():MicrosoftGraphNotebook
}
export interface operation2312{
   get():MicrosoftGraphSectionGroup
}
export interface operation2313{
   get():MicrosoftGraphSectionGroupCollectionResponse
}
export interface operation2314{
   get():MicrosoftGraphSectionGroup
}
export interface operation2315{
   get():ODataCountResponse
}
export interface operation2316{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation2317{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation2318{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2319{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2320{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation2321{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation2322{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2323{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2324{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation2325{
   get():{}
}
export interface operation2326{
   get():MicrosoftGraphNotebook
}
export interface operation2327{
   get():MicrosoftGraphOnenoteSection
}
export interface operation2328{
   get():ODataCountResponse
}
export interface operation2329{
   get():MicrosoftGraphNotebook
}
export interface operation2330{
   get():MicrosoftGraphSectionGroup
}
export interface operation2331{
   get():ODataCountResponse
}
export interface operation2332{
   get():ODataCountResponse
}
export interface operation2333{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation2334{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation2335{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2336{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2337{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation2338{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation2339{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2340{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation2341{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation2342{
   get():{}
}
export interface operation2343{
   get():MicrosoftGraphNotebook
}
export interface operation2344{
   get():MicrosoftGraphOnenoteSection
}
export interface operation2345{
   get():ODataCountResponse
}
export interface operation2346{
   get():MicrosoftGraphNotebook
}
export interface operation2347{
   get():MicrosoftGraphSectionGroup
}
export interface operation2348{
   get():ODataCountResponse
}
export interface operation2349{
   get():MicrosoftGraphRichLongRunningOperationCollectionResponse
   post(requestBody:MicrosoftGraphRichLongRunningOperation):MicrosoftGraphRichLongRunningOperation
}
export interface operation2350{
   get():MicrosoftGraphRichLongRunningOperation
   patch(requestBody:MicrosoftGraphRichLongRunningOperation):"Success"
   delete():"Success"
}
export interface operation2351{
   get():ODataCountResponse
}
export interface operation2352{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation2353{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation2354{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation2355{
   get():ODataCountResponse
}
export interface operation2356{
   get():MicrosoftGraphSiteCollectionResponse
}
export interface operation2357{
   get():MicrosoftGraphSite
}
export interface operation2358{
   get():ODataCountResponse
}
export interface operation2359{
   get():MicrosoftGraphTermStoreStore
   patch(requestBody:MicrosoftGraphTermStoreStore):"Success"
   delete():"Success"
}
export interface operation2360{
   get():MicrosoftGraphTermStoreGroupCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreGroup):MicrosoftGraphTermStoreGroup
}
export interface operation2361{
   get():MicrosoftGraphTermStoreGroup
   patch(requestBody:MicrosoftGraphTermStoreGroup):"Success"
   delete():"Success"
}
export interface operation2362{
   get():MicrosoftGraphTermStoreSetCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreSet):MicrosoftGraphTermStoreSet
}
export interface operation2363{
   get():MicrosoftGraphTermStoreSet
   patch(requestBody:MicrosoftGraphTermStoreSet):"Success"
   delete():"Success"
}
export interface operation2364{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2365{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2366{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2367{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2368{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2369{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2370{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2371{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2372{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2373{
   get():ODataCountResponse
}
export interface operation2374{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2375{
   get():ODataCountResponse
}
export interface operation2376{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2377{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2378{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2379{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2380{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2381{
   get():ODataCountResponse
}
export interface operation2382{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2383{
   get():ODataCountResponse
}
export interface operation2384{
   get():MicrosoftGraphTermStoreGroup
   patch(requestBody:MicrosoftGraphTermStoreGroup):"Success"
   delete():"Success"
}
export interface operation2385{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2386{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2387{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2388{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2389{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2390{
   get():ODataCountResponse
}
export interface operation2391{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2392{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2393{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2394{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2395{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2396{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2397{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2398{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2399{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2400{
   get():ODataCountResponse
}
export interface operation2401{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2402{
   get():ODataCountResponse
}
export interface operation2403{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2404{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2405{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2406{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2407{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2408{
   get():ODataCountResponse
}
export interface operation2409{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2410{
   get():ODataCountResponse
}
export interface operation2411{
   get():ODataCountResponse
}
export interface operation2412{
   get():ODataCountResponse
}
export interface operation2413{
   get():MicrosoftGraphTermStoreSetCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreSet):MicrosoftGraphTermStoreSet
}
export interface operation2414{
   get():MicrosoftGraphTermStoreSet
   patch(requestBody:MicrosoftGraphTermStoreSet):"Success"
   delete():"Success"
}
export interface operation2415{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2416{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2417{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2418{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2419{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2420{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2421{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2422{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2423{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2424{
   get():ODataCountResponse
}
export interface operation2425{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2426{
   get():ODataCountResponse
}
export interface operation2427{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2428{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2429{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2430{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2431{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2432{
   get():ODataCountResponse
}
export interface operation2433{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2434{
   get():ODataCountResponse
}
export interface operation2435{
   get():MicrosoftGraphTermStoreGroup
   patch(requestBody:MicrosoftGraphTermStoreGroup):"Success"
   delete():"Success"
}
export interface operation2436{
   get():MicrosoftGraphTermStoreSetCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreSet):MicrosoftGraphTermStoreSet
}
export interface operation2437{
   get():MicrosoftGraphTermStoreSet
   patch(requestBody:MicrosoftGraphTermStoreSet):"Success"
   delete():"Success"
}
export interface operation2438{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2439{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2440{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2441{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2442{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2443{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2444{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2445{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2446{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2447{
   get():ODataCountResponse
}
export interface operation2448{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2449{
   get():ODataCountResponse
}
export interface operation2450{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2451{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2452{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2453{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2454{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2455{
   get():ODataCountResponse
}
export interface operation2456{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2457{
   get():ODataCountResponse
}
export interface operation2458{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2459{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2460{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2461{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2462{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2463{
   get():ODataCountResponse
}
export interface operation2464{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2465{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2466{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2467{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2468{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2469{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2470{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2471{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2472{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2473{
   get():ODataCountResponse
}
export interface operation2474{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2475{
   get():ODataCountResponse
}
export interface operation2476{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2477{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2478{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2479{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2480{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2481{
   get():ODataCountResponse
}
export interface operation2482{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2483{
   get():ODataCountResponse
}
export interface operation2484{
   get():ODataCountResponse
}
export interface operation2485{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2486{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2487{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2488{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2489{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2490{
   get():ODataCountResponse
}
export interface operation2491{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2492{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2493{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2494{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2495{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2496{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2497{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2498{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2499{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2500{
   get():ODataCountResponse
}
export interface operation2501{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2502{
   get():ODataCountResponse
}
export interface operation2503{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2504{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2505{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2506{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2507{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2508{
   get():ODataCountResponse
}
export interface operation2509{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2510{
   get():ODataCountResponse
}
export interface operation2511{
   get():ODataCountResponse
}
export interface operation2512{
   get():MicrosoftGraphTermStoreStoreCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreStore):MicrosoftGraphTermStoreStore
}
export interface operation2513{
   get():MicrosoftGraphTermStoreStore
   patch(requestBody:MicrosoftGraphTermStoreStore):"Success"
   delete():"Success"
}
export interface operation2514{
   get():MicrosoftGraphTermStoreGroupCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreGroup):MicrosoftGraphTermStoreGroup
}
export interface operation2515{
   get():MicrosoftGraphTermStoreGroup
   patch(requestBody:MicrosoftGraphTermStoreGroup):"Success"
   delete():"Success"
}
export interface operation2516{
   get():MicrosoftGraphTermStoreSetCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreSet):MicrosoftGraphTermStoreSet
}
export interface operation2517{
   get():MicrosoftGraphTermStoreSet
   patch(requestBody:MicrosoftGraphTermStoreSet):"Success"
   delete():"Success"
}
export interface operation2518{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2519{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2520{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2521{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2522{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2523{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2524{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2525{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2526{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2527{
   get():ODataCountResponse
}
export interface operation2528{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2529{
   get():ODataCountResponse
}
export interface operation2530{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2531{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2532{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2533{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2534{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2535{
   get():ODataCountResponse
}
export interface operation2536{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2537{
   get():ODataCountResponse
}
export interface operation2538{
   get():MicrosoftGraphTermStoreGroup
   patch(requestBody:MicrosoftGraphTermStoreGroup):"Success"
   delete():"Success"
}
export interface operation2539{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2540{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2541{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2542{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2543{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2544{
   get():ODataCountResponse
}
export interface operation2545{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2546{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2547{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2548{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2549{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2550{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2551{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2552{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2553{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2554{
   get():ODataCountResponse
}
export interface operation2555{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2556{
   get():ODataCountResponse
}
export interface operation2557{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2558{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2559{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2560{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2561{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2562{
   get():ODataCountResponse
}
export interface operation2563{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2564{
   get():ODataCountResponse
}
export interface operation2565{
   get():ODataCountResponse
}
export interface operation2566{
   get():ODataCountResponse
}
export interface operation2567{
   get():MicrosoftGraphTermStoreSetCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreSet):MicrosoftGraphTermStoreSet
}
export interface operation2568{
   get():MicrosoftGraphTermStoreSet
   patch(requestBody:MicrosoftGraphTermStoreSet):"Success"
   delete():"Success"
}
export interface operation2569{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2570{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2571{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2572{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2573{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2574{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2575{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2576{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2577{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2578{
   get():ODataCountResponse
}
export interface operation2579{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2580{
   get():ODataCountResponse
}
export interface operation2581{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2582{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2583{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2584{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2585{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2586{
   get():ODataCountResponse
}
export interface operation2587{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2588{
   get():ODataCountResponse
}
export interface operation2589{
   get():MicrosoftGraphTermStoreGroup
   patch(requestBody:MicrosoftGraphTermStoreGroup):"Success"
   delete():"Success"
}
export interface operation2590{
   get():MicrosoftGraphTermStoreSetCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreSet):MicrosoftGraphTermStoreSet
}
export interface operation2591{
   get():MicrosoftGraphTermStoreSet
   patch(requestBody:MicrosoftGraphTermStoreSet):"Success"
   delete():"Success"
}
export interface operation2592{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2593{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2594{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2595{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2596{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2597{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2598{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2599{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2600{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2601{
   get():ODataCountResponse
}
export interface operation2602{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2603{
   get():ODataCountResponse
}
export interface operation2604{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2605{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2606{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2607{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2608{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2609{
   get():ODataCountResponse
}
export interface operation2610{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2611{
   get():ODataCountResponse
}
export interface operation2612{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2613{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2614{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2615{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2616{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2617{
   get():ODataCountResponse
}
export interface operation2618{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2619{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2620{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2621{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2622{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2623{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2624{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2625{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2626{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2627{
   get():ODataCountResponse
}
export interface operation2628{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2629{
   get():ODataCountResponse
}
export interface operation2630{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2631{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2632{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2633{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2634{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2635{
   get():ODataCountResponse
}
export interface operation2636{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2637{
   get():ODataCountResponse
}
export interface operation2638{
   get():ODataCountResponse
}
export interface operation2639{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2640{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2641{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2642{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2643{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2644{
   get():ODataCountResponse
}
export interface operation2645{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2646{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2647{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation2648{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation2649{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2650{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2651{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2652{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2653{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2654{
   get():ODataCountResponse
}
export interface operation2655{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2656{
   get():ODataCountResponse
}
export interface operation2657{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation2658{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation2659{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2660{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2661{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation2662{
   get():ODataCountResponse
}
export interface operation2663{
   get():MicrosoftGraphTermStoreSet
}
export interface operation2664{
   get():ODataCountResponse
}
export interface operation2665{
   get():ODataCountResponse
}
export interface operation2666{
   get():ODataCountResponse
}
export interface operation2667{
   get():ODataCountResponse
}
export interface operation2668{
   post(requestBody:{value?: MicrosoftGraphSite[],}):{value?: MicrosoftGraphSite[],}
}
export interface operation2669{
   post(requestBody:{value?: MicrosoftGraphSite[],}):{value?: MicrosoftGraphSite[],}
}
export interface operation2670{
   get():MicrosoftGraphTeam
   patch(requestBody:MicrosoftGraphTeam):"Success"
   delete():"Success"
}
export interface operation2671{
   get():MicrosoftGraphChannelCollectionResponse
}
export interface operation2672{
   get():MicrosoftGraphChannel
}
export interface operation2673{
   get():ODataCountResponse
}
export interface operation2674{
   get():MicrosoftGraphChannelCollectionResponse
   post(requestBody:MicrosoftGraphChannel):MicrosoftGraphChannel
}
export interface operation2675{
   get():MicrosoftGraphChannel
   patch(requestBody:MicrosoftGraphChannel):"Success"
   delete():"Success"
}
export interface operation2676{
   get():MicrosoftGraphDriveItem
}
export interface operation2677{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2678{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation2679{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation2680{
   get():ODataCountResponse
}
export interface operation2681{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation2682{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation2683{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation2684{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation2685{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation2686{
   get():ODataCountResponse
}
export interface operation2687{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation2688{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation2689{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation2690{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation2691{
   get():ODataCountResponse
}
export interface operation2692{
   get():ODataCountResponse
}
export interface operation2693{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation2694{
   get():ODataCountResponse
}
export interface operation2695{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation2696{
   post():"Success"
}
export interface operation2697{
   get():{value?: boolean,}
}
export interface operation2698{
   post():{}
}
export interface operation2699{
   post():"Success"
}
export interface operation2700{
   get():MicrosoftGraphSharedWithChannelTeamInfoCollectionResponse
   post(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):MicrosoftGraphSharedWithChannelTeamInfo
}
export interface operation2701{
   get():MicrosoftGraphSharedWithChannelTeamInfo
   patch(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):"Success"
   delete():"Success"
}
export interface operation2702{
   get():MicrosoftGraphConversationMemberCollectionResponse
}
export interface operation2703{
   get():MicrosoftGraphConversationMember
}
export interface operation2704{
   get():ODataCountResponse
}
export interface operation2705{
   get():ODataCountResponse
}
export interface operation2706{
   get():MicrosoftGraphTeamsTabCollectionResponse
   post(requestBody:MicrosoftGraphTeamsTab):MicrosoftGraphTeamsTab
}
export interface operation2707{
   get():MicrosoftGraphTeamsTab
   patch(requestBody:MicrosoftGraphTeamsTab):"Success"
   delete():"Success"
}
export interface operation2708{
   get():MicrosoftGraphTeamsApp
}
export interface operation2709{
   get():ODataCountResponse
}
export interface operation2710{
   get():ODataCountResponse
}
export interface operation2711{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation2712{
   get():MicrosoftGraphGroup
}
export interface operation2713{
   get():MicrosoftGraphChannelCollectionResponse
}
export interface operation2714{
   get():MicrosoftGraphChannel
}
export interface operation2715{
   get():ODataCountResponse
}
export interface operation2716{
   get():MicrosoftGraphTeamsAppInstallationCollectionResponse
   post(requestBody:MicrosoftGraphTeamsAppInstallation):MicrosoftGraphTeamsAppInstallation
}
export interface operation2717{
   get():MicrosoftGraphTeamsAppInstallation
   patch(requestBody:MicrosoftGraphTeamsAppInstallation):"Success"
   delete():"Success"
}
export interface operation2718{
   post():"Success"
}
export interface operation2719{
   get():MicrosoftGraphTeamsApp
}
export interface operation2720{
   get():MicrosoftGraphTeamsAppDefinition
}
export interface operation2721{
   get():ODataCountResponse
}
export interface operation2722{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation2723{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation2724{
   get():ODataCountResponse
}
export interface operation2725{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation2726{
   post(requestBody:{shouldSetSpoSiteReadOnlyForMembers?: boolean,}):"Success"
}
export interface operation2727{
   post(requestBody:{displayName?: string,description?: string,mailNickname?: string,classification?: string,visibility?: string,partsToClone?: string,}):"Success"
}
export interface operation2728{
   post():"Success"
}
export interface operation2729{
   post(requestBody:{topic?: MicrosoftGraphTeamworkActivityTopic,activityType?: string,chainId?: number,previewText?: MicrosoftGraphItemBody,templateParameters?: MicrosoftGraphKeyValuePair[],recipient?: MicrosoftGraphTeamworkNotificationRecipient,}):"Success"
}
export interface operation2730{
   post():"Success"
}
export interface operation2731{
   get():MicrosoftGraphTeamsAsyncOperationCollectionResponse
   post(requestBody:MicrosoftGraphTeamsAsyncOperation):MicrosoftGraphTeamsAsyncOperation
}
export interface operation2732{
   get():MicrosoftGraphTeamsAsyncOperation
   patch(requestBody:MicrosoftGraphTeamsAsyncOperation):"Success"
   delete():"Success"
}
export interface operation2733{
   get():ODataCountResponse
}
export interface operation2734{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation2735{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2736{
   get():MicrosoftGraphChannel
   patch(requestBody:MicrosoftGraphChannel):"Success"
   delete():"Success"
}
export interface operation2737{
   get():MicrosoftGraphDriveItem
}
export interface operation2738{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2739{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation2740{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation2741{
   get():ODataCountResponse
}
export interface operation2742{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation2743{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation2744{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation2745{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation2746{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation2747{
   get():ODataCountResponse
}
export interface operation2748{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation2749{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation2750{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation2751{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation2752{
   get():ODataCountResponse
}
export interface operation2753{
   get():ODataCountResponse
}
export interface operation2754{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation2755{
   get():ODataCountResponse
}
export interface operation2756{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation2757{
   post():"Success"
}
export interface operation2758{
   get():{value?: boolean,}
}
export interface operation2759{
   post():{}
}
export interface operation2760{
   post():"Success"
}
export interface operation2761{
   get():MicrosoftGraphSharedWithChannelTeamInfoCollectionResponse
   post(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):MicrosoftGraphSharedWithChannelTeamInfo
}
export interface operation2762{
   get():MicrosoftGraphSharedWithChannelTeamInfo
   patch(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):"Success"
   delete():"Success"
}
export interface operation2763{
   get():MicrosoftGraphConversationMemberCollectionResponse
}
export interface operation2764{
   get():MicrosoftGraphConversationMember
}
export interface operation2765{
   get():ODataCountResponse
}
export interface operation2766{
   get():ODataCountResponse
}
export interface operation2767{
   get():MicrosoftGraphTeamsTabCollectionResponse
   post(requestBody:MicrosoftGraphTeamsTab):MicrosoftGraphTeamsTab
}
export interface operation2768{
   get():MicrosoftGraphTeamsTab
   patch(requestBody:MicrosoftGraphTeamsTab):"Success"
   delete():"Success"
}
export interface operation2769{
   get():MicrosoftGraphTeamsApp
}
export interface operation2770{
   get():ODataCountResponse
}
export interface operation2771{
   get():MicrosoftGraphSchedule
   patch(requestBody:MicrosoftGraphSchedule):"Success"
   delete():"Success"
}
export interface operation2772{
   post(requestBody:{notifyTeam?: boolean,startDateTime?: string,endDateTime?: string,}):"Success"
}
export interface operation2773{
   get():MicrosoftGraphOfferShiftRequestCollectionResponse
   post(requestBody:MicrosoftGraphOfferShiftRequest):MicrosoftGraphOfferShiftRequest
}
export interface operation2774{
   get():MicrosoftGraphOfferShiftRequest
   patch(requestBody:MicrosoftGraphOfferShiftRequest):"Success"
   delete():"Success"
}
export interface operation2775{
   get():ODataCountResponse
}
export interface operation2776{
   get():MicrosoftGraphOpenShiftChangeRequestCollectionResponse
   post(requestBody:MicrosoftGraphOpenShiftChangeRequest):MicrosoftGraphOpenShiftChangeRequest
}
export interface operation2777{
   get():MicrosoftGraphOpenShiftChangeRequest
   patch(requestBody:MicrosoftGraphOpenShiftChangeRequest):"Success"
   delete():"Success"
}
export interface operation2778{
   get():ODataCountResponse
}
export interface operation2779{
   get():MicrosoftGraphOpenShiftCollectionResponse
   post(requestBody:MicrosoftGraphOpenShift):MicrosoftGraphOpenShift
}
export interface operation2780{
   get():MicrosoftGraphOpenShift
   patch(requestBody:MicrosoftGraphOpenShift):"Success"
   delete():"Success"
}
export interface operation2781{
   get():ODataCountResponse
}
export interface operation2782{
   get():MicrosoftGraphSchedulingGroupCollectionResponse
   post(requestBody:MicrosoftGraphSchedulingGroup):MicrosoftGraphSchedulingGroup
}
export interface operation2783{
   get():MicrosoftGraphSchedulingGroup
   patch(requestBody:MicrosoftGraphSchedulingGroup):"Success"
   delete():"Success"
}
export interface operation2784{
   get():ODataCountResponse
}
export interface operation2785{
   get():MicrosoftGraphShiftCollectionResponse
   post(requestBody:MicrosoftGraphShift):MicrosoftGraphShift
}
export interface operation2786{
   get():MicrosoftGraphShift
   patch(requestBody:MicrosoftGraphShift):"Success"
   delete():"Success"
}
export interface operation2787{
   get():ODataCountResponse
}
export interface operation2788{
   get():MicrosoftGraphSwapShiftsChangeRequestCollectionResponse
   post(requestBody:MicrosoftGraphSwapShiftsChangeRequest):MicrosoftGraphSwapShiftsChangeRequest
}
export interface operation2789{
   get():MicrosoftGraphSwapShiftsChangeRequest
   patch(requestBody:MicrosoftGraphSwapShiftsChangeRequest):"Success"
   delete():"Success"
}
export interface operation2790{
   get():ODataCountResponse
}
export interface operation2791{
   get():MicrosoftGraphTimeOffReasonCollectionResponse
   post(requestBody:MicrosoftGraphTimeOffReason):MicrosoftGraphTimeOffReason
}
export interface operation2792{
   get():MicrosoftGraphTimeOffReason
   patch(requestBody:MicrosoftGraphTimeOffReason):"Success"
   delete():"Success"
}
export interface operation2793{
   get():ODataCountResponse
}
export interface operation2794{
   get():MicrosoftGraphTimeOffRequestCollectionResponse
   post(requestBody:MicrosoftGraphTimeOffRequest):MicrosoftGraphTimeOffRequest
}
export interface operation2795{
   get():MicrosoftGraphTimeOffRequest
   patch(requestBody:MicrosoftGraphTimeOffRequest):"Success"
   delete():"Success"
}
export interface operation2796{
   get():ODataCountResponse
}
export interface operation2797{
   get():MicrosoftGraphTimeOffCollectionResponse
   post(requestBody:MicrosoftGraphTimeOff):MicrosoftGraphTimeOff
}
export interface operation2798{
   get():MicrosoftGraphTimeOff
   patch(requestBody:MicrosoftGraphTimeOff):"Success"
   delete():"Success"
}
export interface operation2799{
   get():ODataCountResponse
}
export interface operation2800{
   get():MicrosoftGraphTeamsTemplate
}
export interface operation2801{
   get():MicrosoftGraphConversationThreadCollectionResponse
   post(requestBody:MicrosoftGraphConversationThread):MicrosoftGraphConversationThread
}
export interface operation2802{
   get():MicrosoftGraphConversationThread
   patch(requestBody:MicrosoftGraphConversationThread):"Success"
   delete():"Success"
}
export interface operation2803{
   post(requestBody:{Post?: MicrosoftGraphPost,}):"Success"
}
export interface operation2804{
   get():MicrosoftGraphPostCollectionResponse
   post(requestBody:MicrosoftGraphPost):MicrosoftGraphPost
}
export interface operation2805{
   get():MicrosoftGraphPost
   patch(requestBody:MicrosoftGraphPost):"Success"
   delete():"Success"
}
export interface operation2806{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation2807{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation2808{
   get():ODataCountResponse
}
export interface operation2809{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation2810{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation2811{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation2812{
   get():ODataCountResponse
}
export interface operation2813{
   get():MicrosoftGraphPost
   patch(requestBody:MicrosoftGraphPost):"Success"
   delete():"Success"
}
export interface operation2814{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation2815{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation2816{
   get():ODataCountResponse
}
export interface operation2817{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation2818{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation2819{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation2820{
   get():ODataCountResponse
}
export interface operation2821{
   post(requestBody:{Comment?: string,ToRecipients?: {emailAddress?: MicrosoftGraphEmailAddress,"@odata.type"?: string,},}):"Success"
}
export interface operation2822{
   post(requestBody:{Post?: MicrosoftGraphPost,}):"Success"
}
export interface operation2823{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation2824{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation2825{
   get():ODataCountResponse
}
export interface operation2826{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation2827{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation2828{
   get():ODataCountResponse
}
export interface operation2829{
   post(requestBody:{Comment?: string,ToRecipients?: {emailAddress?: MicrosoftGraphEmailAddress,"@odata.type"?: string,},}):"Success"
}
export interface operation2830{
   post(requestBody:{Post?: MicrosoftGraphPost,}):"Success"
}
export interface operation2831{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation2832{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation2833{
   get():ODataCountResponse
}
export interface operation2834{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation2835{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation2836{
   get():ODataCountResponse
}
export interface operation2837{
   get():ODataCountResponse
}
export interface operation2838{
   get():ODataCountResponse
}
export interface operation2839{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation2840{
   get():MicrosoftGraphDirectoryObject
}
export interface operation2841{
   get():MicrosoftGraphApplication
}
export interface operation2842{
   get():MicrosoftGraphDevice
}
export interface operation2843{
   get():MicrosoftGraphGroup
}
export interface operation2844{
   get():MicrosoftGraphOrgContact
}
export interface operation2845{
   get():MicrosoftGraphServicePrincipal
}
export interface operation2846{
   get():MicrosoftGraphUser
}
export interface operation2847{
   get():ODataCountResponse
}
export interface operation2848{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation2849{
   get():ODataCountResponse
}
export interface operation2850{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation2851{
   get():ODataCountResponse
}
export interface operation2852{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation2853{
   get():ODataCountResponse
}
export interface operation2854{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation2855{
   get():ODataCountResponse
}
export interface operation2856{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation2857{
   get():ODataCountResponse
}
export interface operation2858{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation2859{
   get():ODataCountResponse
}
export interface operation2860{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation2861{
   get():MicrosoftGraphDirectoryObject
}
export interface operation2862{
   get():MicrosoftGraphApplication
}
export interface operation2863{
   get():MicrosoftGraphDevice
}
export interface operation2864{
   get():MicrosoftGraphGroup
}
export interface operation2865{
   get():MicrosoftGraphOrgContact
}
export interface operation2866{
   get():MicrosoftGraphServicePrincipal
}
export interface operation2867{
   get():MicrosoftGraphUser
}
export interface operation2868{
   get():ODataCountResponse
}
export interface operation2869{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation2870{
   get():ODataCountResponse
}
export interface operation2871{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation2872{
   get():ODataCountResponse
}
export interface operation2873{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation2874{
   get():ODataCountResponse
}
export interface operation2875{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation2876{
   get():ODataCountResponse
}
export interface operation2877{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation2878{
   get():ODataCountResponse
}
export interface operation2879{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation2880{
   get():ODataCountResponse
}
export interface operation2881{
   get():ODataCountResponse
}
export interface operation2882{
   get():{value?: MicrosoftGraphGroup[],}
}
export interface operation2883{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation2884{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation2885{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation2886{
   get():MicrosoftGraphGroupSettingCollectionResponse
   post(requestBody:MicrosoftGraphGroupSetting):MicrosoftGraphGroupSetting
}
export interface operation2887{
   get():MicrosoftGraphGroupSetting
   patch(requestBody:MicrosoftGraphGroupSetting):"Success"
   delete():"Success"
}
export interface operation2888{
   get():ODataCountResponse
}
export interface operation2889{
   get():MicrosoftGraphGroupSettingTemplateCollectionResponse
   post(requestBody:MicrosoftGraphGroupSettingTemplate):MicrosoftGraphGroupSettingTemplate
}
export interface operation2890{
   get():MicrosoftGraphGroupSettingTemplate
   patch(requestBody:MicrosoftGraphGroupSettingTemplate):"Success"
   delete():"Success"
}
export interface operation2891{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation2892{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation2893{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation2894{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation2895{
   post():{}
}
export interface operation2896{
   get():ODataCountResponse
}
export interface operation2897{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation2898{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation2899{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation2900{
   get():MicrosoftGraphIdentityContainer
   patch(requestBody:MicrosoftGraphIdentityContainer):"Success"
}
export interface operation2901{
   get():MicrosoftGraphIdentityApiConnectorCollectionResponse
   post(requestBody:MicrosoftGraphIdentityApiConnector):MicrosoftGraphIdentityApiConnector
}
export interface operation2902{
   get():MicrosoftGraphIdentityApiConnector
   patch(requestBody:MicrosoftGraphIdentityApiConnector):"Success"
   delete():"Success"
}
export interface operation2903{
   post(requestBody:{pkcs12Value?: string,password?: string,}):{}
}
export interface operation2904{
   get():ODataCountResponse
}
export interface operation2905{
   get():MicrosoftGraphB2xIdentityUserFlowCollectionResponse
   post(requestBody:MicrosoftGraphB2xIdentityUserFlow):MicrosoftGraphB2xIdentityUserFlow
}
export interface operation2906{
   get():MicrosoftGraphB2xIdentityUserFlow
   patch(requestBody:MicrosoftGraphB2xIdentityUserFlow):"Success"
   delete():"Success"
}
export interface operation2907{
   get():MicrosoftGraphIdentityProviderCollectionResponse
}
export interface operation2908{
   get():MicrosoftGraphIdentityProvider
}
export interface operation2909{
   get():ODataCountResponse
}
export interface operation2910{
   get():MicrosoftGraphUserFlowLanguageConfigurationCollectionResponse
   post(requestBody:MicrosoftGraphUserFlowLanguageConfiguration):MicrosoftGraphUserFlowLanguageConfiguration
}
export interface operation2911{
   get():MicrosoftGraphUserFlowLanguageConfiguration
   patch(requestBody:MicrosoftGraphUserFlowLanguageConfiguration):"Success"
   delete():"Success"
}
export interface operation2912{
   get():MicrosoftGraphUserFlowLanguagePageCollectionResponse
   post(requestBody:MicrosoftGraphUserFlowLanguagePage):MicrosoftGraphUserFlowLanguagePage
}
export interface operation2913{
   get():MicrosoftGraphUserFlowLanguagePage
   patch(requestBody:MicrosoftGraphUserFlowLanguagePage):"Success"
   delete():"Success"
}
export interface operation2914{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2915{
   get():ODataCountResponse
}
export interface operation2916{
   get():MicrosoftGraphUserFlowLanguagePageCollectionResponse
   post(requestBody:MicrosoftGraphUserFlowLanguagePage):MicrosoftGraphUserFlowLanguagePage
}
export interface operation2917{
   get():MicrosoftGraphUserFlowLanguagePage
   patch(requestBody:MicrosoftGraphUserFlowLanguagePage):"Success"
   delete():"Success"
}
export interface operation2918{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation2919{
   get():ODataCountResponse
}
export interface operation2920{
   get():ODataCountResponse
}
export interface operation2921{
   get():MicrosoftGraphIdentityUserFlowAttributeAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphIdentityUserFlowAttributeAssignment):MicrosoftGraphIdentityUserFlowAttributeAssignment
}
export interface operation2922{
   get():MicrosoftGraphIdentityUserFlowAttributeAssignment
   patch(requestBody:MicrosoftGraphIdentityUserFlowAttributeAssignment):"Success"
   delete():"Success"
}
export interface operation2923{
   get():MicrosoftGraphIdentityUserFlowAttribute
}
export interface operation2924{
   get():ODataCountResponse
}
export interface operation2925{
   get():{}
}
export interface operation2926{
   post(requestBody:{newAssignmentOrder?: MicrosoftGraphAssignmentOrder,}):"Success"
}
export interface operation2927{
   get():MicrosoftGraphIdentityProviderBaseCollectionResponse
}
export interface operation2928{
   delete():"Success"
}
export interface operation2929{
   get():ODataCountResponse
}
export interface operation2930{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation2931{
   get():ODataCountResponse
}
export interface operation2932{
   get():MicrosoftGraphConditionalAccessRoot
   patch(requestBody:MicrosoftGraphConditionalAccessRoot):"Success"
   delete():"Success"
}
export interface operation2933{
   get():MicrosoftGraphNamedLocationCollectionResponse
   post(requestBody:MicrosoftGraphNamedLocation):MicrosoftGraphNamedLocation
}
export interface operation2934{
   get():MicrosoftGraphNamedLocation
   patch(requestBody:MicrosoftGraphNamedLocation):"Success"
   delete():"Success"
}
export interface operation2935{
   get():ODataCountResponse
}
export interface operation2936{
   get():MicrosoftGraphConditionalAccessPolicyCollectionResponse
   post(requestBody:MicrosoftGraphConditionalAccessPolicy):MicrosoftGraphConditionalAccessPolicy
}
export interface operation2937{
   get():MicrosoftGraphConditionalAccessPolicy
   patch(requestBody:MicrosoftGraphConditionalAccessPolicy):"Success"
   delete():"Success"
}
export interface operation2938{
   get():ODataCountResponse
}
export interface operation2939{
   get():MicrosoftGraphIdentityProviderBaseCollectionResponse
   post(requestBody:MicrosoftGraphIdentityProviderBase):MicrosoftGraphIdentityProviderBase
}
export interface operation2940{
   get():MicrosoftGraphIdentityProviderBase
   patch(requestBody:MicrosoftGraphIdentityProviderBase):"Success"
   delete():"Success"
}
export interface operation2941{
   get():ODataCountResponse
}
export interface operation2942{
   get():{value?: string[],}
}
export interface operation2943{
   get():MicrosoftGraphIdentityUserFlowAttributeCollectionResponse
   post(requestBody:MicrosoftGraphIdentityUserFlowAttribute):MicrosoftGraphIdentityUserFlowAttribute
}
export interface operation2944{
   get():MicrosoftGraphIdentityUserFlowAttribute
   patch(requestBody:MicrosoftGraphIdentityUserFlowAttribute):"Success"
   delete():"Success"
}
export interface operation2945{
   get():ODataCountResponse
}
export interface operation2946{
   get():MicrosoftGraphIdentityGovernance
   patch(requestBody:MicrosoftGraphIdentityGovernance):"Success"
}
export interface operation2947{
   get():MicrosoftGraphAccessReviewSet
   patch(requestBody:MicrosoftGraphAccessReviewSet):"Success"
   delete():"Success"
}
export interface operation2948{
   get():MicrosoftGraphAccessReviewScheduleDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphAccessReviewScheduleDefinition):MicrosoftGraphAccessReviewScheduleDefinition
}
export interface operation2949{
   get():MicrosoftGraphAccessReviewScheduleDefinition
   patch(requestBody:MicrosoftGraphAccessReviewScheduleDefinition):"Success"
   delete():"Success"
}
export interface operation2950{
   get():MicrosoftGraphAccessReviewInstanceCollectionResponse
   post(requestBody:MicrosoftGraphAccessReviewInstance):MicrosoftGraphAccessReviewInstance
}
export interface operation2951{
   get():MicrosoftGraphAccessReviewInstance
   patch(requestBody:MicrosoftGraphAccessReviewInstance):"Success"
   delete():"Success"
}
export interface operation2952{
   get():MicrosoftGraphAccessReviewReviewerCollectionResponse
   post(requestBody:MicrosoftGraphAccessReviewReviewer):MicrosoftGraphAccessReviewReviewer
}
export interface operation2953{
   get():MicrosoftGraphAccessReviewReviewer
   patch(requestBody:MicrosoftGraphAccessReviewReviewer):"Success"
   delete():"Success"
}
export interface operation2954{
   get():ODataCountResponse
}
export interface operation2955{
   get():MicrosoftGraphAccessReviewInstanceDecisionItemCollectionResponse
   post(requestBody:MicrosoftGraphAccessReviewInstanceDecisionItem):MicrosoftGraphAccessReviewInstanceDecisionItem
}
export interface operation2956{
   get():MicrosoftGraphAccessReviewInstanceDecisionItem
   patch(requestBody:MicrosoftGraphAccessReviewInstanceDecisionItem):"Success"
   delete():"Success"
}
export interface operation2957{
   get():ODataCountResponse
}
export interface operation2958{
   get():{value?: MicrosoftGraphAccessReviewInstanceDecisionItem[],}
}
export interface operation2959{
   post():"Success"
}
export interface operation2960{
   post():"Success"
}
export interface operation2961{
   post(requestBody:{decision?: string,justification?: string,principalId?: string,resourceId?: string,}):"Success"
}
export interface operation2962{
   post():"Success"
}
export interface operation2963{
   post():"Success"
}
export interface operation2964{
   post():"Success"
}
export interface operation2965{
   get():MicrosoftGraphAccessReviewStageCollectionResponse
   post(requestBody:MicrosoftGraphAccessReviewStage):MicrosoftGraphAccessReviewStage
}
export interface operation2966{
   get():MicrosoftGraphAccessReviewStage
   patch(requestBody:MicrosoftGraphAccessReviewStage):"Success"
   delete():"Success"
}
export interface operation2967{
   get():MicrosoftGraphAccessReviewInstanceDecisionItemCollectionResponse
   post(requestBody:MicrosoftGraphAccessReviewInstanceDecisionItem):MicrosoftGraphAccessReviewInstanceDecisionItem
}
export interface operation2968{
   get():MicrosoftGraphAccessReviewInstanceDecisionItem
   patch(requestBody:MicrosoftGraphAccessReviewInstanceDecisionItem):"Success"
   delete():"Success"
}
export interface operation2969{
   get():ODataCountResponse
}
export interface operation2970{
   get():{value?: MicrosoftGraphAccessReviewInstanceDecisionItem[],}
}
export interface operation2971{
   post():"Success"
}
export interface operation2972{
   get():ODataCountResponse
}
export interface operation2973{
   get():{value?: MicrosoftGraphAccessReviewStage[],}
}
export interface operation2974{
   get():ODataCountResponse
}
export interface operation2975{
   get():{value?: MicrosoftGraphAccessReviewInstance[],}
}
export interface operation2976{
   post():"Success"
}
export interface operation2977{
   get():ODataCountResponse
}
export interface operation2978{
   get():{value?: MicrosoftGraphAccessReviewScheduleDefinition[],}
}
export interface operation2979{
   get():MicrosoftGraphAccessReviewHistoryDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphAccessReviewHistoryDefinition):MicrosoftGraphAccessReviewHistoryDefinition
}
export interface operation2980{
   get():MicrosoftGraphAccessReviewHistoryDefinition
   patch(requestBody:MicrosoftGraphAccessReviewHistoryDefinition):"Success"
   delete():"Success"
}
export interface operation2981{
   get():MicrosoftGraphAccessReviewHistoryInstanceCollectionResponse
   post(requestBody:MicrosoftGraphAccessReviewHistoryInstance):MicrosoftGraphAccessReviewHistoryInstance
}
export interface operation2982{
   get():MicrosoftGraphAccessReviewHistoryInstance
   patch(requestBody:MicrosoftGraphAccessReviewHistoryInstance):"Success"
   delete():"Success"
}
export interface operation2983{
   post():{}
}
export interface operation2984{
   get():ODataCountResponse
}
export interface operation2985{
   get():ODataCountResponse
}
export interface operation2986{
   get():MicrosoftGraphAppConsentApprovalRoute
   patch(requestBody:MicrosoftGraphAppConsentApprovalRoute):"Success"
   delete():"Success"
}
export interface operation2987{
   get():MicrosoftGraphAppConsentRequestCollectionResponse
   post(requestBody:MicrosoftGraphAppConsentRequest):MicrosoftGraphAppConsentRequest
}
export interface operation2988{
   get():MicrosoftGraphAppConsentRequest
   patch(requestBody:MicrosoftGraphAppConsentRequest):"Success"
   delete():"Success"
}
export interface operation2989{
   get():MicrosoftGraphUserConsentRequestCollectionResponse
   post(requestBody:MicrosoftGraphUserConsentRequest):MicrosoftGraphUserConsentRequest
}
export interface operation2990{
   get():MicrosoftGraphUserConsentRequest
   patch(requestBody:MicrosoftGraphUserConsentRequest):"Success"
   delete():"Success"
}
export interface operation2991{
   get():MicrosoftGraphApproval
   patch(requestBody:MicrosoftGraphApproval):"Success"
   delete():"Success"
}
export interface operation2992{
   get():MicrosoftGraphApprovalStageCollectionResponse
   post(requestBody:MicrosoftGraphApprovalStage):MicrosoftGraphApprovalStage
}
export interface operation2993{
   get():MicrosoftGraphApprovalStage
   patch(requestBody:MicrosoftGraphApprovalStage):"Success"
   delete():"Success"
}
export interface operation2994{
   get():ODataCountResponse
}
export interface operation2995{
   get():ODataCountResponse
}
export interface operation2996{
   get():{value?: MicrosoftGraphUserConsentRequest[],}
}
export interface operation2997{
   get():ODataCountResponse
}
export interface operation2998{
   get():{value?: MicrosoftGraphAppConsentRequest[],}
}
export interface operation2999{
   get():MicrosoftGraphEntitlementManagement
   patch(requestBody:MicrosoftGraphEntitlementManagement):"Success"
   delete():"Success"
}
export interface operation3000{
   get():MicrosoftGraphApprovalCollectionResponse
   post(requestBody:MicrosoftGraphApproval):MicrosoftGraphApproval
}
export interface operation3001{
   get():MicrosoftGraphApproval
   patch(requestBody:MicrosoftGraphApproval):"Success"
   delete():"Success"
}
export interface operation3002{
   get():MicrosoftGraphApprovalStageCollectionResponse
   post(requestBody:MicrosoftGraphApprovalStage):MicrosoftGraphApprovalStage
}
export interface operation3003{
   get():MicrosoftGraphApprovalStage
   patch(requestBody:MicrosoftGraphApprovalStage):"Success"
   delete():"Success"
}
export interface operation3004{
   get():ODataCountResponse
}
export interface operation3005{
   get():ODataCountResponse
}
export interface operation3006{
   get():{value?: MicrosoftGraphApproval[],}
}
export interface operation3007{
   get():MicrosoftGraphAccessPackageCollectionResponse
   post(requestBody:MicrosoftGraphAccessPackage):MicrosoftGraphAccessPackage
}
export interface operation3008{
   get():MicrosoftGraphAccessPackage
   patch(requestBody:MicrosoftGraphAccessPackage):"Success"
   delete():"Success"
}
export interface operation3009{
   get():MicrosoftGraphAccessPackageAssignmentPolicyCollectionResponse
   post(requestBody:MicrosoftGraphAccessPackageAssignmentPolicy):MicrosoftGraphAccessPackageAssignmentPolicy
}
export interface operation3010{
   get():MicrosoftGraphAccessPackageAssignmentPolicy
   patch(requestBody:MicrosoftGraphAccessPackageAssignmentPolicy):"Success"
   delete():"Success"
}
export interface operation3011{
   get():MicrosoftGraphAccessPackage
}
export interface operation3012{
   get():MicrosoftGraphAccessPackageCatalog
}
export interface operation3013{
   get():ODataCountResponse
}
export interface operation3014{
   get():MicrosoftGraphAccessPackageCatalog
}
export interface operation3015{
   post():{value?: MicrosoftGraphAccessPackageAssignmentRequestRequirements[],}
}
export interface operation3016{
   get():ODataCountResponse
}
export interface operation3017{
   get():{value?: MicrosoftGraphAccessPackage[],}
}
export interface operation3018{
   get():MicrosoftGraphAccessPackageAssignmentPolicyCollectionResponse
   post(requestBody:MicrosoftGraphAccessPackageAssignmentPolicy):MicrosoftGraphAccessPackageAssignmentPolicy
}
export interface operation3019{
   get():MicrosoftGraphAccessPackageAssignmentPolicy
   patch(requestBody:MicrosoftGraphAccessPackageAssignmentPolicy):"Success"
   delete():"Success"
}
export interface operation3020{
   get():MicrosoftGraphAccessPackage
}
export interface operation3021{
   get():MicrosoftGraphAccessPackageCatalog
}
export interface operation3022{
   get():ODataCountResponse
}
export interface operation3023{
   get():MicrosoftGraphAccessPackageAssignmentRequestCollectionResponse
   post(requestBody:MicrosoftGraphAccessPackageAssignmentRequest):MicrosoftGraphAccessPackageAssignmentRequest
}
export interface operation3024{
   get():MicrosoftGraphAccessPackageAssignmentRequest
   patch(requestBody:MicrosoftGraphAccessPackageAssignmentRequest):"Success"
   delete():"Success"
}
export interface operation3025{
   get():MicrosoftGraphAccessPackage
}
export interface operation3026{
   get():MicrosoftGraphAccessPackageAssignment
}
export interface operation3027{
   post():"Success"
}
export interface operation3028{
   post():"Success"
}
export interface operation3029{
   get():MicrosoftGraphAccessPackageSubject
}
export interface operation3030{
   get():ODataCountResponse
}
export interface operation3031{
   get():{value?: MicrosoftGraphAccessPackageAssignmentRequest[],}
}
export interface operation3032{
   get():MicrosoftGraphAccessPackageAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphAccessPackageAssignment):MicrosoftGraphAccessPackageAssignment
}
export interface operation3033{
   get():MicrosoftGraphAccessPackageAssignment
   patch(requestBody:MicrosoftGraphAccessPackageAssignment):"Success"
   delete():"Success"
}
export interface operation3034{
   get():MicrosoftGraphAccessPackage
}
export interface operation3035{
   get():MicrosoftGraphAccessPackageAssignmentPolicy
}
export interface operation3036{
   post():"Success"
}
export interface operation3037{
   get():MicrosoftGraphAccessPackageSubject
}
export interface operation3038{
   get():ODataCountResponse
}
export interface operation3039{
   get():{value?: MicrosoftGraphAccessPackageAssignment[],}
}
export interface operation3040{
   get():MicrosoftGraphAccessPackageCatalogCollectionResponse
   post(requestBody:MicrosoftGraphAccessPackageCatalog):MicrosoftGraphAccessPackageCatalog
}
export interface operation3041{
   get():MicrosoftGraphAccessPackageCatalog
   patch(requestBody:MicrosoftGraphAccessPackageCatalog):"Success"
   delete():"Success"
}
export interface operation3042{
   get():MicrosoftGraphAccessPackageCollectionResponse
   post(requestBody:MicrosoftGraphAccessPackage):MicrosoftGraphAccessPackage
}
export interface operation3043{
   get():MicrosoftGraphAccessPackage
   patch(requestBody:MicrosoftGraphAccessPackage):"Success"
   delete():"Success"
}
export interface operation3044{
   get():MicrosoftGraphAccessPackageAssignmentPolicyCollectionResponse
   post(requestBody:MicrosoftGraphAccessPackageAssignmentPolicy):MicrosoftGraphAccessPackageAssignmentPolicy
}
export interface operation3045{
   get():MicrosoftGraphAccessPackageAssignmentPolicy
   patch(requestBody:MicrosoftGraphAccessPackageAssignmentPolicy):"Success"
   delete():"Success"
}
export interface operation3046{
   get():MicrosoftGraphAccessPackage
}
export interface operation3047{
   get():MicrosoftGraphAccessPackageCatalog
}
export interface operation3048{
   get():ODataCountResponse
}
export interface operation3049{
   get():MicrosoftGraphAccessPackageCatalog
}
export interface operation3050{
   post():{value?: MicrosoftGraphAccessPackageAssignmentRequestRequirements[],}
}
export interface operation3051{
   get():ODataCountResponse
}
export interface operation3052{
   get():{value?: MicrosoftGraphAccessPackage[],}
}
export interface operation3053{
   get():ODataCountResponse
}
export interface operation3054{
   get():MicrosoftGraphConnectedOrganizationCollectionResponse
   post(requestBody:MicrosoftGraphConnectedOrganization):MicrosoftGraphConnectedOrganization
}
export interface operation3055{
   get():MicrosoftGraphConnectedOrganization
   patch(requestBody:MicrosoftGraphConnectedOrganization):"Success"
   delete():"Success"
}
export interface operation3056{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
   post(requestBody:MicrosoftGraphDirectoryObject):MicrosoftGraphDirectoryObject
}
export interface operation3057{
   delete():"Success"
}
export interface operation3058{
   get():ODataCountResponse
}
export interface operation3059{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation3060{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation3061{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation3062{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation3063{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
   post(requestBody:MicrosoftGraphDirectoryObject):MicrosoftGraphDirectoryObject
}
export interface operation3064{
   delete():"Success"
}
export interface operation3065{
   get():ODataCountResponse
}
export interface operation3066{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation3067{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation3068{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation3069{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation3070{
   get():ODataCountResponse
}
export interface operation3071{
   get():MicrosoftGraphEntitlementManagementSettings
   patch(requestBody:MicrosoftGraphEntitlementManagementSettings):"Success"
   delete():"Success"
}
export interface operation3072{
   get():MicrosoftGraphTermsOfUseContainer
   patch(requestBody:MicrosoftGraphTermsOfUseContainer):"Success"
   delete():"Success"
}
export interface operation3073{
   get():MicrosoftGraphAgreementAcceptanceCollectionResponse
   post(requestBody:MicrosoftGraphAgreementAcceptance):MicrosoftGraphAgreementAcceptance
}
export interface operation3074{
   get():MicrosoftGraphAgreementAcceptance
   patch(requestBody:MicrosoftGraphAgreementAcceptance):"Success"
   delete():"Success"
}
export interface operation3075{
   get():ODataCountResponse
}
export interface operation3076{
   get():MicrosoftGraphAgreementCollectionResponse
   post(requestBody:MicrosoftGraphAgreement):MicrosoftGraphAgreement
}
export interface operation3077{
   get():MicrosoftGraphAgreement
   patch(requestBody:MicrosoftGraphAgreement):"Success"
   delete():"Success"
}
export interface operation3078{
   get():MicrosoftGraphAgreementAcceptanceCollectionResponse
   post(requestBody:MicrosoftGraphAgreementAcceptance):MicrosoftGraphAgreementAcceptance
}
export interface operation3079{
   get():MicrosoftGraphAgreementAcceptance
   patch(requestBody:MicrosoftGraphAgreementAcceptance):"Success"
   delete():"Success"
}
export interface operation3080{
   get():ODataCountResponse
}
export interface operation3081{
   get():MicrosoftGraphAgreementFile
   patch(requestBody:MicrosoftGraphAgreementFile):"Success"
   delete():"Success"
}
export interface operation3082{
   get():MicrosoftGraphAgreementFileLocalizationCollectionResponse
   post(requestBody:MicrosoftGraphAgreementFileLocalization):MicrosoftGraphAgreementFileLocalization
}
export interface operation3083{
   get():MicrosoftGraphAgreementFileLocalization
   patch(requestBody:MicrosoftGraphAgreementFileLocalization):"Success"
   delete():"Success"
}
export interface operation3084{
   get():MicrosoftGraphAgreementFileVersionCollectionResponse
   post(requestBody:MicrosoftGraphAgreementFileVersion):MicrosoftGraphAgreementFileVersion
}
export interface operation3085{
   get():MicrosoftGraphAgreementFileVersion
   patch(requestBody:MicrosoftGraphAgreementFileVersion):"Success"
   delete():"Success"
}
export interface operation3086{
   get():ODataCountResponse
}
export interface operation3087{
   get():ODataCountResponse
}
export interface operation3088{
   get():MicrosoftGraphAgreementFileLocalizationCollectionResponse
   post(requestBody:MicrosoftGraphAgreementFileLocalization):MicrosoftGraphAgreementFileLocalization
}
export interface operation3089{
   get():MicrosoftGraphAgreementFileLocalization
   patch(requestBody:MicrosoftGraphAgreementFileLocalization):"Success"
   delete():"Success"
}
export interface operation3090{
   get():MicrosoftGraphAgreementFileVersionCollectionResponse
   post(requestBody:MicrosoftGraphAgreementFileVersion):MicrosoftGraphAgreementFileVersion
}
export interface operation3091{
   get():MicrosoftGraphAgreementFileVersion
   patch(requestBody:MicrosoftGraphAgreementFileVersion):"Success"
   delete():"Success"
}
export interface operation3092{
   get():ODataCountResponse
}
export interface operation3093{
   get():ODataCountResponse
}
export interface operation3094{
   get():ODataCountResponse
}
export interface operation3095{
   get():MicrosoftGraphIdentityProtectionRoot
   patch(requestBody:MicrosoftGraphIdentityProtectionRoot):"Success"
}
export interface operation3096{
   get():MicrosoftGraphRiskDetectionCollectionResponse
   post(requestBody:MicrosoftGraphRiskDetection):MicrosoftGraphRiskDetection
}
export interface operation3097{
   get():MicrosoftGraphRiskDetection
   patch(requestBody:MicrosoftGraphRiskDetection):"Success"
   delete():"Success"
}
export interface operation3098{
   get():ODataCountResponse
}
export interface operation3099{
   get():MicrosoftGraphRiskyUserCollectionResponse
   post(requestBody:MicrosoftGraphRiskyUser):MicrosoftGraphRiskyUser
}
export interface operation3100{
   get():MicrosoftGraphRiskyUser
   patch(requestBody:MicrosoftGraphRiskyUser):"Success"
   delete():"Success"
}
export interface operation3101{
   get():MicrosoftGraphRiskyUserHistoryItemCollectionResponse
   post(requestBody:MicrosoftGraphRiskyUserHistoryItem):MicrosoftGraphRiskyUserHistoryItem
}
export interface operation3102{
   get():MicrosoftGraphRiskyUserHistoryItem
   patch(requestBody:MicrosoftGraphRiskyUserHistoryItem):"Success"
   delete():"Success"
}
export interface operation3103{
   get():ODataCountResponse
}
export interface operation3104{
   get():ODataCountResponse
}
export interface operation3105{
   post(requestBody:{userIds?: string[],}):"Success"
}
export interface operation3106{
   post(requestBody:{userIds?: string[],}):"Success"
}
export interface operation3107{
   get():MicrosoftGraphIdentityProviderCollectionResponse
   post(requestBody:MicrosoftGraphIdentityProvider):MicrosoftGraphIdentityProvider
}
export interface operation3108{
   get():MicrosoftGraphIdentityProvider
   patch(requestBody:MicrosoftGraphIdentityProvider):"Success"
   delete():"Success"
}
export interface operation3109{
   get():ODataCountResponse
}
export interface operation3110{
   get():{value?: string[],}
}
export interface operation3111{
   get():MicrosoftGraphInformationProtection
   patch(requestBody:MicrosoftGraphInformationProtection):"Success"
}
export interface operation3112{
   get():MicrosoftGraphBitlocker
   patch(requestBody:MicrosoftGraphBitlocker):"Success"
}
export interface operation3113{
   get():MicrosoftGraphBitlockerRecoveryKeyCollectionResponse
   post(requestBody:MicrosoftGraphBitlockerRecoveryKey):MicrosoftGraphBitlockerRecoveryKey
}
export interface operation3114{
   get():MicrosoftGraphBitlockerRecoveryKey
}
export interface operation3115{
   get():ODataCountResponse
}
export interface operation3116{
   get():MicrosoftGraphThreatAssessmentRequestCollectionResponse
   post(requestBody:MicrosoftGraphThreatAssessmentRequest):MicrosoftGraphThreatAssessmentRequest
}
export interface operation3117{
   get():MicrosoftGraphThreatAssessmentRequest
   patch(requestBody:MicrosoftGraphThreatAssessmentRequest):"Success"
   delete():"Success"
}
export interface operation3118{
   get():MicrosoftGraphThreatAssessmentResultCollectionResponse
   post(requestBody:MicrosoftGraphThreatAssessmentResult):MicrosoftGraphThreatAssessmentResult
}
export interface operation3119{
   get():MicrosoftGraphThreatAssessmentResult
   patch(requestBody:MicrosoftGraphThreatAssessmentResult):"Success"
   delete():"Success"
}
export interface operation3120{
   get():ODataCountResponse
}
export interface operation3121{
   get():ODataCountResponse
}
export interface operation3122{
   get():MicrosoftGraphInvitationCollectionResponse
   post(requestBody:MicrosoftGraphInvitation):MicrosoftGraphInvitation
}
export interface operation3123{
   get():MicrosoftGraphInvitation
   patch(requestBody:MicrosoftGraphInvitation):"Success"
   delete():"Success"
}
export interface operation3124{
   get():MicrosoftGraphUser
}
export interface operation3125{
   get():ODataCountResponse
}
export interface operation3126{
   get():MicrosoftGraphOrganizationalBrandingLocalizationCollectionResponse
   post(requestBody:MicrosoftGraphOrganizationalBrandingLocalization):MicrosoftGraphOrganizationalBrandingLocalization
}
export interface operation3127{
   get():MicrosoftGraphOrganizationalBrandingLocalization
   patch(requestBody:MicrosoftGraphOrganizationalBrandingLocalization):"Success"
   delete():"Success"
}
export interface operation3128{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3129{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3130{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3131{
   get():ODataCountResponse
}
export interface operation3132{
   get():MicrosoftGraphUser
   patch(requestBody:MicrosoftGraphUser):"Success"
}
export interface operation3133{
   get():MicrosoftGraphUserActivityCollectionResponse
   post(requestBody:MicrosoftGraphUserActivity):MicrosoftGraphUserActivity
}
export interface operation3134{
   get():MicrosoftGraphUserActivity
   patch(requestBody:MicrosoftGraphUserActivity):"Success"
   delete():"Success"
}
export interface operation3135{
   get():MicrosoftGraphActivityHistoryItemCollectionResponse
   post(requestBody:MicrosoftGraphActivityHistoryItem):MicrosoftGraphActivityHistoryItem
}
export interface operation3136{
   get():MicrosoftGraphActivityHistoryItem
   patch(requestBody:MicrosoftGraphActivityHistoryItem):"Success"
   delete():"Success"
}
export interface operation3137{
   get():MicrosoftGraphUserActivity
}
export interface operation3138{
   get():ODataCountResponse
}
export interface operation3139{
   get():ODataCountResponse
}
export interface operation3140{
   get():{value?: MicrosoftGraphUserActivity[],}
}
export interface operation3141{
   get():MicrosoftGraphAgreementAcceptanceCollectionResponse
}
export interface operation3142{
   get():MicrosoftGraphAgreementAcceptance
}
export interface operation3143{
   get():ODataCountResponse
}
export interface operation3144{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphAppRoleAssignment):MicrosoftGraphAppRoleAssignment
}
export interface operation3145{
   get():MicrosoftGraphAppRoleAssignment
   patch(requestBody:MicrosoftGraphAppRoleAssignment):"Success"
   delete():"Success"
}
export interface operation3146{
   get():ODataCountResponse
}
export interface operation3147{
   get():MicrosoftGraphAuthentication
   patch(requestBody:MicrosoftGraphAuthentication):"Success"
   delete():"Success"
}
export interface operation3148{
   get():MicrosoftGraphEmailAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphEmailAuthenticationMethod):MicrosoftGraphEmailAuthenticationMethod
}
export interface operation3149{
   get():MicrosoftGraphEmailAuthenticationMethod
   patch(requestBody:MicrosoftGraphEmailAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation3150{
   get():ODataCountResponse
}
export interface operation3151{
   get():MicrosoftGraphFido2AuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphFido2AuthenticationMethod):MicrosoftGraphFido2AuthenticationMethod
}
export interface operation3152{
   get():MicrosoftGraphFido2AuthenticationMethod
   patch(requestBody:MicrosoftGraphFido2AuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation3153{
   get():ODataCountResponse
}
export interface operation3154{
   get():MicrosoftGraphAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphAuthenticationMethod):MicrosoftGraphAuthenticationMethod
}
export interface operation3155{
   get():MicrosoftGraphAuthenticationMethod
   patch(requestBody:MicrosoftGraphAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation3156{
   post(requestBody:{newPassword?: string,requireChangeOnNextSignIn?: boolean,}):{}
}
export interface operation3157{
   get():ODataCountResponse
}
export interface operation3158{
   get():MicrosoftGraphMicrosoftAuthenticatorAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod):MicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod
}
export interface operation3159{
   get():MicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod
   patch(requestBody:MicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation3160{
   get():MicrosoftGraphDevice
   patch(requestBody:MicrosoftGraphDevice):"Success"
   delete():"Success"
}
export interface operation3161{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3162{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3163{
   get():ODataCountResponse
}
export interface operation3164{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation3165{
   get():MicrosoftGraphDirectoryObject
}
export interface operation3166{
   get():MicrosoftGraphApplication
}
export interface operation3167{
   get():MicrosoftGraphDevice
}
export interface operation3168{
   get():MicrosoftGraphGroup
}
export interface operation3169{
   get():MicrosoftGraphOrgContact
}
export interface operation3170{
   get():MicrosoftGraphServicePrincipal
}
export interface operation3171{
   get():MicrosoftGraphUser
}
export interface operation3172{
   get():ODataCountResponse
}
export interface operation3173{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation3174{
   get():ODataCountResponse
}
export interface operation3175{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation3176{
   get():ODataCountResponse
}
export interface operation3177{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation3178{
   get():ODataCountResponse
}
export interface operation3179{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation3180{
   get():ODataCountResponse
}
export interface operation3181{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation3182{
   get():ODataCountResponse
}
export interface operation3183{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation3184{
   get():ODataCountResponse
}
export interface operation3185{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation3186{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation3187{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation3188{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation3189{
   post():{}
}
export interface operation3190{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation3191{
   delete():"Success"
}
export interface operation3192{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation3193{
   get():MicrosoftGraphEndpoint
}
export interface operation3194{
   get():MicrosoftGraphServicePrincipal
}
export interface operation3195{
   get():MicrosoftGraphUser
}
export interface operation3196{
   get():ODataCountResponse
}
export interface operation3197{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation3198{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation3199{
   get():ODataCountResponse
}
export interface operation3200{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation3201{
   get():ODataCountResponse
}
export interface operation3202{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation3203{
   get():ODataCountResponse
}
export interface operation3204{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation3205{
   get():ODataCountResponse
}
export interface operation3206{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation3207{
   get():MicrosoftGraphDirectoryObject
}
export interface operation3208{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation3209{
   get():MicrosoftGraphEndpoint
}
export interface operation3210{
   get():MicrosoftGraphServicePrincipal
}
export interface operation3211{
   get():MicrosoftGraphUser
}
export interface operation3212{
   get():ODataCountResponse
}
export interface operation3213{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation3214{
   get():ODataCountResponse
}
export interface operation3215{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation3216{
   get():ODataCountResponse
}
export interface operation3217{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation3218{
   get():ODataCountResponse
}
export interface operation3219{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation3220{
   get():ODataCountResponse
}
export interface operation3221{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation3222{
   get():MicrosoftGraphDirectoryObject
}
export interface operation3223{
   get():MicrosoftGraphApplication
}
export interface operation3224{
   get():MicrosoftGraphDevice
}
export interface operation3225{
   get():MicrosoftGraphGroup
}
export interface operation3226{
   get():MicrosoftGraphOrgContact
}
export interface operation3227{
   get():MicrosoftGraphServicePrincipal
}
export interface operation3228{
   get():MicrosoftGraphUser
}
export interface operation3229{
   get():ODataCountResponse
}
export interface operation3230{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation3231{
   get():ODataCountResponse
}
export interface operation3232{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation3233{
   get():ODataCountResponse
}
export interface operation3234{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation3235{
   get():ODataCountResponse
}
export interface operation3236{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation3237{
   get():ODataCountResponse
}
export interface operation3238{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation3239{
   get():ODataCountResponse
}
export interface operation3240{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation3241{
   get():ODataCountResponse
}
export interface operation3242{
   get():ODataCountResponse
}
export interface operation3243{
   get():MicrosoftGraphLongRunningOperationCollectionResponse
   post(requestBody:MicrosoftGraphLongRunningOperation):MicrosoftGraphLongRunningOperation
}
export interface operation3244{
   get():MicrosoftGraphLongRunningOperation
   patch(requestBody:MicrosoftGraphLongRunningOperation):"Success"
   delete():"Success"
}
export interface operation3245{
   get():ODataCountResponse
}
export interface operation3246{
   get():MicrosoftGraphPasswordAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphPasswordAuthenticationMethod):MicrosoftGraphPasswordAuthenticationMethod
}
export interface operation3247{
   get():MicrosoftGraphPasswordAuthenticationMethod
   patch(requestBody:MicrosoftGraphPasswordAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation3248{
   get():ODataCountResponse
}
export interface operation3249{
   get():MicrosoftGraphPhoneAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphPhoneAuthenticationMethod):MicrosoftGraphPhoneAuthenticationMethod
}
export interface operation3250{
   get():MicrosoftGraphPhoneAuthenticationMethod
   patch(requestBody:MicrosoftGraphPhoneAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation3251{
   post():"Success"
}
export interface operation3252{
   post():"Success"
}
export interface operation3253{
   get():ODataCountResponse
}
export interface operation3254{
   get():MicrosoftGraphSoftwareOathAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphSoftwareOathAuthenticationMethod):MicrosoftGraphSoftwareOathAuthenticationMethod
}
export interface operation3255{
   get():MicrosoftGraphSoftwareOathAuthenticationMethod
   patch(requestBody:MicrosoftGraphSoftwareOathAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation3256{
   get():ODataCountResponse
}
export interface operation3257{
   get():MicrosoftGraphTemporaryAccessPassAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphTemporaryAccessPassAuthenticationMethod):MicrosoftGraphTemporaryAccessPassAuthenticationMethod
}
export interface operation3258{
   get():MicrosoftGraphTemporaryAccessPassAuthenticationMethod
   patch(requestBody:MicrosoftGraphTemporaryAccessPassAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation3259{
   get():ODataCountResponse
}
export interface operation3260{
   get():MicrosoftGraphWindowsHelloForBusinessAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphWindowsHelloForBusinessAuthenticationMethod):MicrosoftGraphWindowsHelloForBusinessAuthenticationMethod
}
export interface operation3261{
   get():MicrosoftGraphWindowsHelloForBusinessAuthenticationMethod
   patch(requestBody:MicrosoftGraphWindowsHelloForBusinessAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation3262{
   get():MicrosoftGraphDevice
   patch(requestBody:MicrosoftGraphDevice):"Success"
   delete():"Success"
}
export interface operation3263{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3264{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3265{
   get():ODataCountResponse
}
export interface operation3266{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation3267{
   get():MicrosoftGraphDirectoryObject
}
export interface operation3268{
   get():MicrosoftGraphApplication
}
export interface operation3269{
   get():MicrosoftGraphDevice
}
export interface operation3270{
   get():MicrosoftGraphGroup
}
export interface operation3271{
   get():MicrosoftGraphOrgContact
}
export interface operation3272{
   get():MicrosoftGraphServicePrincipal
}
export interface operation3273{
   get():MicrosoftGraphUser
}
export interface operation3274{
   get():ODataCountResponse
}
export interface operation3275{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation3276{
   get():ODataCountResponse
}
export interface operation3277{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation3278{
   get():ODataCountResponse
}
export interface operation3279{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation3280{
   get():ODataCountResponse
}
export interface operation3281{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation3282{
   get():ODataCountResponse
}
export interface operation3283{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation3284{
   get():ODataCountResponse
}
export interface operation3285{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation3286{
   get():ODataCountResponse
}
export interface operation3287{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation3288{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation3289{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation3290{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation3291{
   post():{}
}
export interface operation3292{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation3293{
   delete():"Success"
}
export interface operation3294{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation3295{
   get():MicrosoftGraphEndpoint
}
export interface operation3296{
   get():MicrosoftGraphServicePrincipal
}
export interface operation3297{
   get():MicrosoftGraphUser
}
export interface operation3298{
   get():ODataCountResponse
}
export interface operation3299{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation3300{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation3301{
   get():ODataCountResponse
}
export interface operation3302{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation3303{
   get():ODataCountResponse
}
export interface operation3304{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation3305{
   get():ODataCountResponse
}
export interface operation3306{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation3307{
   get():ODataCountResponse
}
export interface operation3308{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation3309{
   get():MicrosoftGraphDirectoryObject
}
export interface operation3310{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation3311{
   get():MicrosoftGraphEndpoint
}
export interface operation3312{
   get():MicrosoftGraphServicePrincipal
}
export interface operation3313{
   get():MicrosoftGraphUser
}
export interface operation3314{
   get():ODataCountResponse
}
export interface operation3315{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation3316{
   get():ODataCountResponse
}
export interface operation3317{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation3318{
   get():ODataCountResponse
}
export interface operation3319{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation3320{
   get():ODataCountResponse
}
export interface operation3321{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation3322{
   get():ODataCountResponse
}
export interface operation3323{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation3324{
   get():MicrosoftGraphDirectoryObject
}
export interface operation3325{
   get():MicrosoftGraphApplication
}
export interface operation3326{
   get():MicrosoftGraphDevice
}
export interface operation3327{
   get():MicrosoftGraphGroup
}
export interface operation3328{
   get():MicrosoftGraphOrgContact
}
export interface operation3329{
   get():MicrosoftGraphServicePrincipal
}
export interface operation3330{
   get():MicrosoftGraphUser
}
export interface operation3331{
   get():ODataCountResponse
}
export interface operation3332{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation3333{
   get():ODataCountResponse
}
export interface operation3334{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation3335{
   get():ODataCountResponse
}
export interface operation3336{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation3337{
   get():ODataCountResponse
}
export interface operation3338{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation3339{
   get():ODataCountResponse
}
export interface operation3340{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation3341{
   get():ODataCountResponse
}
export interface operation3342{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation3343{
   get():ODataCountResponse
}
export interface operation3344{
   get():ODataCountResponse
}
export interface operation3345{
   get():MicrosoftGraphCalendar
   patch(requestBody:MicrosoftGraphCalendar):"Success"
   delete():"Success"
}
export interface operation3346{
   get():MicrosoftGraphCalendarPermissionCollectionResponse
   post(requestBody:MicrosoftGraphCalendarPermission):MicrosoftGraphCalendarPermission
}
export interface operation3347{
   get():MicrosoftGraphCalendarPermission
   patch(requestBody:MicrosoftGraphCalendarPermission):"Success"
   delete():"Success"
}
export interface operation3348{
   get():ODataCountResponse
}
export interface operation3349{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3350{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3351{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3352{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3353{
   get():ODataCountResponse
}
export interface operation3354{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3355{
   get():MicrosoftGraphCalendar
}
export interface operation3356{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3357{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3358{
   get():ODataCountResponse
}
export interface operation3359{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3360{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3361{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3362{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3363{
   get():ODataCountResponse
}
export interface operation3364{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3365{
   get():MicrosoftGraphCalendar
}
export interface operation3366{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3367{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3368{
   get():ODataCountResponse
}
export interface operation3369{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3370{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3371{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3372{
   post():"Success"
}
export interface operation3373{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3374{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3375{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3376{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3377{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3378{
   get():ODataCountResponse
}
export interface operation3379{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3380{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3381{
   get():ODataCountResponse
}
export interface operation3382{
   get():ODataCountResponse
}
export interface operation3383{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3384{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3385{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3386{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3387{
   post():"Success"
}
export interface operation3388{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3389{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3390{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3391{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3392{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3393{
   get():ODataCountResponse
}
export interface operation3394{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3395{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3396{
   get():ODataCountResponse
}
export interface operation3397{
   get():ODataCountResponse
}
export interface operation3398{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3399{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3400{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3401{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3402{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3403{
   get():ODataCountResponse
}
export interface operation3404{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3405{
   get():MicrosoftGraphCalendar
}
export interface operation3406{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3407{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3408{
   get():ODataCountResponse
}
export interface operation3409{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3410{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3411{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3412{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3413{
   get():ODataCountResponse
}
export interface operation3414{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3415{
   get():MicrosoftGraphCalendar
}
export interface operation3416{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3417{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3418{
   get():ODataCountResponse
}
export interface operation3419{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3420{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3421{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3422{
   post():"Success"
}
export interface operation3423{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3424{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3425{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3426{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3427{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3428{
   get():ODataCountResponse
}
export interface operation3429{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3430{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3431{
   get():ODataCountResponse
}
export interface operation3432{
   get():ODataCountResponse
}
export interface operation3433{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3434{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3435{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3436{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3437{
   post():"Success"
}
export interface operation3438{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3439{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3440{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3441{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3442{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3443{
   get():ODataCountResponse
}
export interface operation3444{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3445{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3446{
   get():ODataCountResponse
}
export interface operation3447{
   get():ODataCountResponse
}
export interface operation3448{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3449{
   get():{value?: string[],}
}
export interface operation3450{
   post(requestBody:{Schedules?: string[],EndTime?: MicrosoftGraphDateTimeTimeZone,StartTime?: MicrosoftGraphDateTimeTimeZone,AvailabilityViewInterval?: number,}):{value?: MicrosoftGraphScheduleInformation[],}
}
export interface operation3451{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3452{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3453{
   get():ODataCountResponse
}
export interface operation3454{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3455{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3456{
   get():ODataCountResponse
}
export interface operation3457{
   get():MicrosoftGraphCalendarGroupCollectionResponse
   post(requestBody:MicrosoftGraphCalendarGroup):MicrosoftGraphCalendarGroup
}
export interface operation3458{
   get():MicrosoftGraphCalendarGroup
   patch(requestBody:MicrosoftGraphCalendarGroup):"Success"
   delete():"Success"
}
export interface operation3459{
   get():MicrosoftGraphCalendarCollectionResponse
   post(requestBody:MicrosoftGraphCalendar):MicrosoftGraphCalendar
}
export interface operation3460{
   get():MicrosoftGraphCalendar
   patch(requestBody:MicrosoftGraphCalendar):"Success"
   delete():"Success"
}
export interface operation3461{
   get():MicrosoftGraphCalendarPermissionCollectionResponse
   post(requestBody:MicrosoftGraphCalendarPermission):MicrosoftGraphCalendarPermission
}
export interface operation3462{
   get():MicrosoftGraphCalendarPermission
   patch(requestBody:MicrosoftGraphCalendarPermission):"Success"
   delete():"Success"
}
export interface operation3463{
   get():ODataCountResponse
}
export interface operation3464{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3465{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3466{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3467{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3468{
   get():ODataCountResponse
}
export interface operation3469{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3470{
   get():MicrosoftGraphCalendar
}
export interface operation3471{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3472{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3473{
   get():ODataCountResponse
}
export interface operation3474{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3475{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3476{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3477{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3478{
   get():ODataCountResponse
}
export interface operation3479{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3480{
   get():MicrosoftGraphCalendar
}
export interface operation3481{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3482{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3483{
   get():ODataCountResponse
}
export interface operation3484{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3485{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3486{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3487{
   post():"Success"
}
export interface operation3488{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3489{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3490{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3491{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3492{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3493{
   get():ODataCountResponse
}
export interface operation3494{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3495{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3496{
   get():ODataCountResponse
}
export interface operation3497{
   get():ODataCountResponse
}
export interface operation3498{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3499{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3500{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3501{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3502{
   post():"Success"
}
export interface operation3503{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3504{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3505{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3506{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3507{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3508{
   get():ODataCountResponse
}
export interface operation3509{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3510{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3511{
   get():ODataCountResponse
}
export interface operation3512{
   get():ODataCountResponse
}
export interface operation3513{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3514{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3515{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3516{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3517{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3518{
   get():ODataCountResponse
}
export interface operation3519{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3520{
   get():MicrosoftGraphCalendar
}
export interface operation3521{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3522{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3523{
   get():ODataCountResponse
}
export interface operation3524{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3525{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3526{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3527{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3528{
   get():ODataCountResponse
}
export interface operation3529{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3530{
   get():MicrosoftGraphCalendar
}
export interface operation3531{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3532{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3533{
   get():ODataCountResponse
}
export interface operation3534{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3535{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3536{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3537{
   post():"Success"
}
export interface operation3538{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3539{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3540{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3541{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3542{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3543{
   get():ODataCountResponse
}
export interface operation3544{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3545{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3546{
   get():ODataCountResponse
}
export interface operation3547{
   get():ODataCountResponse
}
export interface operation3548{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3549{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3550{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3551{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3552{
   post():"Success"
}
export interface operation3553{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3554{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3555{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3556{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3557{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3558{
   get():ODataCountResponse
}
export interface operation3559{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3560{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3561{
   get():ODataCountResponse
}
export interface operation3562{
   get():ODataCountResponse
}
export interface operation3563{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3564{
   get():{value?: string[],}
}
export interface operation3565{
   post(requestBody:{Schedules?: string[],EndTime?: MicrosoftGraphDateTimeTimeZone,StartTime?: MicrosoftGraphDateTimeTimeZone,AvailabilityViewInterval?: number,}):{value?: MicrosoftGraphScheduleInformation[],}
}
export interface operation3566{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3567{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3568{
   get():ODataCountResponse
}
export interface operation3569{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3570{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3571{
   get():ODataCountResponse
}
export interface operation3572{
   get():ODataCountResponse
}
export interface operation3573{
   get():ODataCountResponse
}
export interface operation3574{
   get():MicrosoftGraphCalendarCollectionResponse
   post(requestBody:MicrosoftGraphCalendar):MicrosoftGraphCalendar
}
export interface operation3575{
   get():MicrosoftGraphCalendar
   patch(requestBody:MicrosoftGraphCalendar):"Success"
   delete():"Success"
}
export interface operation3576{
   get():MicrosoftGraphCalendarPermissionCollectionResponse
   post(requestBody:MicrosoftGraphCalendarPermission):MicrosoftGraphCalendarPermission
}
export interface operation3577{
   get():MicrosoftGraphCalendarPermission
   patch(requestBody:MicrosoftGraphCalendarPermission):"Success"
   delete():"Success"
}
export interface operation3578{
   get():ODataCountResponse
}
export interface operation3579{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3580{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3581{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3582{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3583{
   get():ODataCountResponse
}
export interface operation3584{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3585{
   get():MicrosoftGraphCalendar
}
export interface operation3586{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3587{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3588{
   get():ODataCountResponse
}
export interface operation3589{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3590{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3591{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3592{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3593{
   get():ODataCountResponse
}
export interface operation3594{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3595{
   get():MicrosoftGraphCalendar
}
export interface operation3596{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3597{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3598{
   get():ODataCountResponse
}
export interface operation3599{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3600{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3601{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3602{
   post():"Success"
}
export interface operation3603{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3604{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3605{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3606{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3607{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3608{
   get():ODataCountResponse
}
export interface operation3609{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3610{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3611{
   get():ODataCountResponse
}
export interface operation3612{
   get():ODataCountResponse
}
export interface operation3613{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3614{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3615{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3616{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3617{
   post():"Success"
}
export interface operation3618{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3619{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3620{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3621{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3622{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3623{
   get():ODataCountResponse
}
export interface operation3624{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3625{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3626{
   get():ODataCountResponse
}
export interface operation3627{
   get():ODataCountResponse
}
export interface operation3628{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3629{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3630{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3631{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3632{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3633{
   get():ODataCountResponse
}
export interface operation3634{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3635{
   get():MicrosoftGraphCalendar
}
export interface operation3636{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3637{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3638{
   get():ODataCountResponse
}
export interface operation3639{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3640{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3641{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3642{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3643{
   get():ODataCountResponse
}
export interface operation3644{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3645{
   get():MicrosoftGraphCalendar
}
export interface operation3646{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3647{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3648{
   get():ODataCountResponse
}
export interface operation3649{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3650{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3651{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3652{
   post():"Success"
}
export interface operation3653{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3654{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3655{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3656{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3657{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3658{
   get():ODataCountResponse
}
export interface operation3659{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3660{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3661{
   get():ODataCountResponse
}
export interface operation3662{
   get():ODataCountResponse
}
export interface operation3663{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3664{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3665{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3666{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3667{
   post():"Success"
}
export interface operation3668{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3669{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3670{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3671{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3672{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3673{
   get():ODataCountResponse
}
export interface operation3674{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3675{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3676{
   get():ODataCountResponse
}
export interface operation3677{
   get():ODataCountResponse
}
export interface operation3678{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3679{
   get():{value?: string[],}
}
export interface operation3680{
   post(requestBody:{Schedules?: string[],EndTime?: MicrosoftGraphDateTimeTimeZone,StartTime?: MicrosoftGraphDateTimeTimeZone,AvailabilityViewInterval?: number,}):{value?: MicrosoftGraphScheduleInformation[],}
}
export interface operation3681{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3682{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3683{
   get():ODataCountResponse
}
export interface operation3684{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3685{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3686{
   get():ODataCountResponse
}
export interface operation3687{
   get():ODataCountResponse
}
export interface operation3688{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3689{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3690{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3691{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3692{
   get():ODataCountResponse
}
export interface operation3693{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3694{
   get():MicrosoftGraphCalendar
}
export interface operation3695{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3696{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3697{
   get():ODataCountResponse
}
export interface operation3698{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation3699{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation3700{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation3701{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation3702{
   get():ODataCountResponse
}
export interface operation3703{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation3704{
   get():MicrosoftGraphCalendar
}
export interface operation3705{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3706{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3707{
   get():ODataCountResponse
}
export interface operation3708{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3709{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3710{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3711{
   post():"Success"
}
export interface operation3712{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3713{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3714{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3715{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3716{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3717{
   get():ODataCountResponse
}
export interface operation3718{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3719{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3720{
   get():ODataCountResponse
}
export interface operation3721{
   get():ODataCountResponse
}
export interface operation3722{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3723{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation3724{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation3725{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3726{
   post():"Success"
}
export interface operation3727{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation3728{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation3729{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation3730{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3731{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3732{
   get():ODataCountResponse
}
export interface operation3733{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3734{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3735{
   get():ODataCountResponse
}
export interface operation3736{
   get():ODataCountResponse
}
export interface operation3737{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation3738{
   get():MicrosoftGraphChatCollectionResponse
   post(requestBody:MicrosoftGraphChat):MicrosoftGraphChat
}
export interface operation3739{
   get():MicrosoftGraphChat
   patch(requestBody:MicrosoftGraphChat):"Success"
   delete():"Success"
}
export interface operation3740{
   get():MicrosoftGraphTeamsAppInstallationCollectionResponse
   post(requestBody:MicrosoftGraphTeamsAppInstallation):MicrosoftGraphTeamsAppInstallation
}
export interface operation3741{
   get():MicrosoftGraphTeamsAppInstallation
   patch(requestBody:MicrosoftGraphTeamsAppInstallation):"Success"
   delete():"Success"
}
export interface operation3742{
   post():"Success"
}
export interface operation3743{
   get():MicrosoftGraphTeamsApp
}
export interface operation3744{
   get():MicrosoftGraphTeamsAppDefinition
}
export interface operation3745{
   get():ODataCountResponse
}
export interface operation3746{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation3747{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation3748{
   get():ODataCountResponse
}
export interface operation3749{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation3750{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation3751{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation3752{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation3753{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation3754{
   get():ODataCountResponse
}
export interface operation3755{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation3756{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation3757{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation3758{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation3759{
   get():ODataCountResponse
}
export interface operation3760{
   get():ODataCountResponse
}
export interface operation3761{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation3762{
   get():ODataCountResponse
}
export interface operation3763{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation3764{
   post(requestBody:{topic?: MicrosoftGraphTeamworkActivityTopic,activityType?: string,chainId?: number,previewText?: MicrosoftGraphItemBody,templateParameters?: MicrosoftGraphKeyValuePair[],recipient?: MicrosoftGraphTeamworkNotificationRecipient,}):"Success"
}
export interface operation3765{
   get():MicrosoftGraphPinnedChatMessageInfoCollectionResponse
   post(requestBody:MicrosoftGraphPinnedChatMessageInfo):MicrosoftGraphPinnedChatMessageInfo
}
export interface operation3766{
   get():MicrosoftGraphPinnedChatMessageInfo
   patch(requestBody:MicrosoftGraphPinnedChatMessageInfo):"Success"
   delete():"Success"
}
export interface operation3767{
   get():MicrosoftGraphChatMessage
}
export interface operation3768{
   get():ODataCountResponse
}
export interface operation3769{
   get():MicrosoftGraphTeamsTabCollectionResponse
   post(requestBody:MicrosoftGraphTeamsTab):MicrosoftGraphTeamsTab
}
export interface operation3770{
   get():MicrosoftGraphTeamsTab
   patch(requestBody:MicrosoftGraphTeamsTab):"Success"
   delete():"Success"
}
export interface operation3771{
   get():MicrosoftGraphTeamsApp
}
export interface operation3772{
   get():ODataCountResponse
}
export interface operation3773{
   get():ODataCountResponse
}
export interface operation3774{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation3775{
   get():MicrosoftGraphContactFolderCollectionResponse
   post(requestBody:MicrosoftGraphContactFolder):MicrosoftGraphContactFolder
}
export interface operation3776{
   get():MicrosoftGraphContactFolder
   patch(requestBody:MicrosoftGraphContactFolder):"Success"
   delete():"Success"
}
export interface operation3777{
   get():MicrosoftGraphContactFolderCollectionResponse
   post(requestBody:MicrosoftGraphContactFolder):MicrosoftGraphContactFolder
}
export interface operation3778{
   get():MicrosoftGraphContactFolder
   patch(requestBody:MicrosoftGraphContactFolder):"Success"
   delete():"Success"
}
export interface operation3779{
   get():MicrosoftGraphContactCollectionResponse
   post(requestBody:MicrosoftGraphContact):MicrosoftGraphContact
}
export interface operation3780{
   get():MicrosoftGraphContact
   patch(requestBody:MicrosoftGraphContact):"Success"
   delete():"Success"
}
export interface operation3781{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3782{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3783{
   get():ODataCountResponse
}
export interface operation3784{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3785{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3786{
   get():ODataCountResponse
}
export interface operation3787{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation3788{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3789{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3790{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3791{
   get():ODataCountResponse
}
export interface operation3792{
   get():ODataCountResponse
}
export interface operation3793{
   get():{value?: MicrosoftGraphContact[],}
}
export interface operation3794{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3795{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3796{
   get():ODataCountResponse
}
export interface operation3797{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3798{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3799{
   get():ODataCountResponse
}
export interface operation3800{
   get():ODataCountResponse
}
export interface operation3801{
   get():{value?: MicrosoftGraphContactFolder[],}
}
export interface operation3802{
   get():MicrosoftGraphContactCollectionResponse
   post(requestBody:MicrosoftGraphContact):MicrosoftGraphContact
}
export interface operation3803{
   get():MicrosoftGraphContact
   patch(requestBody:MicrosoftGraphContact):"Success"
   delete():"Success"
}
export interface operation3804{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3805{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3806{
   get():ODataCountResponse
}
export interface operation3807{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3808{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3809{
   get():ODataCountResponse
}
export interface operation3810{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation3811{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3812{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3813{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3814{
   get():ODataCountResponse
}
export interface operation3815{
   get():ODataCountResponse
}
export interface operation3816{
   get():{value?: MicrosoftGraphContact[],}
}
export interface operation3817{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3818{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3819{
   get():ODataCountResponse
}
export interface operation3820{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3821{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3822{
   get():ODataCountResponse
}
export interface operation3823{
   get():ODataCountResponse
}
export interface operation3824{
   get():{value?: MicrosoftGraphContactFolder[],}
}
export interface operation3825{
   get():MicrosoftGraphContactCollectionResponse
   post(requestBody:MicrosoftGraphContact):MicrosoftGraphContact
}
export interface operation3826{
   get():MicrosoftGraphContact
   patch(requestBody:MicrosoftGraphContact):"Success"
   delete():"Success"
}
export interface operation3827{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation3828{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation3829{
   get():ODataCountResponse
}
export interface operation3830{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation3831{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3832{
   get():ODataCountResponse
}
export interface operation3833{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation3834{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3835{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation3836{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation3837{
   get():ODataCountResponse
}
export interface operation3838{
   get():ODataCountResponse
}
export interface operation3839{
   get():{value?: MicrosoftGraphContact[],}
}
export interface operation3840{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation3841{
   get():MicrosoftGraphDirectoryObject
}
export interface operation3842{
   get():MicrosoftGraphServicePrincipal
}
export interface operation3843{
   get():ODataCountResponse
}
export interface operation3844{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation3845{
   get():ODataCountResponse
}
export interface operation3846{
   get():MicrosoftGraphDeviceManagementTroubleshootingEventCollectionResponse
   post(requestBody:MicrosoftGraphDeviceManagementTroubleshootingEvent):MicrosoftGraphDeviceManagementTroubleshootingEvent
}
export interface operation3847{
   get():MicrosoftGraphDeviceManagementTroubleshootingEvent
   patch(requestBody:MicrosoftGraphDeviceManagementTroubleshootingEvent):"Success"
   delete():"Success"
}
export interface operation3848{
   get():ODataCountResponse
}
export interface operation3849{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation3850{
   get():MicrosoftGraphDirectoryObject
}
export interface operation3851{
   get():MicrosoftGraphOrgContact
}
export interface operation3852{
   get():MicrosoftGraphUser
}
export interface operation3853{
   get():ODataCountResponse
}
export interface operation3854{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation3855{
   get():ODataCountResponse
}
export interface operation3856{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation3857{
   get():ODataCountResponse
}
export interface operation3858{
   get():MicrosoftGraphDrive
}
export interface operation3859{
   get():MicrosoftGraphDriveCollectionResponse
   post(requestBody:MicrosoftGraphDrive):MicrosoftGraphDrive
}
export interface operation3860{
   get():MicrosoftGraphDrive
   patch(requestBody:MicrosoftGraphDrive):"Success"
   delete():"Success"
}
export interface operation3861{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation3862{
   get():MicrosoftGraphDriveItem
}
export interface operation3863{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3864{
   get():ODataCountResponse
}
export interface operation3865{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation3866{
   get():MicrosoftGraphDriveItem
}
export interface operation3867{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3868{
   get():ODataCountResponse
}
export interface operation3869{
   get():MicrosoftGraphDriveItemCollectionResponse
   post(requestBody:MicrosoftGraphDriveItem):MicrosoftGraphDriveItem
}
export interface operation3870{
   get():MicrosoftGraphDriveItem
   patch(requestBody:MicrosoftGraphDriveItem):"Success"
   delete():"Success"
}
export interface operation3871{
   get():MicrosoftGraphItemAnalytics
}
export interface operation3872{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation3873{
   get():MicrosoftGraphDriveItem
}
export interface operation3874{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3875{
   get():ODataCountResponse
}
export interface operation3876{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3877{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation3878{
   get():MicrosoftGraphItemAnalytics
}
export interface operation3879{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation3880{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation3881{
   post():"Success"
}
export interface operation3882{
   get():ODataCountResponse
}
export interface operation3883{
   get():MicrosoftGraphDriveItem
}
export interface operation3884{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3885{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation3886{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation3887{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation3888{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation3889{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation3890{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation3891{
   post():"Success"
}
export interface operation3892{
   get():ODataCountResponse
}
export interface operation3893{
   post(requestBody:{checkInAs?: string,comment?: string,}):"Success"
}
export interface operation3894{
   post():"Success"
}
export interface operation3895{
   post(requestBody:{name?: string,parentReference?: MicrosoftGraphItemReference,}):{}
}
export interface operation3896{
   post(requestBody:{type?: string,scope?: string,expirationDateTime?: string,password?: string,message?: string,retainInheritedPermissions?: boolean,}):{}
}
export interface operation3897{
   post(requestBody:{item?: MicrosoftGraphDriveItemUploadableProperties,}):{}
}
export interface operation3898{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation3899{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation3900{
   post():{}
}
export interface operation3901{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation3902{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation3903{
   post(requestBody:{requireSignIn?: boolean,roles?: string[],sendInvitation?: boolean,message?: string,recipients?: {alias?: string,email?: string,objectId?: string,"@odata.type"?: string,},retainInheritedPermissions?: boolean,expirationDateTime?: string,password?: string,}):{value?: MicrosoftGraphPermission[],}
}
export interface operation3904{
   post(requestBody:{page?: string,zoom?: number | string,}):{}
}
export interface operation3905{
   post(requestBody:{parentReference?: MicrosoftGraphItemReference,name?: string,}):{}
}
export interface operation3906{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation3907{
   post():"Success"
}
export interface operation3908{
   post(requestBody:{challengeToken?: string,password?: string,}):"Success"
}
export interface operation3909{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation3910{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation3911{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation3912{
   get():ODataCountResponse
}
export interface operation3913{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation3914{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation3915{
   post():"Success"
}
export interface operation3916{
   get():ODataCountResponse
}
export interface operation3917{
   get():MicrosoftGraphThumbnailSetCollectionResponse
   post(requestBody:MicrosoftGraphThumbnailSet):MicrosoftGraphThumbnailSet
}
export interface operation3918{
   get():MicrosoftGraphThumbnailSet
   patch(requestBody:MicrosoftGraphThumbnailSet):"Success"
   delete():"Success"
}
export interface operation3919{
   get():ODataCountResponse
}
export interface operation3920{
   get():MicrosoftGraphDriveItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphDriveItemVersion):MicrosoftGraphDriveItemVersion
}
export interface operation3921{
   get():MicrosoftGraphDriveItemVersion
   patch(requestBody:MicrosoftGraphDriveItemVersion):"Success"
   delete():"Success"
}
export interface operation3922{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3923{
   post():"Success"
}
export interface operation3924{
   get():ODataCountResponse
}
export interface operation3925{
   get():ODataCountResponse
}
export interface operation3926{
   get():MicrosoftGraphList
   patch(requestBody:MicrosoftGraphList):"Success"
   delete():"Success"
}
export interface operation3927{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation3928{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation3929{
   get():MicrosoftGraphColumnDefinition
}
export interface operation3930{
   get():ODataCountResponse
}
export interface operation3931{
   get():MicrosoftGraphContentTypeCollectionResponse
   post(requestBody:MicrosoftGraphContentType):MicrosoftGraphContentType
}
export interface operation3932{
   get():MicrosoftGraphContentType
   patch(requestBody:MicrosoftGraphContentType):"Success"
   delete():"Success"
}
export interface operation3933{
   get():MicrosoftGraphContentType
}
export interface operation3934{
   get():MicrosoftGraphContentTypeCollectionResponse
}
export interface operation3935{
   get():MicrosoftGraphContentType
}
export interface operation3936{
   get():ODataCountResponse
}
export interface operation3937{
   get():MicrosoftGraphColumnLinkCollectionResponse
   post(requestBody:MicrosoftGraphColumnLink):MicrosoftGraphColumnLink
}
export interface operation3938{
   get():MicrosoftGraphColumnLink
   patch(requestBody:MicrosoftGraphColumnLink):"Success"
   delete():"Success"
}
export interface operation3939{
   get():ODataCountResponse
}
export interface operation3940{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
}
export interface operation3941{
   get():MicrosoftGraphColumnDefinition
}
export interface operation3942{
   get():ODataCountResponse
}
export interface operation3943{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation3944{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation3945{
   get():MicrosoftGraphColumnDefinition
}
export interface operation3946{
   get():ODataCountResponse
}
export interface operation3947{
   post(requestBody:{hubSiteUrls?: string[],propagateToExistingLists?: boolean,}):"Success"
}
export interface operation3948{
   post(requestBody:{sourceFile?: {driveId?: string,driveType?: string,id?: string,name?: string,path?: string,shareId?: string,sharepointIds?: MicrosoftGraphSharepointIds,siteId?: string,"@odata.type"?: string,},destinationFileName?: string,}):"Success"
}
export interface operation3949{
   get():{value?: boolean,}
}
export interface operation3950{
   post():"Success"
}
export interface operation3951{
   post():"Success"
}
export interface operation3952{
   get():ODataCountResponse
}
export interface operation3953{
   post(requestBody:{contentType?: string,}):{}
}
export interface operation3954{
   post(requestBody:{contentTypeId?: string,}):{}
}
export interface operation3955{
   get():{value?: MicrosoftGraphContentType[],}
}
export interface operation3956{
   get():MicrosoftGraphDrive
}
export interface operation3957{
   get():MicrosoftGraphListItemCollectionResponse
   post(requestBody:MicrosoftGraphListItem):MicrosoftGraphListItem
}
export interface operation3958{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation3959{
   get():MicrosoftGraphItemAnalytics
}
export interface operation3960{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation3961{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation3962{
   post():"Success"
}
export interface operation3963{
   get():ODataCountResponse
}
export interface operation3964{
   get():MicrosoftGraphDriveItem
}
export interface operation3965{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3966{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation3967{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation3968{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation3969{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation3970{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation3971{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation3972{
   post():"Success"
}
export interface operation3973{
   get():ODataCountResponse
}
export interface operation3974{
   get():ODataCountResponse
}
export interface operation3975{
   get():MicrosoftGraphRichLongRunningOperationCollectionResponse
   post(requestBody:MicrosoftGraphRichLongRunningOperation):MicrosoftGraphRichLongRunningOperation
}
export interface operation3976{
   get():MicrosoftGraphRichLongRunningOperation
   patch(requestBody:MicrosoftGraphRichLongRunningOperation):"Success"
   delete():"Success"
}
export interface operation3977{
   get():ODataCountResponse
}
export interface operation3978{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation3979{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation3980{
   post():"Success"
}
export interface operation3981{
   get():ODataCountResponse
}
export interface operation3982{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation3983{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation3984{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation3985{
   get():MicrosoftGraphDriveItem
   patch(requestBody:MicrosoftGraphDriveItem):"Success"
   delete():"Success"
}
export interface operation3986{
   get():MicrosoftGraphItemAnalytics
}
export interface operation3987{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation3988{
   get():MicrosoftGraphDriveItem
}
export interface operation3989{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3990{
   get():ODataCountResponse
}
export interface operation3991{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation3992{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation3993{
   get():MicrosoftGraphItemAnalytics
}
export interface operation3994{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation3995{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation3996{
   post():"Success"
}
export interface operation3997{
   get():ODataCountResponse
}
export interface operation3998{
   get():MicrosoftGraphDriveItem
}
export interface operation3999{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4000{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation4001{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation4002{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation4003{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation4004{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation4005{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation4006{
   post():"Success"
}
export interface operation4007{
   get():ODataCountResponse
}
export interface operation4008{
   post(requestBody:{checkInAs?: string,comment?: string,}):"Success"
}
export interface operation4009{
   post():"Success"
}
export interface operation4010{
   post(requestBody:{name?: string,parentReference?: MicrosoftGraphItemReference,}):{}
}
export interface operation4011{
   post(requestBody:{type?: string,scope?: string,expirationDateTime?: string,password?: string,message?: string,retainInheritedPermissions?: boolean,}):{}
}
export interface operation4012{
   post(requestBody:{item?: MicrosoftGraphDriveItemUploadableProperties,}):{}
}
export interface operation4013{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation4014{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation4015{
   post():{}
}
export interface operation4016{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation4017{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation4018{
   post(requestBody:{requireSignIn?: boolean,roles?: string[],sendInvitation?: boolean,message?: string,recipients?: {alias?: string,email?: string,objectId?: string,"@odata.type"?: string,},retainInheritedPermissions?: boolean,expirationDateTime?: string,password?: string,}):{value?: MicrosoftGraphPermission[],}
}
export interface operation4019{
   post(requestBody:{page?: string,zoom?: number | string,}):{}
}
export interface operation4020{
   post(requestBody:{parentReference?: MicrosoftGraphItemReference,name?: string,}):{}
}
export interface operation4021{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation4022{
   post():"Success"
}
export interface operation4023{
   post(requestBody:{challengeToken?: string,password?: string,}):"Success"
}
export interface operation4024{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation4025{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation4026{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation4027{
   get():ODataCountResponse
}
export interface operation4028{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation4029{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation4030{
   post():"Success"
}
export interface operation4031{
   get():ODataCountResponse
}
export interface operation4032{
   get():MicrosoftGraphThumbnailSetCollectionResponse
   post(requestBody:MicrosoftGraphThumbnailSet):MicrosoftGraphThumbnailSet
}
export interface operation4033{
   get():MicrosoftGraphThumbnailSet
   patch(requestBody:MicrosoftGraphThumbnailSet):"Success"
   delete():"Success"
}
export interface operation4034{
   get():ODataCountResponse
}
export interface operation4035{
   get():MicrosoftGraphDriveItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphDriveItemVersion):MicrosoftGraphDriveItemVersion
}
export interface operation4036{
   get():MicrosoftGraphDriveItemVersion
   patch(requestBody:MicrosoftGraphDriveItemVersion):"Success"
   delete():"Success"
}
export interface operation4037{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4038{
   post():"Success"
}
export interface operation4039{
   get():ODataCountResponse
}
export interface operation4040{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation4041{
   get():MicrosoftGraphDriveItem
}
export interface operation4042{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4043{
   get():ODataCountResponse
}
export interface operation4044{
   get():ODataCountResponse
}
export interface operation4045{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation4046{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation4047{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation4048{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation4049{
   get():ODataCountResponse
}
export interface operation4050{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation4051{
   get():MicrosoftGraphCalendar
}
export interface operation4052{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation4053{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation4054{
   get():ODataCountResponse
}
export interface operation4055{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation4056{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation4057{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation4058{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation4059{
   get():ODataCountResponse
}
export interface operation4060{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation4061{
   get():MicrosoftGraphCalendar
}
export interface operation4062{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation4063{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation4064{
   get():ODataCountResponse
}
export interface operation4065{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation4066{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation4067{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation4068{
   post():"Success"
}
export interface operation4069{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation4070{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation4071{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation4072{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation4073{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4074{
   get():ODataCountResponse
}
export interface operation4075{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation4076{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4077{
   get():ODataCountResponse
}
export interface operation4078{
   get():ODataCountResponse
}
export interface operation4079{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation4080{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation4081{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation4082{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation4083{
   post():"Success"
}
export interface operation4084{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation4085{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation4086{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation4087{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation4088{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4089{
   get():ODataCountResponse
}
export interface operation4090{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation4091{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4092{
   get():ODataCountResponse
}
export interface operation4093{
   get():ODataCountResponse
}
export interface operation4094{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation4095{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation4096{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation4097{
   get():ODataCountResponse
}
export interface operation4098{
   get():MicrosoftGraphSiteCollectionResponse
}
export interface operation4099{
   get():MicrosoftGraphSite
}
export interface operation4100{
   get():ODataCountResponse
}
export interface operation4101{
   get():MicrosoftGraphInferenceClassification
   patch(requestBody:MicrosoftGraphInferenceClassification):"Success"
   delete():"Success"
}
export interface operation4102{
   get():MicrosoftGraphInferenceClassificationOverrideCollectionResponse
   post(requestBody:MicrosoftGraphInferenceClassificationOverride):MicrosoftGraphInferenceClassificationOverride
}
export interface operation4103{
   get():MicrosoftGraphInferenceClassificationOverride
   patch(requestBody:MicrosoftGraphInferenceClassificationOverride):"Success"
   delete():"Success"
}
export interface operation4104{
   get():ODataCountResponse
}
export interface operation4105{
   get():MicrosoftGraphOfficeGraphInsights
   patch(requestBody:MicrosoftGraphOfficeGraphInsights):"Success"
   delete():"Success"
}
export interface operation4106{
   get():MicrosoftGraphSharedInsightCollectionResponse
   post(requestBody:MicrosoftGraphSharedInsight):MicrosoftGraphSharedInsight
}
export interface operation4107{
   get():MicrosoftGraphSharedInsight
   patch(requestBody:MicrosoftGraphSharedInsight):"Success"
   delete():"Success"
}
export interface operation4108{
   get():MicrosoftGraphEntity
}
export interface operation4109{
   get():MicrosoftGraphEntity
}
export interface operation4110{
   get():ODataCountResponse
}
export interface operation4111{
   get():MicrosoftGraphTrendingCollectionResponse
   post(requestBody:MicrosoftGraphTrending):MicrosoftGraphTrending
}
export interface operation4112{
   get():MicrosoftGraphTrending
   patch(requestBody:MicrosoftGraphTrending):"Success"
   delete():"Success"
}
export interface operation4113{
   get():MicrosoftGraphEntity
}
export interface operation4114{
   get():ODataCountResponse
}
export interface operation4115{
   get():MicrosoftGraphUsedInsightCollectionResponse
   post(requestBody:MicrosoftGraphUsedInsight):MicrosoftGraphUsedInsight
}
export interface operation4116{
   get():MicrosoftGraphUsedInsight
   patch(requestBody:MicrosoftGraphUsedInsight):"Success"
   delete():"Success"
}
export interface operation4117{
   get():MicrosoftGraphEntity
}
export interface operation4118{
   get():ODataCountResponse
}
export interface operation4119{
   get():MicrosoftGraphTeamCollectionResponse
   post(requestBody:MicrosoftGraphTeam):MicrosoftGraphTeam
}
export interface operation4120{
   get():MicrosoftGraphTeam
   patch(requestBody:MicrosoftGraphTeam):"Success"
   delete():"Success"
}
export interface operation4121{
   get():MicrosoftGraphChannelCollectionResponse
}
export interface operation4122{
   get():MicrosoftGraphChannel
}
export interface operation4123{
   get():ODataCountResponse
}
export interface operation4124{
   get():MicrosoftGraphChannelCollectionResponse
   post(requestBody:MicrosoftGraphChannel):MicrosoftGraphChannel
}
export interface operation4125{
   get():MicrosoftGraphChannel
   patch(requestBody:MicrosoftGraphChannel):"Success"
   delete():"Success"
}
export interface operation4126{
   get():MicrosoftGraphDriveItem
}
export interface operation4127{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4128{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation4129{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation4130{
   get():ODataCountResponse
}
export interface operation4131{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation4132{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation4133{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation4134{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation4135{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation4136{
   get():ODataCountResponse
}
export interface operation4137{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation4138{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation4139{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation4140{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation4141{
   get():ODataCountResponse
}
export interface operation4142{
   get():ODataCountResponse
}
export interface operation4143{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation4144{
   get():ODataCountResponse
}
export interface operation4145{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation4146{
   post():"Success"
}
export interface operation4147{
   get():{value?: boolean,}
}
export interface operation4148{
   post():{}
}
export interface operation4149{
   post():"Success"
}
export interface operation4150{
   get():MicrosoftGraphSharedWithChannelTeamInfoCollectionResponse
   post(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):MicrosoftGraphSharedWithChannelTeamInfo
}
export interface operation4151{
   get():MicrosoftGraphSharedWithChannelTeamInfo
   patch(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):"Success"
   delete():"Success"
}
export interface operation4152{
   get():MicrosoftGraphConversationMemberCollectionResponse
}
export interface operation4153{
   get():MicrosoftGraphConversationMember
}
export interface operation4154{
   get():ODataCountResponse
}
export interface operation4155{
   get():ODataCountResponse
}
export interface operation4156{
   get():MicrosoftGraphTeamsTabCollectionResponse
   post(requestBody:MicrosoftGraphTeamsTab):MicrosoftGraphTeamsTab
}
export interface operation4157{
   get():MicrosoftGraphTeamsTab
   patch(requestBody:MicrosoftGraphTeamsTab):"Success"
   delete():"Success"
}
export interface operation4158{
   get():MicrosoftGraphTeamsApp
}
export interface operation4159{
   get():ODataCountResponse
}
export interface operation4160{
   get():ODataCountResponse
}
export interface operation4161{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation4162{
   get():MicrosoftGraphGroup
}
export interface operation4163{
   get():MicrosoftGraphChannelCollectionResponse
}
export interface operation4164{
   get():MicrosoftGraphChannel
}
export interface operation4165{
   get():ODataCountResponse
}
export interface operation4166{
   get():MicrosoftGraphTeamsAppInstallationCollectionResponse
   post(requestBody:MicrosoftGraphTeamsAppInstallation):MicrosoftGraphTeamsAppInstallation
}
export interface operation4167{
   get():MicrosoftGraphTeamsAppInstallation
   patch(requestBody:MicrosoftGraphTeamsAppInstallation):"Success"
   delete():"Success"
}
export interface operation4168{
   post():"Success"
}
export interface operation4169{
   get():MicrosoftGraphTeamsApp
}
export interface operation4170{
   get():MicrosoftGraphTeamsAppDefinition
}
export interface operation4171{
   get():ODataCountResponse
}
export interface operation4172{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation4173{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation4174{
   get():ODataCountResponse
}
export interface operation4175{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation4176{
   post(requestBody:{shouldSetSpoSiteReadOnlyForMembers?: boolean,}):"Success"
}
export interface operation4177{
   post(requestBody:{displayName?: string,description?: string,mailNickname?: string,classification?: string,visibility?: string,partsToClone?: string,}):"Success"
}
export interface operation4178{
   post():"Success"
}
export interface operation4179{
   post(requestBody:{topic?: MicrosoftGraphTeamworkActivityTopic,activityType?: string,chainId?: number,previewText?: MicrosoftGraphItemBody,templateParameters?: MicrosoftGraphKeyValuePair[],recipient?: MicrosoftGraphTeamworkNotificationRecipient,}):"Success"
}
export interface operation4180{
   post():"Success"
}
export interface operation4181{
   get():MicrosoftGraphTeamsAsyncOperationCollectionResponse
   post(requestBody:MicrosoftGraphTeamsAsyncOperation):MicrosoftGraphTeamsAsyncOperation
}
export interface operation4182{
   get():MicrosoftGraphTeamsAsyncOperation
   patch(requestBody:MicrosoftGraphTeamsAsyncOperation):"Success"
   delete():"Success"
}
export interface operation4183{
   get():ODataCountResponse
}
export interface operation4184{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation4185{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4186{
   get():MicrosoftGraphChannel
   patch(requestBody:MicrosoftGraphChannel):"Success"
   delete():"Success"
}
export interface operation4187{
   get():MicrosoftGraphDriveItem
}
export interface operation4188{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4189{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation4190{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation4191{
   get():ODataCountResponse
}
export interface operation4192{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation4193{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation4194{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation4195{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation4196{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation4197{
   get():ODataCountResponse
}
export interface operation4198{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation4199{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation4200{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation4201{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation4202{
   get():ODataCountResponse
}
export interface operation4203{
   get():ODataCountResponse
}
export interface operation4204{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation4205{
   get():ODataCountResponse
}
export interface operation4206{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation4207{
   post():"Success"
}
export interface operation4208{
   get():{value?: boolean,}
}
export interface operation4209{
   post():{}
}
export interface operation4210{
   post():"Success"
}
export interface operation4211{
   get():MicrosoftGraphSharedWithChannelTeamInfoCollectionResponse
   post(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):MicrosoftGraphSharedWithChannelTeamInfo
}
export interface operation4212{
   get():MicrosoftGraphSharedWithChannelTeamInfo
   patch(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):"Success"
   delete():"Success"
}
export interface operation4213{
   get():MicrosoftGraphConversationMemberCollectionResponse
}
export interface operation4214{
   get():MicrosoftGraphConversationMember
}
export interface operation4215{
   get():ODataCountResponse
}
export interface operation4216{
   get():ODataCountResponse
}
export interface operation4217{
   get():MicrosoftGraphTeamsTabCollectionResponse
   post(requestBody:MicrosoftGraphTeamsTab):MicrosoftGraphTeamsTab
}
export interface operation4218{
   get():MicrosoftGraphTeamsTab
   patch(requestBody:MicrosoftGraphTeamsTab):"Success"
   delete():"Success"
}
export interface operation4219{
   get():MicrosoftGraphTeamsApp
}
export interface operation4220{
   get():ODataCountResponse
}
export interface operation4221{
   get():MicrosoftGraphSchedule
   patch(requestBody:MicrosoftGraphSchedule):"Success"
   delete():"Success"
}
export interface operation4222{
   post(requestBody:{notifyTeam?: boolean,startDateTime?: string,endDateTime?: string,}):"Success"
}
export interface operation4223{
   get():MicrosoftGraphOfferShiftRequestCollectionResponse
   post(requestBody:MicrosoftGraphOfferShiftRequest):MicrosoftGraphOfferShiftRequest
}
export interface operation4224{
   get():MicrosoftGraphOfferShiftRequest
   patch(requestBody:MicrosoftGraphOfferShiftRequest):"Success"
   delete():"Success"
}
export interface operation4225{
   get():ODataCountResponse
}
export interface operation4226{
   get():MicrosoftGraphOpenShiftChangeRequestCollectionResponse
   post(requestBody:MicrosoftGraphOpenShiftChangeRequest):MicrosoftGraphOpenShiftChangeRequest
}
export interface operation4227{
   get():MicrosoftGraphOpenShiftChangeRequest
   patch(requestBody:MicrosoftGraphOpenShiftChangeRequest):"Success"
   delete():"Success"
}
export interface operation4228{
   get():ODataCountResponse
}
export interface operation4229{
   get():MicrosoftGraphOpenShiftCollectionResponse
   post(requestBody:MicrosoftGraphOpenShift):MicrosoftGraphOpenShift
}
export interface operation4230{
   get():MicrosoftGraphOpenShift
   patch(requestBody:MicrosoftGraphOpenShift):"Success"
   delete():"Success"
}
export interface operation4231{
   get():ODataCountResponse
}
export interface operation4232{
   get():MicrosoftGraphSchedulingGroupCollectionResponse
   post(requestBody:MicrosoftGraphSchedulingGroup):MicrosoftGraphSchedulingGroup
}
export interface operation4233{
   get():MicrosoftGraphSchedulingGroup
   patch(requestBody:MicrosoftGraphSchedulingGroup):"Success"
   delete():"Success"
}
export interface operation4234{
   get():ODataCountResponse
}
export interface operation4235{
   get():MicrosoftGraphShiftCollectionResponse
   post(requestBody:MicrosoftGraphShift):MicrosoftGraphShift
}
export interface operation4236{
   get():MicrosoftGraphShift
   patch(requestBody:MicrosoftGraphShift):"Success"
   delete():"Success"
}
export interface operation4237{
   get():ODataCountResponse
}
export interface operation4238{
   get():MicrosoftGraphSwapShiftsChangeRequestCollectionResponse
   post(requestBody:MicrosoftGraphSwapShiftsChangeRequest):MicrosoftGraphSwapShiftsChangeRequest
}
export interface operation4239{
   get():MicrosoftGraphSwapShiftsChangeRequest
   patch(requestBody:MicrosoftGraphSwapShiftsChangeRequest):"Success"
   delete():"Success"
}
export interface operation4240{
   get():ODataCountResponse
}
export interface operation4241{
   get():MicrosoftGraphTimeOffReasonCollectionResponse
   post(requestBody:MicrosoftGraphTimeOffReason):MicrosoftGraphTimeOffReason
}
export interface operation4242{
   get():MicrosoftGraphTimeOffReason
   patch(requestBody:MicrosoftGraphTimeOffReason):"Success"
   delete():"Success"
}
export interface operation4243{
   get():ODataCountResponse
}
export interface operation4244{
   get():MicrosoftGraphTimeOffRequestCollectionResponse
   post(requestBody:MicrosoftGraphTimeOffRequest):MicrosoftGraphTimeOffRequest
}
export interface operation4245{
   get():MicrosoftGraphTimeOffRequest
   patch(requestBody:MicrosoftGraphTimeOffRequest):"Success"
   delete():"Success"
}
export interface operation4246{
   get():ODataCountResponse
}
export interface operation4247{
   get():MicrosoftGraphTimeOffCollectionResponse
   post(requestBody:MicrosoftGraphTimeOff):MicrosoftGraphTimeOff
}
export interface operation4248{
   get():MicrosoftGraphTimeOff
   patch(requestBody:MicrosoftGraphTimeOff):"Success"
   delete():"Success"
}
export interface operation4249{
   get():ODataCountResponse
}
export interface operation4250{
   get():MicrosoftGraphTeamsTemplate
}
export interface operation4251{
   get():ODataCountResponse
}
export interface operation4252{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation4253{
   get():MicrosoftGraphLicenseDetailsCollectionResponse
   post(requestBody:MicrosoftGraphLicenseDetails):MicrosoftGraphLicenseDetails
}
export interface operation4254{
   get():MicrosoftGraphLicenseDetails
   patch(requestBody:MicrosoftGraphLicenseDetails):"Success"
   delete():"Success"
}
export interface operation4255{
   get():ODataCountResponse
}
export interface operation4256{
   get():MicrosoftGraphMailFolderCollectionResponse
   post(requestBody:MicrosoftGraphMailFolder):MicrosoftGraphMailFolder
}
export interface operation4257{
   get():MicrosoftGraphMailFolder
   patch(requestBody:MicrosoftGraphMailFolder):"Success"
   delete():"Success"
}
export interface operation4258{
   get():MicrosoftGraphMailFolderCollectionResponse
   post(requestBody:MicrosoftGraphMailFolder):MicrosoftGraphMailFolder
}
export interface operation4259{
   get():MicrosoftGraphMailFolder
   patch(requestBody:MicrosoftGraphMailFolder):"Success"
   delete():"Success"
}
export interface operation4260{
   get():MicrosoftGraphMessageRuleCollectionResponse
   post(requestBody:MicrosoftGraphMessageRule):MicrosoftGraphMessageRule
}
export interface operation4261{
   get():MicrosoftGraphMessageRule
   patch(requestBody:MicrosoftGraphMessageRule):"Success"
   delete():"Success"
}
export interface operation4262{
   get():ODataCountResponse
}
export interface operation4263{
   get():MicrosoftGraphMessageCollectionResponse
   post(requestBody:MicrosoftGraphMessage):MicrosoftGraphMessage
}
export interface operation4264{
   get():MicrosoftGraphMessage
   patch(requestBody:MicrosoftGraphMessage):"Success"
   delete():"Success"
}
export interface operation4265{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4266{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation4267{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation4268{
   get():ODataCountResponse
}
export interface operation4269{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation4270{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation4271{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation4272{
   get():ODataCountResponse
}
export interface operation4273{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation4274{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation4275{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation4276{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation4277{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation4278{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation4279{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation4280{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation4281{
   post():"Success"
}
export interface operation4282{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation4283{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4284{
   get():ODataCountResponse
}
export interface operation4285{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation4286{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4287{
   get():ODataCountResponse
}
export interface operation4288{
   get():ODataCountResponse
}
export interface operation4289{
   get():{value?: MicrosoftGraphMessage[],}
}
export interface operation4290{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation4291{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation4292{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation4293{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4294{
   get():ODataCountResponse
}
export interface operation4295{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation4296{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4297{
   get():ODataCountResponse
}
export interface operation4298{
   get():ODataCountResponse
}
export interface operation4299{
   get():{value?: MicrosoftGraphMailFolder[],}
}
export interface operation4300{
   get():MicrosoftGraphMessageRuleCollectionResponse
   post(requestBody:MicrosoftGraphMessageRule):MicrosoftGraphMessageRule
}
export interface operation4301{
   get():MicrosoftGraphMessageRule
   patch(requestBody:MicrosoftGraphMessageRule):"Success"
   delete():"Success"
}
export interface operation4302{
   get():ODataCountResponse
}
export interface operation4303{
   get():MicrosoftGraphMessageCollectionResponse
   post(requestBody:MicrosoftGraphMessage):MicrosoftGraphMessage
}
export interface operation4304{
   get():MicrosoftGraphMessage
   patch(requestBody:MicrosoftGraphMessage):"Success"
   delete():"Success"
}
export interface operation4305{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4306{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation4307{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation4308{
   get():ODataCountResponse
}
export interface operation4309{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation4310{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation4311{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation4312{
   get():ODataCountResponse
}
export interface operation4313{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation4314{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation4315{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation4316{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation4317{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation4318{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation4319{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation4320{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation4321{
   post():"Success"
}
export interface operation4322{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation4323{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4324{
   get():ODataCountResponse
}
export interface operation4325{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation4326{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4327{
   get():ODataCountResponse
}
export interface operation4328{
   get():ODataCountResponse
}
export interface operation4329{
   get():{value?: MicrosoftGraphMessage[],}
}
export interface operation4330{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation4331{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation4332{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation4333{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4334{
   get():ODataCountResponse
}
export interface operation4335{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation4336{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4337{
   get():ODataCountResponse
}
export interface operation4338{
   get():ODataCountResponse
}
export interface operation4339{
   get():{value?: MicrosoftGraphMailFolder[],}
}
export interface operation4340{
   get():MicrosoftGraphManagedAppRegistrationCollectionResponse
}
export interface operation4341{
   get():MicrosoftGraphManagedAppRegistration
}
export interface operation4342{
   get():ODataCountResponse
}
export interface operation4343{
   get():MicrosoftGraphManagedDeviceCollectionResponse
   post(requestBody:MicrosoftGraphManagedDevice):MicrosoftGraphManagedDevice
}
export interface operation4344{
   get():MicrosoftGraphManagedDevice
   patch(requestBody:MicrosoftGraphManagedDevice):"Success"
   delete():"Success"
}
export interface operation4345{
   get():MicrosoftGraphDeviceCategory
   patch(requestBody:MicrosoftGraphDeviceCategory):"Success"
   delete():"Success"
}
export interface operation4346{
   get():MicrosoftGraphDeviceCompliancePolicyStateCollectionResponse
   post(requestBody:MicrosoftGraphDeviceCompliancePolicyState):MicrosoftGraphDeviceCompliancePolicyState
}
export interface operation4347{
   get():MicrosoftGraphDeviceCompliancePolicyState
   patch(requestBody:MicrosoftGraphDeviceCompliancePolicyState):"Success"
   delete():"Success"
}
export interface operation4348{
   get():ODataCountResponse
}
export interface operation4349{
   get():MicrosoftGraphDeviceConfigurationStateCollectionResponse
   post(requestBody:MicrosoftGraphDeviceConfigurationState):MicrosoftGraphDeviceConfigurationState
}
export interface operation4350{
   get():MicrosoftGraphDeviceConfigurationState
   patch(requestBody:MicrosoftGraphDeviceConfigurationState):"Success"
   delete():"Success"
}
export interface operation4351{
   get():ODataCountResponse
}
export interface operation4352{
   post():"Success"
}
export interface operation4353{
   post(requestBody:{keepUserData?: boolean,}):"Success"
}
export interface operation4354{
   post(requestBody:{userPrincipalName?: string,}):"Success"
}
export interface operation4355{
   post():"Success"
}
export interface operation4356{
   post():"Success"
}
export interface operation4357{
   post():"Success"
}
export interface operation4358{
   post():"Success"
}
export interface operation4359{
   post():"Success"
}
export interface operation4360{
   post():"Success"
}
export interface operation4361{
   post():"Success"
}
export interface operation4362{
   post():"Success"
}
export interface operation4363{
   post():"Success"
}
export interface operation4364{
   post():"Success"
}
export interface operation4365{
   post():"Success"
}
export interface operation4366{
   post(requestBody:{updateWindowsDeviceAccountActionParameter?: MicrosoftGraphUpdateWindowsDeviceAccountActionParameter,}):"Success"
}
export interface operation4367{
   post(requestBody:{quickScan?: boolean,}):"Success"
}
export interface operation4368{
   post():"Success"
}
export interface operation4369{
   post(requestBody:{keepEnrollmentData?: boolean,keepUserData?: boolean,macOsUnlockCode?: string,persistEsimDataPlan?: boolean,}):"Success"
}
export interface operation4370{
   get():ODataCountResponse
}
export interface operation4371{
   get():MicrosoftGraphDirectoryObject
}
export interface operation4372{
   get():{}
   put(requestBody:ReferenceUpdate):"Success"
   delete():"Success"
}
export interface operation4373{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation4374{
   get():MicrosoftGraphDirectoryObject
}
export interface operation4375{
   get():MicrosoftGraphApplication
}
export interface operation4376{
   get():MicrosoftGraphDevice
}
export interface operation4377{
   get():MicrosoftGraphGroup
}
export interface operation4378{
   get():MicrosoftGraphOrgContact
}
export interface operation4379{
   get():MicrosoftGraphServicePrincipal
}
export interface operation4380{
   get():MicrosoftGraphUser
}
export interface operation4381{
   get():ODataCountResponse
}
export interface operation4382{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation4383{
   get():ODataCountResponse
}
export interface operation4384{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation4385{
   get():ODataCountResponse
}
export interface operation4386{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation4387{
   get():ODataCountResponse
}
export interface operation4388{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation4389{
   get():ODataCountResponse
}
export interface operation4390{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation4391{
   get():ODataCountResponse
}
export interface operation4392{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation4393{
   get():ODataCountResponse
}
export interface operation4394{
   get():MicrosoftGraphMessageCollectionResponse
   post(requestBody:MicrosoftGraphMessage):MicrosoftGraphMessage
}
export interface operation4395{
   get():MicrosoftGraphMessage
   patch(requestBody:MicrosoftGraphMessage):"Success"
   delete():"Success"
}
export interface operation4396{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4397{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation4398{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation4399{
   get():ODataCountResponse
}
export interface operation4400{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation4401{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation4402{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation4403{
   get():ODataCountResponse
}
export interface operation4404{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation4405{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation4406{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation4407{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation4408{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation4409{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation4410{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation4411{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation4412{
   post():"Success"
}
export interface operation4413{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation4414{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4415{
   get():ODataCountResponse
}
export interface operation4416{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation4417{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation4418{
   get():ODataCountResponse
}
export interface operation4419{
   get():ODataCountResponse
}
export interface operation4420{
   get():{value?: MicrosoftGraphMessage[],}
}
export interface operation4421{
   post(requestBody:{addLicenses?: {disabledPlans?: string[],skuId?: string,"@odata.type"?: string,},removeLicenses?: string[],}):{}
}
export interface operation4422{
   post(requestBody:{currentPassword?: string,newPassword?: string,}):"Success"
}
export interface operation4423{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation4424{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation4425{
   post(requestBody:{storageLocation?: string,}):"Success"
}
export interface operation4426{
   post(requestBody:{attendees?: MicrosoftGraphAttendeeBase[],locationConstraint?: MicrosoftGraphLocationConstraint,timeConstraint?: MicrosoftGraphTimeConstraint,meetingDuration?: string,maxCandidates?: number,isOrganizerOptional?: boolean,returnSuggestionReasons?: boolean,minimumAttendeePercentage?: number | string,}):{}
}
export interface operation4427{
   post(requestBody:{EmailAddresses?: string[],MailTipsOptions?: MicrosoftGraphMailTipsType,}):{value?: {automaticReplies?: MicrosoftGraphAutomaticRepliesMailTips,customMailTip?: string,deliveryRestricted?: boolean,emailAddress?: MicrosoftGraphEmailAddress,error?: MicrosoftGraphMailTipsError,externalMemberCount?: number,isModerated?: boolean,mailboxFull?: boolean,maxMessageSize?: number,recipientScope?: MicrosoftGraphRecipientScopeType,recipientSuggestions?: MicrosoftGraphRecipient[],totalMemberCount?: number,"@odata.type"?: string,},}
}
export interface operation4428{
   get():{value?: MicrosoftGraphManagedAppDiagnosticStatus[],}
}
export interface operation4429{
   get():{value?: MicrosoftGraphManagedAppPolicy[],}
}
export interface operation4430{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation4431{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation4432{
   get():{value?: {changeKey?: string,eventEndTime?: MicrosoftGraphDateTimeTimeZone,eventId?: string,eventLocation?: MicrosoftGraphLocation,eventStartTime?: MicrosoftGraphDateTimeTimeZone,eventSubject?: string,eventWebLink?: string,reminderFireTime?: MicrosoftGraphDateTimeTimeZone,"@odata.type"?: string,},}
}
export interface operation4433{
   post():"Success"
}
export interface operation4434{
   post():{}
}
export interface operation4435{
   post():{}
}
export interface operation4436{
   post():{value?: boolean,}
}
export interface operation4437{
   post(requestBody:{Message?: MicrosoftGraphMessage,SaveToSentItems?: boolean,}):"Success"
}
export interface operation4438{
   post(requestBody:{InputIds?: string[],TargetIdType?: string,SourceIdType?: string,}):{value?: {errorDetails?: MicrosoftGraphGenericError,sourceId?: string,targetId?: string,"@odata.type"?: string,},}
}
export interface operation4439{
   post(requestBody:{deviceTag?: string,}):"Success"
}
export interface operation4440{
   get():MicrosoftGraphOAuth2PermissionGrantCollectionResponse
}
export interface operation4441{
   get():MicrosoftGraphOAuth2PermissionGrant
}
export interface operation4442{
   get():ODataCountResponse
}
export interface operation4443{
   get():MicrosoftGraphOnenote
   patch(requestBody:MicrosoftGraphOnenote):"Success"
   delete():"Success"
}
export interface operation4444{
   get():MicrosoftGraphNotebookCollectionResponse
   post(requestBody:MicrosoftGraphNotebook):MicrosoftGraphNotebook
}
export interface operation4445{
   get():MicrosoftGraphNotebook
   patch(requestBody:MicrosoftGraphNotebook):"Success"
   delete():"Success"
}
export interface operation4446{
   post(requestBody:{groupId?: string,renameAs?: string,notebookFolder?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4447{
   get():MicrosoftGraphSectionGroupCollectionResponse
   post(requestBody:MicrosoftGraphSectionGroup):MicrosoftGraphSectionGroup
}
export interface operation4448{
   get():MicrosoftGraphSectionGroup
   patch(requestBody:MicrosoftGraphSectionGroup):"Success"
   delete():"Success"
}
export interface operation4449{
   get():MicrosoftGraphNotebook
}
export interface operation4450{
   get():MicrosoftGraphSectionGroup
}
export interface operation4451{
   get():MicrosoftGraphSectionGroupCollectionResponse
}
export interface operation4452{
   get():MicrosoftGraphSectionGroup
}
export interface operation4453{
   get():ODataCountResponse
}
export interface operation4454{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation4455{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation4456{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4457{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4458{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation4459{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation4460{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4461{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4462{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation4463{
   get():{}
}
export interface operation4464{
   get():MicrosoftGraphNotebook
}
export interface operation4465{
   get():MicrosoftGraphOnenoteSection
}
export interface operation4466{
   get():ODataCountResponse
}
export interface operation4467{
   get():MicrosoftGraphNotebook
}
export interface operation4468{
   get():MicrosoftGraphSectionGroup
}
export interface operation4469{
   get():ODataCountResponse
}
export interface operation4470{
   get():ODataCountResponse
}
export interface operation4471{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation4472{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation4473{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4474{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4475{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation4476{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation4477{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4478{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4479{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation4480{
   get():{}
}
export interface operation4481{
   get():MicrosoftGraphNotebook
}
export interface operation4482{
   get():MicrosoftGraphOnenoteSection
}
export interface operation4483{
   get():ODataCountResponse
}
export interface operation4484{
   get():MicrosoftGraphNotebook
}
export interface operation4485{
   get():MicrosoftGraphSectionGroup
}
export interface operation4486{
   get():ODataCountResponse
}
export interface operation4487{
   get():ODataCountResponse
}
export interface operation4488{
   post(requestBody:{webUrl?: string,}):{}
}
export interface operation4489{
   get():{value?: MicrosoftGraphRecentNotebook[],}
}
export interface operation4490{
   get():MicrosoftGraphOnenoteOperationCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteOperation):MicrosoftGraphOnenoteOperation
}
export interface operation4491{
   get():MicrosoftGraphOnenoteOperation
   patch(requestBody:MicrosoftGraphOnenoteOperation):"Success"
   delete():"Success"
}
export interface operation4492{
   get():ODataCountResponse
}
export interface operation4493{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation4494{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation4495{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4496{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4497{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation4498{
   get():{}
}
export interface operation4499{
   get():MicrosoftGraphNotebook
}
export interface operation4500{
   get():MicrosoftGraphOnenoteSection
}
export interface operation4501{
   get():ODataCountResponse
}
export interface operation4502{
   get():MicrosoftGraphOnenoteResourceCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteResource):MicrosoftGraphOnenoteResource
}
export interface operation4503{
   get():MicrosoftGraphOnenoteResource
   patch(requestBody:MicrosoftGraphOnenoteResource):"Success"
   delete():"Success"
}
export interface operation4504{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4505{
   get():ODataCountResponse
}
export interface operation4506{
   get():MicrosoftGraphSectionGroupCollectionResponse
   post(requestBody:MicrosoftGraphSectionGroup):MicrosoftGraphSectionGroup
}
export interface operation4507{
   get():MicrosoftGraphSectionGroup
   patch(requestBody:MicrosoftGraphSectionGroup):"Success"
   delete():"Success"
}
export interface operation4508{
   get():MicrosoftGraphNotebook
}
export interface operation4509{
   get():MicrosoftGraphSectionGroup
}
export interface operation4510{
   get():MicrosoftGraphSectionGroupCollectionResponse
}
export interface operation4511{
   get():MicrosoftGraphSectionGroup
}
export interface operation4512{
   get():ODataCountResponse
}
export interface operation4513{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation4514{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation4515{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4516{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4517{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation4518{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation4519{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4520{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4521{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation4522{
   get():{}
}
export interface operation4523{
   get():MicrosoftGraphNotebook
}
export interface operation4524{
   get():MicrosoftGraphOnenoteSection
}
export interface operation4525{
   get():ODataCountResponse
}
export interface operation4526{
   get():MicrosoftGraphNotebook
}
export interface operation4527{
   get():MicrosoftGraphSectionGroup
}
export interface operation4528{
   get():ODataCountResponse
}
export interface operation4529{
   get():ODataCountResponse
}
export interface operation4530{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation4531{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation4532{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4533{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4534{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation4535{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation4536{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4537{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation4538{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation4539{
   get():{}
}
export interface operation4540{
   get():MicrosoftGraphNotebook
}
export interface operation4541{
   get():MicrosoftGraphOnenoteSection
}
export interface operation4542{
   get():ODataCountResponse
}
export interface operation4543{
   get():MicrosoftGraphNotebook
}
export interface operation4544{
   get():MicrosoftGraphSectionGroup
}
export interface operation4545{
   get():ODataCountResponse
}
export interface operation4546{
   get():MicrosoftGraphOnlineMeetingCollectionResponse
   post(requestBody:MicrosoftGraphOnlineMeeting):MicrosoftGraphOnlineMeeting
}
export interface operation4547{
   get():MicrosoftGraphOnlineMeeting
   patch(requestBody:MicrosoftGraphOnlineMeeting):"Success"
   delete():"Success"
}
export interface operation4548{
   get():MicrosoftGraphMeetingAttendanceReportCollectionResponse
   post(requestBody:MicrosoftGraphMeetingAttendanceReport):MicrosoftGraphMeetingAttendanceReport
}
export interface operation4549{
   get():MicrosoftGraphMeetingAttendanceReport
   patch(requestBody:MicrosoftGraphMeetingAttendanceReport):"Success"
   delete():"Success"
}
export interface operation4550{
   get():MicrosoftGraphAttendanceRecordCollectionResponse
   post(requestBody:MicrosoftGraphAttendanceRecord):MicrosoftGraphAttendanceRecord
}
export interface operation4551{
   get():MicrosoftGraphAttendanceRecord
   patch(requestBody:MicrosoftGraphAttendanceRecord):"Success"
   delete():"Success"
}
export interface operation4552{
   get():ODataCountResponse
}
export interface operation4553{
   get():ODataCountResponse
}
export interface operation4554{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4555{
   get():ODataCountResponse
}
export interface operation4556{
   post(requestBody:{chatInfo?: MicrosoftGraphChatInfo,endDateTime?: string,externalId?: string,participants?: MicrosoftGraphMeetingParticipants,startDateTime?: string,subject?: string,}):{}
}
export interface operation4557{
   get():MicrosoftGraphOutlookUser
   patch(requestBody:MicrosoftGraphOutlookUser):"Success"
   delete():"Success"
}
export interface operation4558{
   get():MicrosoftGraphOutlookCategoryCollectionResponse
   post(requestBody:MicrosoftGraphOutlookCategory):MicrosoftGraphOutlookCategory
}
export interface operation4559{
   get():MicrosoftGraphOutlookCategory
   patch(requestBody:MicrosoftGraphOutlookCategory):"Success"
   delete():"Success"
}
export interface operation4560{
   get():ODataCountResponse
}
export interface operation4561{
   get():{value?: {displayName?: string,locale?: string,"@odata.type"?: string,},}
}
export interface operation4562{
   get():{value?: {alias?: string,displayName?: string,"@odata.type"?: string,},}
}
export interface operation4563{
   get():{value?: {alias?: string,displayName?: string,"@odata.type"?: string,},}
}
export interface operation4564{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation4565{
   get():MicrosoftGraphDirectoryObject
}
export interface operation4566{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation4567{
   get():MicrosoftGraphDevice
}
export interface operation4568{
   get():MicrosoftGraphEndpoint
}
export interface operation4569{
   get():ODataCountResponse
}
export interface operation4570{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation4571{
   get():ODataCountResponse
}
export interface operation4572{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation4573{
   get():ODataCountResponse
}
export interface operation4574{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation4575{
   get():ODataCountResponse
}
export interface operation4576{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation4577{
   get():MicrosoftGraphDirectoryObject
}
export interface operation4578{
   get():MicrosoftGraphApplication
}
export interface operation4579{
   get():MicrosoftGraphGroup
}
export interface operation4580{
   get():MicrosoftGraphServicePrincipal
}
export interface operation4581{
   get():ODataCountResponse
}
export interface operation4582{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation4583{
   get():ODataCountResponse
}
export interface operation4584{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation4585{
   get():ODataCountResponse
}
export interface operation4586{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation4587{
   get():ODataCountResponse
}
export interface operation4588{
   get():MicrosoftGraphPersonCollectionResponse
   post(requestBody:MicrosoftGraphPerson):MicrosoftGraphPerson
}
export interface operation4589{
   get():MicrosoftGraphPerson
   patch(requestBody:MicrosoftGraphPerson):"Success"
   delete():"Success"
}
export interface operation4590{
   get():ODataCountResponse
}
export interface operation4591{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation4592{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4593{
   get():MicrosoftGraphProfilePhotoCollectionResponse
   post(requestBody:MicrosoftGraphProfilePhoto):MicrosoftGraphProfilePhoto
}
export interface operation4594{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation4595{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4596{
   get():ODataCountResponse
}
export interface operation4597{
   get():MicrosoftGraphPlannerUser
   patch(requestBody:MicrosoftGraphPlannerUser):"Success"
   delete():"Success"
}
export interface operation4598{
   get():MicrosoftGraphPlannerPlanCollectionResponse
   post(requestBody:MicrosoftGraphPlannerPlan):MicrosoftGraphPlannerPlan
}
export interface operation4599{
   get():MicrosoftGraphPlannerPlan
   patch(requestBody:MicrosoftGraphPlannerPlan):"Success"
   delete():"Success"
}
export interface operation4600{
   get():MicrosoftGraphPlannerBucketCollectionResponse
   post(requestBody:MicrosoftGraphPlannerBucket):MicrosoftGraphPlannerBucket
}
export interface operation4601{
   get():MicrosoftGraphPlannerBucket
   patch(requestBody:MicrosoftGraphPlannerBucket):"Success"
   delete():"Success"
}
export interface operation4602{
   get():MicrosoftGraphPlannerTaskCollectionResponse
   post(requestBody:MicrosoftGraphPlannerTask):MicrosoftGraphPlannerTask
}
export interface operation4603{
   get():MicrosoftGraphPlannerTask
   patch(requestBody:MicrosoftGraphPlannerTask):"Success"
   delete():"Success"
}
export interface operation4604{
   get():MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4605{
   get():MicrosoftGraphPlannerBucketTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerBucketTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4606{
   get():MicrosoftGraphPlannerTaskDetails
   patch(requestBody:MicrosoftGraphPlannerTaskDetails):"Success"
   delete():"Success"
}
export interface operation4607{
   get():MicrosoftGraphPlannerProgressTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerProgressTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4608{
   get():ODataCountResponse
}
export interface operation4609{
   get():ODataCountResponse
}
export interface operation4610{
   get():MicrosoftGraphPlannerPlanDetails
   patch(requestBody:MicrosoftGraphPlannerPlanDetails):"Success"
   delete():"Success"
}
export interface operation4611{
   get():MicrosoftGraphPlannerTaskCollectionResponse
   post(requestBody:MicrosoftGraphPlannerTask):MicrosoftGraphPlannerTask
}
export interface operation4612{
   get():MicrosoftGraphPlannerTask
   patch(requestBody:MicrosoftGraphPlannerTask):"Success"
   delete():"Success"
}
export interface operation4613{
   get():MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4614{
   get():MicrosoftGraphPlannerBucketTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerBucketTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4615{
   get():MicrosoftGraphPlannerTaskDetails
   patch(requestBody:MicrosoftGraphPlannerTaskDetails):"Success"
   delete():"Success"
}
export interface operation4616{
   get():MicrosoftGraphPlannerProgressTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerProgressTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4617{
   get():ODataCountResponse
}
export interface operation4618{
   get():ODataCountResponse
}
export interface operation4619{
   get():MicrosoftGraphPlannerTaskCollectionResponse
   post(requestBody:MicrosoftGraphPlannerTask):MicrosoftGraphPlannerTask
}
export interface operation4620{
   get():MicrosoftGraphPlannerTask
   patch(requestBody:MicrosoftGraphPlannerTask):"Success"
   delete():"Success"
}
export interface operation4621{
   get():MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4622{
   get():MicrosoftGraphPlannerBucketTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerBucketTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4623{
   get():MicrosoftGraphPlannerTaskDetails
   patch(requestBody:MicrosoftGraphPlannerTaskDetails):"Success"
   delete():"Success"
}
export interface operation4624{
   get():MicrosoftGraphPlannerProgressTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerProgressTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4625{
   get():ODataCountResponse
}
export interface operation4626{
   get():MicrosoftGraphPresence
   patch(requestBody:MicrosoftGraphPresence):"Success"
   delete():"Success"
}
export interface operation4627{
   post(requestBody:{sessionId?: string,}):"Success"
}
export interface operation4628{
   post():"Success"
}
export interface operation4629{
   post(requestBody:{sessionId?: string,availability?: string,activity?: string,expirationDuration?: string,}):"Success"
}
export interface operation4630{
   post(requestBody:{availability?: string,activity?: string,expirationDuration?: string,}):"Success"
}
export interface operation4631{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation4632{
   get():MicrosoftGraphDirectoryObject
}
export interface operation4633{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation4634{
   get():MicrosoftGraphDevice
}
export interface operation4635{
   get():MicrosoftGraphEndpoint
}
export interface operation4636{
   get():ODataCountResponse
}
export interface operation4637{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation4638{
   get():ODataCountResponse
}
export interface operation4639{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation4640{
   get():ODataCountResponse
}
export interface operation4641{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation4642{
   get():ODataCountResponse
}
export interface operation4643{
   get():MicrosoftGraphScopedRoleMembershipCollectionResponse
   post(requestBody:MicrosoftGraphScopedRoleMembership):MicrosoftGraphScopedRoleMembership
}
export interface operation4644{
   get():MicrosoftGraphScopedRoleMembership
   patch(requestBody:MicrosoftGraphScopedRoleMembership):"Success"
   delete():"Success"
}
export interface operation4645{
   get():ODataCountResponse
}
export interface operation4646{
   get():MicrosoftGraphUserSettings
   patch(requestBody:MicrosoftGraphUserSettings):"Success"
   delete():"Success"
}
export interface operation4647{
   get():MicrosoftGraphShiftPreferences
   patch(requestBody:MicrosoftGraphShiftPreferences):"Success"
   delete():"Success"
}
export interface operation4648{
   get():MicrosoftGraphUserTeamwork
   patch(requestBody:MicrosoftGraphUserTeamwork):"Success"
   delete():"Success"
}
export interface operation4649{
   get():MicrosoftGraphAssociatedTeamInfoCollectionResponse
   post(requestBody:MicrosoftGraphAssociatedTeamInfo):MicrosoftGraphAssociatedTeamInfo
}
export interface operation4650{
   get():MicrosoftGraphAssociatedTeamInfo
   patch(requestBody:MicrosoftGraphAssociatedTeamInfo):"Success"
   delete():"Success"
}
export interface operation4651{
   get():ODataCountResponse
}
export interface operation4652{
   get():MicrosoftGraphUserScopeTeamsAppInstallationCollectionResponse
   post(requestBody:MicrosoftGraphUserScopeTeamsAppInstallation):MicrosoftGraphUserScopeTeamsAppInstallation
}
export interface operation4653{
   get():MicrosoftGraphUserScopeTeamsAppInstallation
   patch(requestBody:MicrosoftGraphUserScopeTeamsAppInstallation):"Success"
   delete():"Success"
}
export interface operation4654{
   get():MicrosoftGraphChat
}
export interface operation4655{
   get():ODataCountResponse
}
export interface operation4656{
   post(requestBody:{topic?: MicrosoftGraphTeamworkActivityTopic,activityType?: string,chainId?: number,previewText?: MicrosoftGraphItemBody,templateParameters?: MicrosoftGraphKeyValuePair[],}):"Success"
}
export interface operation4657{
   get():MicrosoftGraphTodo
   patch(requestBody:MicrosoftGraphTodo):"Success"
   delete():"Success"
}
export interface operation4658{
   get():MicrosoftGraphTodoTaskListCollectionResponse
   post(requestBody:MicrosoftGraphTodoTaskList):MicrosoftGraphTodoTaskList
}
export interface operation4659{
   get():MicrosoftGraphTodoTaskList
   patch(requestBody:MicrosoftGraphTodoTaskList):"Success"
   delete():"Success"
}
export interface operation4660{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation4661{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation4662{
   get():ODataCountResponse
}
export interface operation4663{
   get():MicrosoftGraphTodoTaskCollectionResponse
   post(requestBody:MicrosoftGraphTodoTask):MicrosoftGraphTodoTask
}
export interface operation4664{
   get():MicrosoftGraphTodoTask
   patch(requestBody:MicrosoftGraphTodoTask):"Success"
   delete():"Success"
}
export interface operation4665{
   get():MicrosoftGraphAttachmentBaseCollectionResponse
   post(requestBody:MicrosoftGraphAttachmentBase):MicrosoftGraphAttachmentBase
}
export interface operation4666{
   get():MicrosoftGraphAttachmentBase
   patch(requestBody:MicrosoftGraphAttachmentBase):"Success"
   delete():"Success"
}
export interface operation4667{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4668{
   get():ODataCountResponse
}
export interface operation4669{
   post(requestBody:{attachmentInfo?: {attachmentType?: MicrosoftGraphAttachmentType,contentType?: string,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation4670{
   get():MicrosoftGraphAttachmentSessionCollectionResponse
   post(requestBody:MicrosoftGraphAttachmentSession):MicrosoftGraphAttachmentSession
}
export interface operation4671{
   get():MicrosoftGraphAttachmentSession
   patch(requestBody:MicrosoftGraphAttachmentSession):"Success"
   delete():"Success"
}
export interface operation4672{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4673{
   get():ODataCountResponse
}
export interface operation4674{
   get():MicrosoftGraphChecklistItemCollectionResponse
   post(requestBody:MicrosoftGraphChecklistItem):MicrosoftGraphChecklistItem
}
export interface operation4675{
   get():MicrosoftGraphChecklistItem
   patch(requestBody:MicrosoftGraphChecklistItem):"Success"
   delete():"Success"
}
export interface operation4676{
   get():ODataCountResponse
}
export interface operation4677{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation4678{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation4679{
   get():ODataCountResponse
}
export interface operation4680{
   get():MicrosoftGraphLinkedResourceCollectionResponse
   post(requestBody:MicrosoftGraphLinkedResource):MicrosoftGraphLinkedResource
}
export interface operation4681{
   get():MicrosoftGraphLinkedResource
   patch(requestBody:MicrosoftGraphLinkedResource):"Success"
   delete():"Success"
}
export interface operation4682{
   get():ODataCountResponse
}
export interface operation4683{
   get():ODataCountResponse
}
export interface operation4684{
   get():{value?: MicrosoftGraphTodoTask[],}
}
export interface operation4685{
   get():ODataCountResponse
}
export interface operation4686{
   get():{value?: MicrosoftGraphTodoTaskList[],}
}
export interface operation4687{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation4688{
   get():MicrosoftGraphDirectoryObject
}
export interface operation4689{
   get():MicrosoftGraphApplication
}
export interface operation4690{
   get():MicrosoftGraphDevice
}
export interface operation4691{
   get():MicrosoftGraphGroup
}
export interface operation4692{
   get():MicrosoftGraphOrgContact
}
export interface operation4693{
   get():MicrosoftGraphServicePrincipal
}
export interface operation4694{
   get():MicrosoftGraphUser
}
export interface operation4695{
   get():ODataCountResponse
}
export interface operation4696{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation4697{
   get():ODataCountResponse
}
export interface operation4698{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation4699{
   get():ODataCountResponse
}
export interface operation4700{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation4701{
   get():ODataCountResponse
}
export interface operation4702{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation4703{
   get():ODataCountResponse
}
export interface operation4704{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation4705{
   get():ODataCountResponse
}
export interface operation4706{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation4707{
   get():ODataCountResponse
}
export interface operation4708{
   get():MicrosoftGraphOAuth2PermissionGrantCollectionResponse
   post(requestBody:MicrosoftGraphOAuth2PermissionGrant):MicrosoftGraphOAuth2PermissionGrant
}
export interface operation4709{
   get():MicrosoftGraphOAuth2PermissionGrant
   patch(requestBody:MicrosoftGraphOAuth2PermissionGrant):"Success"
   delete():"Success"
}
export interface operation4710{
   get():ODataCountResponse
}
export interface operation4711{
   get():{value?: MicrosoftGraphOAuth2PermissionGrant[],}
}
export interface operation4712{
   get():MicrosoftGraphOrganizationCollectionResponse
   post(requestBody:MicrosoftGraphOrganization):MicrosoftGraphOrganization
}
export interface operation4713{
   get():MicrosoftGraphOrganization
   patch(requestBody:MicrosoftGraphOrganization):"Success"
   delete():"Success"
}
export interface operation4714{
   get():MicrosoftGraphOrganizationalBranding
   patch(requestBody:MicrosoftGraphOrganizationalBranding):"Success"
   delete():"Success"
}
export interface operation4715{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4716{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4717{
   get():MicrosoftGraphOrganizationalBrandingLocalizationCollectionResponse
   post(requestBody:MicrosoftGraphOrganizationalBrandingLocalization):MicrosoftGraphOrganizationalBrandingLocalization
}
export interface operation4718{
   get():MicrosoftGraphOrganizationalBrandingLocalization
   patch(requestBody:MicrosoftGraphOrganizationalBrandingLocalization):"Success"
   delete():"Success"
}
export interface operation4719{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4720{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4721{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4722{
   get():ODataCountResponse
}
export interface operation4723{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation4724{
   get():MicrosoftGraphCertificateBasedAuthConfigurationCollectionResponse
}
export interface operation4725{
   get():MicrosoftGraphCertificateBasedAuthConfiguration
}
export interface operation4726{
   get():ODataCountResponse
}
export interface operation4727{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation4728{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation4729{
   get():ODataCountResponse
}
export interface operation4730{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation4731{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation4732{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation4733{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation4734{
   post():{}
}
export interface operation4735{
   post():{value?: number,}
}
export interface operation4736{
   get():ODataCountResponse
}
export interface operation4737{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation4738{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation4739{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation4740{
   get():MicrosoftGraphResourceSpecificPermissionGrantCollectionResponse
   post(requestBody:MicrosoftGraphResourceSpecificPermissionGrant):MicrosoftGraphResourceSpecificPermissionGrant
}
export interface operation4741{
   get():MicrosoftGraphResourceSpecificPermissionGrant
   patch(requestBody:MicrosoftGraphResourceSpecificPermissionGrant):"Success"
   delete():"Success"
}
export interface operation4742{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation4743{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation4744{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation4745{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation4746{
   post():{}
}
export interface operation4747{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation4748{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation4749{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation4750{
   get():MicrosoftGraphPlaceCollectionResponse
   post(requestBody:MicrosoftGraphPlace):MicrosoftGraphPlace
}
export interface operation4751{
   get():MicrosoftGraphPlace
   patch(requestBody:MicrosoftGraphPlace):"Success"
   delete():"Success"
}
export interface operation4752{
   get():MicrosoftGraphRoom
}
export interface operation4753{
   get():ODataCountResponse
}
export interface operation4754{
   get():MicrosoftGraphRoomCollectionResponse
}
export interface operation4755{
   get():ODataCountResponse
}
export interface operation4756{
   get():MicrosoftGraphPlanner
   patch(requestBody:MicrosoftGraphPlanner):"Success"
}
export interface operation4757{
   get():MicrosoftGraphPlannerBucketCollectionResponse
   post(requestBody:MicrosoftGraphPlannerBucket):MicrosoftGraphPlannerBucket
}
export interface operation4758{
   get():MicrosoftGraphPlannerBucket
   patch(requestBody:MicrosoftGraphPlannerBucket):"Success"
   delete():"Success"
}
export interface operation4759{
   get():MicrosoftGraphPlannerTaskCollectionResponse
   post(requestBody:MicrosoftGraphPlannerTask):MicrosoftGraphPlannerTask
}
export interface operation4760{
   get():MicrosoftGraphPlannerTask
   patch(requestBody:MicrosoftGraphPlannerTask):"Success"
   delete():"Success"
}
export interface operation4761{
   get():MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4762{
   get():MicrosoftGraphPlannerBucketTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerBucketTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4763{
   get():MicrosoftGraphPlannerTaskDetails
   patch(requestBody:MicrosoftGraphPlannerTaskDetails):"Success"
   delete():"Success"
}
export interface operation4764{
   get():MicrosoftGraphPlannerProgressTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerProgressTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4765{
   get():ODataCountResponse
}
export interface operation4766{
   get():ODataCountResponse
}
export interface operation4767{
   get():MicrosoftGraphPlannerPlanCollectionResponse
   post(requestBody:MicrosoftGraphPlannerPlan):MicrosoftGraphPlannerPlan
}
export interface operation4768{
   get():MicrosoftGraphPlannerPlan
   patch(requestBody:MicrosoftGraphPlannerPlan):"Success"
   delete():"Success"
}
export interface operation4769{
   get():MicrosoftGraphPlannerBucketCollectionResponse
   post(requestBody:MicrosoftGraphPlannerBucket):MicrosoftGraphPlannerBucket
}
export interface operation4770{
   get():MicrosoftGraphPlannerBucket
   patch(requestBody:MicrosoftGraphPlannerBucket):"Success"
   delete():"Success"
}
export interface operation4771{
   get():MicrosoftGraphPlannerTaskCollectionResponse
   post(requestBody:MicrosoftGraphPlannerTask):MicrosoftGraphPlannerTask
}
export interface operation4772{
   get():MicrosoftGraphPlannerTask
   patch(requestBody:MicrosoftGraphPlannerTask):"Success"
   delete():"Success"
}
export interface operation4773{
   get():MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4774{
   get():MicrosoftGraphPlannerBucketTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerBucketTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4775{
   get():MicrosoftGraphPlannerTaskDetails
   patch(requestBody:MicrosoftGraphPlannerTaskDetails):"Success"
   delete():"Success"
}
export interface operation4776{
   get():MicrosoftGraphPlannerProgressTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerProgressTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4777{
   get():ODataCountResponse
}
export interface operation4778{
   get():ODataCountResponse
}
export interface operation4779{
   get():MicrosoftGraphPlannerPlanDetails
   patch(requestBody:MicrosoftGraphPlannerPlanDetails):"Success"
   delete():"Success"
}
export interface operation4780{
   get():MicrosoftGraphPlannerTaskCollectionResponse
   post(requestBody:MicrosoftGraphPlannerTask):MicrosoftGraphPlannerTask
}
export interface operation4781{
   get():MicrosoftGraphPlannerTask
   patch(requestBody:MicrosoftGraphPlannerTask):"Success"
   delete():"Success"
}
export interface operation4782{
   get():MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4783{
   get():MicrosoftGraphPlannerBucketTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerBucketTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4784{
   get():MicrosoftGraphPlannerTaskDetails
   patch(requestBody:MicrosoftGraphPlannerTaskDetails):"Success"
   delete():"Success"
}
export interface operation4785{
   get():MicrosoftGraphPlannerProgressTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerProgressTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4786{
   get():ODataCountResponse
}
export interface operation4787{
   get():ODataCountResponse
}
export interface operation4788{
   get():MicrosoftGraphPlannerTaskCollectionResponse
   post(requestBody:MicrosoftGraphPlannerTask):MicrosoftGraphPlannerTask
}
export interface operation4789{
   get():MicrosoftGraphPlannerTask
   patch(requestBody:MicrosoftGraphPlannerTask):"Success"
   delete():"Success"
}
export interface operation4790{
   get():MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4791{
   get():MicrosoftGraphPlannerBucketTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerBucketTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4792{
   get():MicrosoftGraphPlannerTaskDetails
   patch(requestBody:MicrosoftGraphPlannerTaskDetails):"Success"
   delete():"Success"
}
export interface operation4793{
   get():MicrosoftGraphPlannerProgressTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerProgressTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation4794{
   get():ODataCountResponse
}
export interface operation4795{
   get():MicrosoftGraphPolicyRoot
   patch(requestBody:MicrosoftGraphPolicyRoot):"Success"
}
export interface operation4796{
   get():MicrosoftGraphActivityBasedTimeoutPolicyCollectionResponse
   post(requestBody:MicrosoftGraphActivityBasedTimeoutPolicy):MicrosoftGraphActivityBasedTimeoutPolicy
}
export interface operation4797{
   get():MicrosoftGraphActivityBasedTimeoutPolicy
   patch(requestBody:MicrosoftGraphActivityBasedTimeoutPolicy):"Success"
   delete():"Success"
}
export interface operation4798{
   get():ODataCountResponse
}
export interface operation4799{
   get():MicrosoftGraphAdminConsentRequestPolicy
   patch(requestBody:MicrosoftGraphAdminConsentRequestPolicy):"Success"
   delete():"Success"
}
export interface operation4800{
   get():MicrosoftGraphAuthenticationFlowsPolicy
   patch(requestBody:MicrosoftGraphAuthenticationFlowsPolicy):"Success"
   delete():"Success"
}
export interface operation4801{
   get():MicrosoftGraphAuthenticationMethodsPolicy
   patch(requestBody:MicrosoftGraphAuthenticationMethodsPolicy):"Success"
   delete():"Success"
}
export interface operation4802{
   get():MicrosoftGraphAuthenticationMethodConfigurationCollectionResponse
   post(requestBody:MicrosoftGraphAuthenticationMethodConfiguration):MicrosoftGraphAuthenticationMethodConfiguration
}
export interface operation4803{
   get():MicrosoftGraphAuthenticationMethodConfiguration
   patch(requestBody:MicrosoftGraphAuthenticationMethodConfiguration):"Success"
   delete():"Success"
}
export interface operation4804{
   get():ODataCountResponse
}
export interface operation4805{
   get():MicrosoftGraphAuthorizationPolicy
   patch(requestBody:MicrosoftGraphAuthorizationPolicy):"Success"
   delete():"Success"
}
export interface operation4806{
   get():MicrosoftGraphClaimsMappingPolicyCollectionResponse
   post(requestBody:MicrosoftGraphClaimsMappingPolicy):MicrosoftGraphClaimsMappingPolicy
}
export interface operation4807{
   get():MicrosoftGraphClaimsMappingPolicy
   patch(requestBody:MicrosoftGraphClaimsMappingPolicy):"Success"
   delete():"Success"
}
export interface operation4808{
   get():ODataCountResponse
}
export interface operation4809{
   get():MicrosoftGraphConditionalAccessPolicyCollectionResponse
   post(requestBody:MicrosoftGraphConditionalAccessPolicy):MicrosoftGraphConditionalAccessPolicy
}
export interface operation4810{
   get():MicrosoftGraphConditionalAccessPolicy
   patch(requestBody:MicrosoftGraphConditionalAccessPolicy):"Success"
   delete():"Success"
}
export interface operation4811{
   get():ODataCountResponse
}
export interface operation4812{
   get():MicrosoftGraphCrossTenantAccessPolicy
   patch(requestBody:MicrosoftGraphCrossTenantAccessPolicy):"Success"
   delete():"Success"
}
export interface operation4813{
   get():MicrosoftGraphCrossTenantAccessPolicyConfigurationDefault
   patch(requestBody:MicrosoftGraphCrossTenantAccessPolicyConfigurationDefault):"Success"
   delete():"Success"
}
export interface operation4814{
   post():"Success"
}
export interface operation4815{
   get():MicrosoftGraphCrossTenantAccessPolicyConfigurationPartnerCollectionResponse
   post(requestBody:MicrosoftGraphCrossTenantAccessPolicyConfigurationPartner):MicrosoftGraphCrossTenantAccessPolicyConfigurationPartner
}
export interface operation4816{
   get():MicrosoftGraphCrossTenantAccessPolicyConfigurationPartner
   patch(requestBody:MicrosoftGraphCrossTenantAccessPolicyConfigurationPartner):"Success"
   delete():"Success"
}
export interface operation4817{
   get():ODataCountResponse
}
export interface operation4818{
   get():MicrosoftGraphFeatureRolloutPolicyCollectionResponse
   post(requestBody:MicrosoftGraphFeatureRolloutPolicy):MicrosoftGraphFeatureRolloutPolicy
}
export interface operation4819{
   get():MicrosoftGraphFeatureRolloutPolicy
   patch(requestBody:MicrosoftGraphFeatureRolloutPolicy):"Success"
   delete():"Success"
}
export interface operation4820{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
   post(requestBody:MicrosoftGraphDirectoryObject):MicrosoftGraphDirectoryObject
}
export interface operation4821{
   delete():"Success"
}
export interface operation4822{
   get():ODataCountResponse
}
export interface operation4823{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation4824{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation4825{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation4826{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation4827{
   get():ODataCountResponse
}
export interface operation4828{
   get():MicrosoftGraphHomeRealmDiscoveryPolicyCollectionResponse
   post(requestBody:MicrosoftGraphHomeRealmDiscoveryPolicy):MicrosoftGraphHomeRealmDiscoveryPolicy
}
export interface operation4829{
   get():MicrosoftGraphHomeRealmDiscoveryPolicy
   patch(requestBody:MicrosoftGraphHomeRealmDiscoveryPolicy):"Success"
   delete():"Success"
}
export interface operation4830{
   get():ODataCountResponse
}
export interface operation4831{
   get():MicrosoftGraphIdentitySecurityDefaultsEnforcementPolicy
   patch(requestBody:MicrosoftGraphIdentitySecurityDefaultsEnforcementPolicy):"Success"
   delete():"Success"
}
export interface operation4832{
   get():MicrosoftGraphPermissionGrantPolicyCollectionResponse
   post(requestBody:MicrosoftGraphPermissionGrantPolicy):MicrosoftGraphPermissionGrantPolicy
}
export interface operation4833{
   get():MicrosoftGraphPermissionGrantPolicy
   patch(requestBody:MicrosoftGraphPermissionGrantPolicy):"Success"
   delete():"Success"
}
export interface operation4834{
   get():MicrosoftGraphPermissionGrantConditionSetCollectionResponse
   post(requestBody:MicrosoftGraphPermissionGrantConditionSet):MicrosoftGraphPermissionGrantConditionSet
}
export interface operation4835{
   get():MicrosoftGraphPermissionGrantConditionSet
   patch(requestBody:MicrosoftGraphPermissionGrantConditionSet):"Success"
   delete():"Success"
}
export interface operation4836{
   get():ODataCountResponse
}
export interface operation4837{
   get():MicrosoftGraphPermissionGrantConditionSetCollectionResponse
   post(requestBody:MicrosoftGraphPermissionGrantConditionSet):MicrosoftGraphPermissionGrantConditionSet
}
export interface operation4838{
   get():MicrosoftGraphPermissionGrantConditionSet
   patch(requestBody:MicrosoftGraphPermissionGrantConditionSet):"Success"
   delete():"Success"
}
export interface operation4839{
   get():ODataCountResponse
}
export interface operation4840{
   get():ODataCountResponse
}
export interface operation4841{
   get():MicrosoftGraphUnifiedRoleManagementPolicyCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleManagementPolicy):MicrosoftGraphUnifiedRoleManagementPolicy
}
export interface operation4842{
   get():MicrosoftGraphUnifiedRoleManagementPolicy
   patch(requestBody:MicrosoftGraphUnifiedRoleManagementPolicy):"Success"
   delete():"Success"
}
export interface operation4843{
   get():MicrosoftGraphUnifiedRoleManagementPolicyRuleCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleManagementPolicyRule):MicrosoftGraphUnifiedRoleManagementPolicyRule
}
export interface operation4844{
   get():MicrosoftGraphUnifiedRoleManagementPolicyRule
   patch(requestBody:MicrosoftGraphUnifiedRoleManagementPolicyRule):"Success"
   delete():"Success"
}
export interface operation4845{
   get():ODataCountResponse
}
export interface operation4846{
   get():MicrosoftGraphUnifiedRoleManagementPolicyRuleCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleManagementPolicyRule):MicrosoftGraphUnifiedRoleManagementPolicyRule
}
export interface operation4847{
   get():MicrosoftGraphUnifiedRoleManagementPolicyRule
   patch(requestBody:MicrosoftGraphUnifiedRoleManagementPolicyRule):"Success"
   delete():"Success"
}
export interface operation4848{
   get():ODataCountResponse
}
export interface operation4849{
   get():ODataCountResponse
}
export interface operation4850{
   get():MicrosoftGraphUnifiedRoleManagementPolicyAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleManagementPolicyAssignment):MicrosoftGraphUnifiedRoleManagementPolicyAssignment
}
export interface operation4851{
   get():MicrosoftGraphUnifiedRoleManagementPolicyAssignment
   patch(requestBody:MicrosoftGraphUnifiedRoleManagementPolicyAssignment):"Success"
   delete():"Success"
}
export interface operation4852{
   get():MicrosoftGraphUnifiedRoleManagementPolicy
}
export interface operation4853{
   get():ODataCountResponse
}
export interface operation4854{
   get():MicrosoftGraphTokenIssuancePolicyCollectionResponse
   post(requestBody:MicrosoftGraphTokenIssuancePolicy):MicrosoftGraphTokenIssuancePolicy
}
export interface operation4855{
   get():MicrosoftGraphTokenIssuancePolicy
   patch(requestBody:MicrosoftGraphTokenIssuancePolicy):"Success"
   delete():"Success"
}
export interface operation4856{
   get():ODataCountResponse
}
export interface operation4857{
   get():MicrosoftGraphTokenLifetimePolicyCollectionResponse
   post(requestBody:MicrosoftGraphTokenLifetimePolicy):MicrosoftGraphTokenLifetimePolicy
}
export interface operation4858{
   get():MicrosoftGraphTokenLifetimePolicy
   patch(requestBody:MicrosoftGraphTokenLifetimePolicy):"Success"
   delete():"Success"
}
export interface operation4859{
   get():ODataCountResponse
}
export interface operation4860{
   get():MicrosoftGraphPrint
   patch(requestBody:MicrosoftGraphPrint):"Success"
}
export interface operation4861{
   get():MicrosoftGraphPrintConnectorCollectionResponse
   post(requestBody:MicrosoftGraphPrintConnector):MicrosoftGraphPrintConnector
}
export interface operation4862{
   get():MicrosoftGraphPrintConnector
   patch(requestBody:MicrosoftGraphPrintConnector):"Success"
   delete():"Success"
}
export interface operation4863{
   get():ODataCountResponse
}
export interface operation4864{
   get():MicrosoftGraphPrintOperationCollectionResponse
   post(requestBody:MicrosoftGraphPrintOperation):MicrosoftGraphPrintOperation
}
export interface operation4865{
   get():MicrosoftGraphPrintOperation
   patch(requestBody:MicrosoftGraphPrintOperation):"Success"
   delete():"Success"
}
export interface operation4866{
   get():ODataCountResponse
}
export interface operation4867{
   get():MicrosoftGraphPrinterCollectionResponse
   post(requestBody:MicrosoftGraphPrinter):MicrosoftGraphPrinter
}
export interface operation4868{
   get():MicrosoftGraphPrinter
   patch(requestBody:MicrosoftGraphPrinter):"Success"
   delete():"Success"
}
export interface operation4869{
   get():MicrosoftGraphPrintConnectorCollectionResponse
}
export interface operation4870{
   get():MicrosoftGraphPrintConnector
}
export interface operation4871{
   get():ODataCountResponse
}
export interface operation4872{
   post():"Success"
}
export interface operation4873{
   get():MicrosoftGraphPrinterShareCollectionResponse
}
export interface operation4874{
   get():MicrosoftGraphPrinterShare
}
export interface operation4875{
   get():ODataCountResponse
}
export interface operation4876{
   get():MicrosoftGraphPrintTaskTriggerCollectionResponse
   post(requestBody:MicrosoftGraphPrintTaskTrigger):MicrosoftGraphPrintTaskTrigger
}
export interface operation4877{
   get():MicrosoftGraphPrintTaskTrigger
   patch(requestBody:MicrosoftGraphPrintTaskTrigger):"Success"
   delete():"Success"
}
export interface operation4878{
   get():MicrosoftGraphPrintTaskDefinition
}
export interface operation4879{
   get():ODataCountResponse
}
export interface operation4880{
   get():ODataCountResponse
}
export interface operation4881{
   post(requestBody:{displayName?: string,manufacturer?: string,model?: string,physicalDeviceId?: string,hasPhysicalDevice?: boolean,certificateSigningRequest?: {content?: string,transportKey?: string,"@odata.type"?: string,},connectorId?: string,}):"Success"
}
export interface operation4882{
   get():MicrosoftGraphPrintServiceCollectionResponse
   post(requestBody:MicrosoftGraphPrintService):MicrosoftGraphPrintService
}
export interface operation4883{
   get():MicrosoftGraphPrintService
   patch(requestBody:MicrosoftGraphPrintService):"Success"
   delete():"Success"
}
export interface operation4884{
   get():MicrosoftGraphPrintServiceEndpointCollectionResponse
   post(requestBody:MicrosoftGraphPrintServiceEndpoint):MicrosoftGraphPrintServiceEndpoint
}
export interface operation4885{
   get():MicrosoftGraphPrintServiceEndpoint
   patch(requestBody:MicrosoftGraphPrintServiceEndpoint):"Success"
   delete():"Success"
}
export interface operation4886{
   get():ODataCountResponse
}
export interface operation4887{
   get():ODataCountResponse
}
export interface operation4888{
   get():MicrosoftGraphPrinterShareCollectionResponse
   post(requestBody:MicrosoftGraphPrinterShare):MicrosoftGraphPrinterShare
}
export interface operation4889{
   get():MicrosoftGraphPrinterShare
   patch(requestBody:MicrosoftGraphPrinterShare):"Success"
   delete():"Success"
}
export interface operation4890{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation4891{
   delete():"Success"
}
export interface operation4892{
   get():ODataCountResponse
}
export interface operation4893{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation4894{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation4895{
   delete():"Success"
}
export interface operation4896{
   get():ODataCountResponse
}
export interface operation4897{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation4898{
   get():MicrosoftGraphPrinter
}
export interface operation4899{
   get():ODataCountResponse
}
export interface operation4900{
   get():MicrosoftGraphPrintTaskDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphPrintTaskDefinition):MicrosoftGraphPrintTaskDefinition
}
export interface operation4901{
   get():MicrosoftGraphPrintTaskDefinition
   patch(requestBody:MicrosoftGraphPrintTaskDefinition):"Success"
   delete():"Success"
}
export interface operation4902{
   get():MicrosoftGraphPrintTaskCollectionResponse
   post(requestBody:MicrosoftGraphPrintTask):MicrosoftGraphPrintTask
}
export interface operation4903{
   get():MicrosoftGraphPrintTask
   patch(requestBody:MicrosoftGraphPrintTask):"Success"
   delete():"Success"
}
export interface operation4904{
   get():MicrosoftGraphPrintTaskDefinition
}
export interface operation4905{
   get():MicrosoftGraphPrintTaskTrigger
}
export interface operation4906{
   get():ODataCountResponse
}
export interface operation4907{
   get():ODataCountResponse
}
export interface operation4908{
   get():MicrosoftGraphPrivacy
   patch(requestBody:MicrosoftGraphPrivacy):"Success"
}
export interface operation4909{
   get():MicrosoftGraphSubjectRightsRequestCollectionResponse
   post(requestBody:MicrosoftGraphSubjectRightsRequest):MicrosoftGraphSubjectRightsRequest
}
export interface operation4910{
   get():MicrosoftGraphSubjectRightsRequest
   patch(requestBody:MicrosoftGraphSubjectRightsRequest):"Success"
   delete():"Success"
}
export interface operation4911{
   get():{value?: string,}
}
export interface operation4912{
   get():{value?: string,}
}
export interface operation4913{
   get():MicrosoftGraphAuthoredNoteCollectionResponse
   post(requestBody:MicrosoftGraphAuthoredNote):MicrosoftGraphAuthoredNote
}
export interface operation4914{
   get():MicrosoftGraphAuthoredNote
   patch(requestBody:MicrosoftGraphAuthoredNote):"Success"
   delete():"Success"
}
export interface operation4915{
   get():ODataCountResponse
}
export interface operation4916{
   get():MicrosoftGraphTeam
}
export interface operation4917{
   get():ODataCountResponse
}
export interface operation4918{
   get():MicrosoftGraphReportRoot
   patch(requestBody:MicrosoftGraphReportRoot):"Success"
}
export interface operation4919{
   get():MicrosoftGraphPrintUsageByPrinterCollectionResponse
   post(requestBody:MicrosoftGraphPrintUsageByPrinter):MicrosoftGraphPrintUsageByPrinter
}
export interface operation4920{
   get():MicrosoftGraphPrintUsageByPrinter
   patch(requestBody:MicrosoftGraphPrintUsageByPrinter):"Success"
   delete():"Success"
}
export interface operation4921{
   get():ODataCountResponse
}
export interface operation4922{
   get():MicrosoftGraphPrintUsageByUserCollectionResponse
   post(requestBody:MicrosoftGraphPrintUsageByUser):MicrosoftGraphPrintUsageByUser
}
export interface operation4923{
   get():MicrosoftGraphPrintUsageByUser
   patch(requestBody:MicrosoftGraphPrintUsageByUser):"Success"
   delete():"Success"
}
export interface operation4924{
   get():ODataCountResponse
}
export interface operation4925{
   get():{}
}
export interface operation4926{
   get():{}
}
export interface operation4927{
   get():{value?: string,}
}
export interface operation4928{
   get():{value?: string,}
}
export interface operation4929{
   get():{value?: string,}
}
export interface operation4930{
   get():{value?: string,}
}
export interface operation4931{
   get():{value?: string,}
}
export interface operation4932{
   get():{value?: string,}
}
export interface operation4933{
   get():{value?: string,}
}
export interface operation4934{
   get():{value?: string,}
}
export interface operation4935{
   get():{value?: string,}
}
export interface operation4936{
   get():{value?: MicrosoftGraphArchivedPrintJob[],}
}
export interface operation4937{
   get():{value?: string,}
}
export interface operation4938{
   get():{value?: string,}
}
export interface operation4939{
   get():{value?: string,}
}
export interface operation4940{
   get():{value?: string,}
}
export interface operation4941{
   get():MicrosoftGraphReport
}
export interface operation4942{
   get():MicrosoftGraphReport
}
export interface operation4943{
   get():MicrosoftGraphReport
}
export interface operation4944{
   get():MicrosoftGraphReport
}
export interface operation4945{
   get():MicrosoftGraphReport
}
export interface operation4946{
   get():MicrosoftGraphReport
}
export interface operation4947{
   get():MicrosoftGraphReport
}
export interface operation4948{
   get():MicrosoftGraphReport
}
export interface operation4949{
   get():MicrosoftGraphReport
}
export interface operation4950{
   get():MicrosoftGraphReport
}
export interface operation4951{
   get():MicrosoftGraphReport
}
export interface operation4952{
   get():MicrosoftGraphReport
}
export interface operation4953{
   get():MicrosoftGraphReport
}
export interface operation4954{
   get():MicrosoftGraphReport
}
export interface operation4955{
   get():MicrosoftGraphReport
}
export interface operation4956{
   get():MicrosoftGraphReport
}
export interface operation4957{
   get():MicrosoftGraphReport
}
export interface operation4958{
   get():MicrosoftGraphReport
}
export interface operation4959{
   get():MicrosoftGraphReport
}
export interface operation4960{
   get():MicrosoftGraphReport
}
export interface operation4961{
   get():MicrosoftGraphReport
}
export interface operation4962{
   get():MicrosoftGraphReport
}
export interface operation4963{
   get():{value?: MicrosoftGraphArchivedPrintJob[],}
}
export interface operation4964{
   get():MicrosoftGraphReport
}
export interface operation4965{
   get():MicrosoftGraphReport
}
export interface operation4966{
   get():MicrosoftGraphReport
}
export interface operation4967{
   get():MicrosoftGraphReport
}
export interface operation4968{
   get():MicrosoftGraphReport
}
export interface operation4969{
   get():MicrosoftGraphReport
}
export interface operation4970{
   get():MicrosoftGraphReport
}
export interface operation4971{
   get():MicrosoftGraphReport
}
export interface operation4972{
   get():MicrosoftGraphReport
}
export interface operation4973{
   get():MicrosoftGraphReport
}
export interface operation4974{
   get():MicrosoftGraphReport
}
export interface operation4975{
   get():MicrosoftGraphReport
}
export interface operation4976{
   get():MicrosoftGraphReport
}
export interface operation4977{
   get():MicrosoftGraphReport
}
export interface operation4978{
   get():MicrosoftGraphReport
}
export interface operation4979{
   get():MicrosoftGraphReport
}
export interface operation4980{
   get():MicrosoftGraphReport
}
export interface operation4981{
   get():MicrosoftGraphReport
}
export interface operation4982{
   get():MicrosoftGraphReport
}
export interface operation4983{
   get():MicrosoftGraphReport
}
export interface operation4984{
   get():MicrosoftGraphReport
}
export interface operation4985{
   get():MicrosoftGraphReport
}
export interface operation4986{
   get():MicrosoftGraphReport
}
export interface operation4987{
   get():MicrosoftGraphReport
}
export interface operation4988{
   get():MicrosoftGraphReport
}
export interface operation4989{
   get():MicrosoftGraphReport
}
export interface operation4990{
   get():MicrosoftGraphReport
}
export interface operation4991{
   get():MicrosoftGraphReport
}
export interface operation4992{
   get():{value?: string,}
}
export interface operation4993{
   get():{value?: string,}
}
export interface operation4994{
   get():{value?: string,}
}
export interface operation4995{
   get():{value?: string,}
}
export interface operation4996{
   get():{value?: string,}
}
export interface operation4997{
   get():{value?: string,}
}
export interface operation4998{
   get():{value?: string,}
}
export interface operation4999{
   get():{value?: string,}
}
export interface operation5000{
   get():{value?: MicrosoftGraphArchivedPrintJob[],}
}
export interface operation5001{
   get():MicrosoftGraphReport
}
export interface operation5002{
   get():MicrosoftGraphReport
}
export interface operation5003{
   get():MicrosoftGraphReport
}
export interface operation5004{
   get():MicrosoftGraphReport
}
export interface operation5005{
   get():MicrosoftGraphReport
}
export interface operation5006{
   get():MicrosoftGraphReport
}
export interface operation5007{
   get():MicrosoftGraphReport
}
export interface operation5008{
   get():MicrosoftGraphReport
}
export interface operation5009{
   get():MicrosoftGraphReport
}
export interface operation5010{
   get():MicrosoftGraphReport
}
export interface operation5011{
   get():MicrosoftGraphReport
}
export interface operation5012{
   get():MicrosoftGraphReport
}
export interface operation5013{
   get():{}
}
export interface operation5014{
   get():{}
}
export interface operation5015{
   get():{}
}
export interface operation5016{
   get():{}
}
export interface operation5017{
   get():MicrosoftGraphPrintUsageByPrinterCollectionResponse
   post(requestBody:MicrosoftGraphPrintUsageByPrinter):MicrosoftGraphPrintUsageByPrinter
}
export interface operation5018{
   get():MicrosoftGraphPrintUsageByPrinter
   patch(requestBody:MicrosoftGraphPrintUsageByPrinter):"Success"
   delete():"Success"
}
export interface operation5019{
   get():ODataCountResponse
}
export interface operation5020{
   get():MicrosoftGraphPrintUsageByUserCollectionResponse
   post(requestBody:MicrosoftGraphPrintUsageByUser):MicrosoftGraphPrintUsageByUser
}
export interface operation5021{
   get():MicrosoftGraphPrintUsageByUser
   patch(requestBody:MicrosoftGraphPrintUsageByUser):"Success"
   delete():"Success"
}
export interface operation5022{
   get():ODataCountResponse
}
export interface operation5023{
   get():MicrosoftGraphRoleManagement
   patch(requestBody:MicrosoftGraphRoleManagement):"Success"
}
export interface operation5024{
   get():MicrosoftGraphRbacApplication
   patch(requestBody:MicrosoftGraphRbacApplication):"Success"
   delete():"Success"
}
export interface operation5025{
   get():MicrosoftGraphUnifiedRoleAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleAssignment):MicrosoftGraphUnifiedRoleAssignment
}
export interface operation5026{
   get():MicrosoftGraphUnifiedRoleAssignment
   patch(requestBody:MicrosoftGraphUnifiedRoleAssignment):"Success"
   delete():"Success"
}
export interface operation5027{
   get():MicrosoftGraphAppScope
   patch(requestBody:MicrosoftGraphAppScope):"Success"
   delete():"Success"
}
export interface operation5028{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5029{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5030{
   get():MicrosoftGraphUnifiedRoleDefinition
}
export interface operation5031{
   get():ODataCountResponse
}
export interface operation5032{
   get():MicrosoftGraphUnifiedRoleAssignmentScheduleInstanceCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleAssignmentScheduleInstance):MicrosoftGraphUnifiedRoleAssignmentScheduleInstance
}
export interface operation5033{
   get():MicrosoftGraphUnifiedRoleAssignmentScheduleInstance
   patch(requestBody:MicrosoftGraphUnifiedRoleAssignmentScheduleInstance):"Success"
   delete():"Success"
}
export interface operation5034{
   get():MicrosoftGraphUnifiedRoleEligibilityScheduleInstance
}
export interface operation5035{
   get():ODataCountResponse
}
export interface operation5036{
   get():{value?: MicrosoftGraphUnifiedRoleAssignmentScheduleInstance[],}
}
export interface operation5037{
   get():MicrosoftGraphUnifiedRoleAssignmentScheduleRequestCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleAssignmentScheduleRequest):MicrosoftGraphUnifiedRoleAssignmentScheduleRequest
}
export interface operation5038{
   get():MicrosoftGraphUnifiedRoleAssignmentScheduleRequest
   patch(requestBody:MicrosoftGraphUnifiedRoleAssignmentScheduleRequest):"Success"
   delete():"Success"
}
export interface operation5039{
   get():MicrosoftGraphUnifiedRoleEligibilitySchedule
}
export interface operation5040{
   get():MicrosoftGraphAppScope
}
export interface operation5041{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5042{
   post():"Success"
}
export interface operation5043{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5044{
   get():MicrosoftGraphUnifiedRoleDefinition
}
export interface operation5045{
   get():MicrosoftGraphUnifiedRoleAssignmentSchedule
}
export interface operation5046{
   get():ODataCountResponse
}
export interface operation5047{
   get():{value?: MicrosoftGraphUnifiedRoleAssignmentScheduleRequest[],}
}
export interface operation5048{
   get():MicrosoftGraphUnifiedRoleAssignmentScheduleCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleAssignmentSchedule):MicrosoftGraphUnifiedRoleAssignmentSchedule
}
export interface operation5049{
   get():MicrosoftGraphUnifiedRoleAssignmentSchedule
   patch(requestBody:MicrosoftGraphUnifiedRoleAssignmentSchedule):"Success"
   delete():"Success"
}
export interface operation5050{
   get():MicrosoftGraphUnifiedRoleEligibilitySchedule
}
export interface operation5051{
   get():ODataCountResponse
}
export interface operation5052{
   get():{value?: MicrosoftGraphUnifiedRoleAssignmentSchedule[],}
}
export interface operation5053{
   get():MicrosoftGraphUnifiedRoleDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleDefinition):MicrosoftGraphUnifiedRoleDefinition
}
export interface operation5054{
   get():MicrosoftGraphUnifiedRoleDefinition
   patch(requestBody:MicrosoftGraphUnifiedRoleDefinition):"Success"
   delete():"Success"
}
export interface operation5055{
   get():MicrosoftGraphUnifiedRoleDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleDefinition):MicrosoftGraphUnifiedRoleDefinition
}
export interface operation5056{
   get():MicrosoftGraphUnifiedRoleDefinition
   patch(requestBody:MicrosoftGraphUnifiedRoleDefinition):"Success"
   delete():"Success"
}
export interface operation5057{
   get():ODataCountResponse
}
export interface operation5058{
   get():ODataCountResponse
}
export interface operation5059{
   get():MicrosoftGraphUnifiedRoleEligibilityScheduleInstanceCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleEligibilityScheduleInstance):MicrosoftGraphUnifiedRoleEligibilityScheduleInstance
}
export interface operation5060{
   get():MicrosoftGraphUnifiedRoleEligibilityScheduleInstance
   patch(requestBody:MicrosoftGraphUnifiedRoleEligibilityScheduleInstance):"Success"
   delete():"Success"
}
export interface operation5061{
   get():ODataCountResponse
}
export interface operation5062{
   get():{value?: MicrosoftGraphUnifiedRoleEligibilityScheduleInstance[],}
}
export interface operation5063{
   get():MicrosoftGraphUnifiedRoleEligibilityScheduleRequestCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleEligibilityScheduleRequest):MicrosoftGraphUnifiedRoleEligibilityScheduleRequest
}
export interface operation5064{
   get():MicrosoftGraphUnifiedRoleEligibilityScheduleRequest
   patch(requestBody:MicrosoftGraphUnifiedRoleEligibilityScheduleRequest):"Success"
   delete():"Success"
}
export interface operation5065{
   get():MicrosoftGraphAppScope
}
export interface operation5066{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5067{
   post():"Success"
}
export interface operation5068{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5069{
   get():MicrosoftGraphUnifiedRoleDefinition
}
export interface operation5070{
   get():MicrosoftGraphUnifiedRoleEligibilitySchedule
}
export interface operation5071{
   get():ODataCountResponse
}
export interface operation5072{
   get():{value?: MicrosoftGraphUnifiedRoleEligibilityScheduleRequest[],}
}
export interface operation5073{
   get():MicrosoftGraphUnifiedRoleEligibilityScheduleCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleEligibilitySchedule):MicrosoftGraphUnifiedRoleEligibilitySchedule
}
export interface operation5074{
   get():MicrosoftGraphUnifiedRoleEligibilitySchedule
   patch(requestBody:MicrosoftGraphUnifiedRoleEligibilitySchedule):"Success"
   delete():"Success"
}
export interface operation5075{
   get():ODataCountResponse
}
export interface operation5076{
   get():{value?: MicrosoftGraphUnifiedRoleEligibilitySchedule[],}
}
export interface operation5077{
   get():MicrosoftGraphRbacApplication
   patch(requestBody:MicrosoftGraphRbacApplication):"Success"
   delete():"Success"
}
export interface operation5078{
   get():MicrosoftGraphUnifiedRoleAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleAssignment):MicrosoftGraphUnifiedRoleAssignment
}
export interface operation5079{
   get():MicrosoftGraphUnifiedRoleAssignment
   patch(requestBody:MicrosoftGraphUnifiedRoleAssignment):"Success"
   delete():"Success"
}
export interface operation5080{
   get():MicrosoftGraphAppScope
   patch(requestBody:MicrosoftGraphAppScope):"Success"
   delete():"Success"
}
export interface operation5081{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5082{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5083{
   get():MicrosoftGraphUnifiedRoleDefinition
}
export interface operation5084{
   get():ODataCountResponse
}
export interface operation5085{
   get():MicrosoftGraphUnifiedRoleAssignmentScheduleInstanceCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleAssignmentScheduleInstance):MicrosoftGraphUnifiedRoleAssignmentScheduleInstance
}
export interface operation5086{
   get():MicrosoftGraphUnifiedRoleAssignmentScheduleInstance
   patch(requestBody:MicrosoftGraphUnifiedRoleAssignmentScheduleInstance):"Success"
   delete():"Success"
}
export interface operation5087{
   get():MicrosoftGraphUnifiedRoleEligibilityScheduleInstance
}
export interface operation5088{
   get():ODataCountResponse
}
export interface operation5089{
   get():{value?: MicrosoftGraphUnifiedRoleAssignmentScheduleInstance[],}
}
export interface operation5090{
   get():MicrosoftGraphUnifiedRoleAssignmentScheduleRequestCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleAssignmentScheduleRequest):MicrosoftGraphUnifiedRoleAssignmentScheduleRequest
}
export interface operation5091{
   get():MicrosoftGraphUnifiedRoleAssignmentScheduleRequest
   patch(requestBody:MicrosoftGraphUnifiedRoleAssignmentScheduleRequest):"Success"
   delete():"Success"
}
export interface operation5092{
   get():MicrosoftGraphUnifiedRoleEligibilitySchedule
}
export interface operation5093{
   get():MicrosoftGraphAppScope
}
export interface operation5094{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5095{
   post():"Success"
}
export interface operation5096{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5097{
   get():MicrosoftGraphUnifiedRoleDefinition
}
export interface operation5098{
   get():MicrosoftGraphUnifiedRoleAssignmentSchedule
}
export interface operation5099{
   get():ODataCountResponse
}
export interface operation5100{
   get():{value?: MicrosoftGraphUnifiedRoleAssignmentScheduleRequest[],}
}
export interface operation5101{
   get():MicrosoftGraphUnifiedRoleAssignmentScheduleCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleAssignmentSchedule):MicrosoftGraphUnifiedRoleAssignmentSchedule
}
export interface operation5102{
   get():MicrosoftGraphUnifiedRoleAssignmentSchedule
   patch(requestBody:MicrosoftGraphUnifiedRoleAssignmentSchedule):"Success"
   delete():"Success"
}
export interface operation5103{
   get():MicrosoftGraphUnifiedRoleEligibilitySchedule
}
export interface operation5104{
   get():ODataCountResponse
}
export interface operation5105{
   get():{value?: MicrosoftGraphUnifiedRoleAssignmentSchedule[],}
}
export interface operation5106{
   get():MicrosoftGraphUnifiedRoleDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleDefinition):MicrosoftGraphUnifiedRoleDefinition
}
export interface operation5107{
   get():MicrosoftGraphUnifiedRoleDefinition
   patch(requestBody:MicrosoftGraphUnifiedRoleDefinition):"Success"
   delete():"Success"
}
export interface operation5108{
   get():MicrosoftGraphUnifiedRoleDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleDefinition):MicrosoftGraphUnifiedRoleDefinition
}
export interface operation5109{
   get():MicrosoftGraphUnifiedRoleDefinition
   patch(requestBody:MicrosoftGraphUnifiedRoleDefinition):"Success"
   delete():"Success"
}
export interface operation5110{
   get():ODataCountResponse
}
export interface operation5111{
   get():ODataCountResponse
}
export interface operation5112{
   get():MicrosoftGraphUnifiedRoleEligibilityScheduleInstanceCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleEligibilityScheduleInstance):MicrosoftGraphUnifiedRoleEligibilityScheduleInstance
}
export interface operation5113{
   get():MicrosoftGraphUnifiedRoleEligibilityScheduleInstance
   patch(requestBody:MicrosoftGraphUnifiedRoleEligibilityScheduleInstance):"Success"
   delete():"Success"
}
export interface operation5114{
   get():ODataCountResponse
}
export interface operation5115{
   get():{value?: MicrosoftGraphUnifiedRoleEligibilityScheduleInstance[],}
}
export interface operation5116{
   get():MicrosoftGraphUnifiedRoleEligibilityScheduleRequestCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleEligibilityScheduleRequest):MicrosoftGraphUnifiedRoleEligibilityScheduleRequest
}
export interface operation5117{
   get():MicrosoftGraphUnifiedRoleEligibilityScheduleRequest
   patch(requestBody:MicrosoftGraphUnifiedRoleEligibilityScheduleRequest):"Success"
   delete():"Success"
}
export interface operation5118{
   get():MicrosoftGraphAppScope
}
export interface operation5119{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5120{
   post():"Success"
}
export interface operation5121{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5122{
   get():MicrosoftGraphUnifiedRoleDefinition
}
export interface operation5123{
   get():MicrosoftGraphUnifiedRoleEligibilitySchedule
}
export interface operation5124{
   get():ODataCountResponse
}
export interface operation5125{
   get():{value?: MicrosoftGraphUnifiedRoleEligibilityScheduleRequest[],}
}
export interface operation5126{
   get():MicrosoftGraphUnifiedRoleEligibilityScheduleCollectionResponse
   post(requestBody:MicrosoftGraphUnifiedRoleEligibilitySchedule):MicrosoftGraphUnifiedRoleEligibilitySchedule
}
export interface operation5127{
   get():MicrosoftGraphUnifiedRoleEligibilitySchedule
   patch(requestBody:MicrosoftGraphUnifiedRoleEligibilitySchedule):"Success"
   delete():"Success"
}
export interface operation5128{
   get():ODataCountResponse
}
export interface operation5129{
   get():{value?: MicrosoftGraphUnifiedRoleEligibilitySchedule[],}
}
export interface operation5130{
   get():MicrosoftGraphSchemaExtensionCollectionResponse
   post(requestBody:MicrosoftGraphSchemaExtension):MicrosoftGraphSchemaExtension
}
export interface operation5131{
   get():MicrosoftGraphSchemaExtension
   patch(requestBody:MicrosoftGraphSchemaExtension):"Success"
   delete():"Success"
}
export interface operation5132{
   get():ODataCountResponse
}
export interface operation5133{
   get():MicrosoftGraphScopedRoleMembershipCollectionResponse
   post(requestBody:MicrosoftGraphScopedRoleMembership):MicrosoftGraphScopedRoleMembership
}
export interface operation5134{
   get():MicrosoftGraphScopedRoleMembership
   patch(requestBody:MicrosoftGraphScopedRoleMembership):"Success"
   delete():"Success"
}
export interface operation5135{
   get():ODataCountResponse
}
export interface operation5136{
   get():MicrosoftGraphSearchEntity
   patch(requestBody:MicrosoftGraphSearchEntity):"Success"
}
export interface operation5137{
   post(requestBody:{requests?: {aggregationFilters?: string[],aggregations?: MicrosoftGraphAggregationOption[],contentSources?: string[],enableTopResults?: boolean,entityTypes?: MicrosoftGraphEntityType[],fields?: string[],from?: number,query?: {queryString?: string,"@odata.type"?: string,},queryAlterationOptions?: MicrosoftGraphSearchAlterationOptions,resultTemplateOptions?: MicrosoftGraphResultTemplateOption,size?: number,sortProperties?: MicrosoftGraphSortProperty[],"@odata.type"?: string,},}):{value?: {hitsContainers?: MicrosoftGraphSearchHitsContainer[],queryAlterationResponse?: MicrosoftGraphAlterationResponse,resultTemplates?: MicrosoftGraphResultTemplateDictionary,searchTerms?: string[],"@odata.type"?: string,},}
}
export interface operation5138{
   get():MicrosoftGraphSecurity
   patch(requestBody:MicrosoftGraphSecurity):"Success"
}
export interface operation5139{
   get():MicrosoftGraphAlertCollectionResponse
   post(requestBody:MicrosoftGraphAlert):MicrosoftGraphAlert
}
export interface operation5140{
   get():MicrosoftGraphAlert
   patch(requestBody:MicrosoftGraphAlert):"Success"
   delete():"Success"
}
export interface operation5141{
   get():ODataCountResponse
}
export interface operation5142{
   get():MicrosoftGraphSecurityCasesRoot
   patch(requestBody:MicrosoftGraphSecurityCasesRoot):"Success"
   delete():"Success"
}
export interface operation5143{
   get():MicrosoftGraphSecurityEdiscoveryCaseCollectionResponse
   post(requestBody:MicrosoftGraphSecurityEdiscoveryCase):MicrosoftGraphSecurityEdiscoveryCase
}
export interface operation5144{
   get():MicrosoftGraphSecurityEdiscoveryCase
   patch(requestBody:MicrosoftGraphSecurityEdiscoveryCase):"Success"
   delete():"Success"
}
export interface operation5145{
   get():MicrosoftGraphSecurityEdiscoveryCustodianCollectionResponse
   post(requestBody:MicrosoftGraphSecurityEdiscoveryCustodian):MicrosoftGraphSecurityEdiscoveryCustodian
}
export interface operation5146{
   get():MicrosoftGraphSecurityEdiscoveryCustodian
   patch(requestBody:MicrosoftGraphSecurityEdiscoveryCustodian):"Success"
   delete():"Success"
}
export interface operation5147{
   get():MicrosoftGraphSecurityEdiscoveryIndexOperation
}
export interface operation5148{
   post():"Success"
}
export interface operation5149{
   post():"Success"
}
export interface operation5150{
   post():"Success"
}
export interface operation5151{
   post():"Success"
}
export interface operation5152{
   post():"Success"
}
export interface operation5153{
   get():MicrosoftGraphSecuritySiteSourceCollectionResponse
   post(requestBody:MicrosoftGraphSecuritySiteSource):MicrosoftGraphSecuritySiteSource
}
export interface operation5154{
   get():MicrosoftGraphSecuritySiteSource
   patch(requestBody:MicrosoftGraphSecuritySiteSource):"Success"
   delete():"Success"
}
export interface operation5155{
   get():MicrosoftGraphSite
}
export interface operation5156{
   get():ODataCountResponse
}
export interface operation5157{
   get():MicrosoftGraphSecurityUnifiedGroupSourceCollectionResponse
   post(requestBody:MicrosoftGraphSecurityUnifiedGroupSource):MicrosoftGraphSecurityUnifiedGroupSource
}
export interface operation5158{
   get():MicrosoftGraphSecurityUnifiedGroupSource
   patch(requestBody:MicrosoftGraphSecurityUnifiedGroupSource):"Success"
   delete():"Success"
}
export interface operation5159{
   get():MicrosoftGraphGroup
}
export interface operation5160{
   get():ODataCountResponse
}
export interface operation5161{
   get():MicrosoftGraphSecurityUserSourceCollectionResponse
   post(requestBody:MicrosoftGraphSecurityUserSource):MicrosoftGraphSecurityUserSource
}
export interface operation5162{
   get():MicrosoftGraphSecurityUserSource
   patch(requestBody:MicrosoftGraphSecurityUserSource):"Success"
   delete():"Success"
}
export interface operation5163{
   get():ODataCountResponse
}
export interface operation5164{
   get():ODataCountResponse
}
export interface operation5165{
   post(requestBody:{ids?: string[],}):"Success"
}
export interface operation5166{
   post(requestBody:{ids?: string[],}):"Success"
}
export interface operation5167{
   post():"Success"
}
export interface operation5168{
   post():"Success"
}
export interface operation5169{
   get():MicrosoftGraphSecurityEdiscoveryNoncustodialDataSourceCollectionResponse
   post(requestBody:MicrosoftGraphSecurityEdiscoveryNoncustodialDataSource):MicrosoftGraphSecurityEdiscoveryNoncustodialDataSource
}
export interface operation5170{
   get():MicrosoftGraphSecurityEdiscoveryNoncustodialDataSource
   patch(requestBody:MicrosoftGraphSecurityEdiscoveryNoncustodialDataSource):"Success"
   delete():"Success"
}
export interface operation5171{
   get():MicrosoftGraphSecurityDataSource
   patch(requestBody:MicrosoftGraphSecurityDataSource):"Success"
   delete():"Success"
}
export interface operation5172{
   get():MicrosoftGraphSecurityEdiscoveryIndexOperation
}
export interface operation5173{
   post():"Success"
}
export interface operation5174{
   post():"Success"
}
export interface operation5175{
   post():"Success"
}
export interface operation5176{
   post():"Success"
}
export interface operation5177{
   get():ODataCountResponse
}
export interface operation5178{
   post(requestBody:{ids?: string[],}):"Success"
}
export interface operation5179{
   post(requestBody:{ids?: string[],}):"Success"
}
export interface operation5180{
   get():MicrosoftGraphSecurityCaseOperationCollectionResponse
   post(requestBody:MicrosoftGraphSecurityCaseOperation):MicrosoftGraphSecurityCaseOperation
}
export interface operation5181{
   get():MicrosoftGraphSecurityCaseOperation
   patch(requestBody:MicrosoftGraphSecurityCaseOperation):"Success"
   delete():"Success"
}
export interface operation5182{
   get():ODataCountResponse
}
export interface operation5183{
   get():MicrosoftGraphSecurityEdiscoveryReviewSetCollectionResponse
   post(requestBody:MicrosoftGraphSecurityEdiscoveryReviewSet):MicrosoftGraphSecurityEdiscoveryReviewSet
}
export interface operation5184{
   get():MicrosoftGraphSecurityEdiscoveryReviewSet
   patch(requestBody:MicrosoftGraphSecurityEdiscoveryReviewSet):"Success"
   delete():"Success"
}
export interface operation5185{
   post(requestBody:{search?: MicrosoftGraphSecurityEdiscoverySearch,additionalDataOptions?: MicrosoftGraphSecurityAdditionalDataOptions,}):"Success"
}
export interface operation5186{
   get():MicrosoftGraphSecurityEdiscoveryReviewSetQueryCollectionResponse
   post(requestBody:MicrosoftGraphSecurityEdiscoveryReviewSetQuery):MicrosoftGraphSecurityEdiscoveryReviewSetQuery
}
export interface operation5187{
   get():MicrosoftGraphSecurityEdiscoveryReviewSetQuery
   patch(requestBody:MicrosoftGraphSecurityEdiscoveryReviewSetQuery):"Success"
   delete():"Success"
}
export interface operation5188{
   post(requestBody:{tagsToAdd?: MicrosoftGraphSecurityEdiscoveryReviewTag[],tagsToRemove?: MicrosoftGraphSecurityEdiscoveryReviewTag[],}):"Success"
}
export interface operation5189{
   get():ODataCountResponse
}
export interface operation5190{
   get():ODataCountResponse
}
export interface operation5191{
   get():MicrosoftGraphSecurityEdiscoverySearchCollectionResponse
   post(requestBody:MicrosoftGraphSecurityEdiscoverySearch):MicrosoftGraphSecurityEdiscoverySearch
}
export interface operation5192{
   get():MicrosoftGraphSecurityEdiscoverySearch
   patch(requestBody:MicrosoftGraphSecurityEdiscoverySearch):"Success"
   delete():"Success"
}
export interface operation5193{
   get():MicrosoftGraphSecurityDataSourceCollectionResponse
   post(requestBody:MicrosoftGraphSecurityDataSource):MicrosoftGraphSecurityDataSource
}
export interface operation5194{
   get():MicrosoftGraphSecurityDataSource
   patch(requestBody:MicrosoftGraphSecurityDataSource):"Success"
   delete():"Success"
}
export interface operation5195{
   get():ODataCountResponse
}
export interface operation5196{
   get():MicrosoftGraphSecurityEdiscoveryAddToReviewSetOperation
}
export interface operation5197{
   get():MicrosoftGraphSecurityDataSourceCollectionResponse
}
export interface operation5198{
   get():MicrosoftGraphSecurityDataSource
}
export interface operation5199{
   get():ODataCountResponse
}
export interface operation5200{
   get():MicrosoftGraphSecurityEdiscoveryEstimateOperation
}
export interface operation5201{
   post():"Success"
}
export interface operation5202{
   get():MicrosoftGraphSecurityEdiscoveryNoncustodialDataSourceCollectionResponse
}
export interface operation5203{
   get():MicrosoftGraphSecurityEdiscoveryNoncustodialDataSource
}
export interface operation5204{
   get():ODataCountResponse
}
export interface operation5205{
   get():ODataCountResponse
}
export interface operation5206{
   get():MicrosoftGraphSecurityEdiscoveryCaseSettings
   patch(requestBody:MicrosoftGraphSecurityEdiscoveryCaseSettings):"Success"
   delete():"Success"
}
export interface operation5207{
   post():"Success"
}
export interface operation5208{
   get():MicrosoftGraphSecurityEdiscoveryReviewTagCollectionResponse
   post(requestBody:MicrosoftGraphSecurityEdiscoveryReviewTag):MicrosoftGraphSecurityEdiscoveryReviewTag
}
export interface operation5209{
   get():MicrosoftGraphSecurityEdiscoveryReviewTag
   patch(requestBody:MicrosoftGraphSecurityEdiscoveryReviewTag):"Success"
   delete():"Success"
}
export interface operation5210{
   get():MicrosoftGraphSecurityEdiscoveryReviewTagCollectionResponse
}
export interface operation5211{
   get():MicrosoftGraphSecurityEdiscoveryReviewTag
}
export interface operation5212{
   get():ODataCountResponse
}
export interface operation5213{
   get():MicrosoftGraphSecurityEdiscoveryReviewTag
}
export interface operation5214{
   get():ODataCountResponse
}
export interface operation5215{
   get():{value?: MicrosoftGraphSecurityEdiscoveryReviewTag[],}
}
export interface operation5216{
   get():ODataCountResponse
}
export interface operation5217{
   get():MicrosoftGraphSecureScoreControlProfileCollectionResponse
   post(requestBody:MicrosoftGraphSecureScoreControlProfile):MicrosoftGraphSecureScoreControlProfile
}
export interface operation5218{
   get():MicrosoftGraphSecureScoreControlProfile
   patch(requestBody:MicrosoftGraphSecureScoreControlProfile):"Success"
   delete():"Success"
}
export interface operation5219{
   get():ODataCountResponse
}
export interface operation5220{
   get():MicrosoftGraphSecureScoreCollectionResponse
   post(requestBody:MicrosoftGraphSecureScore):MicrosoftGraphSecureScore
}
export interface operation5221{
   get():MicrosoftGraphSecureScore
   patch(requestBody:MicrosoftGraphSecureScore):"Success"
   delete():"Success"
}
export interface operation5222{
   get():ODataCountResponse
}
export interface operation5223{
   get():MicrosoftGraphServicePrincipalCollectionResponse
   post(requestBody:MicrosoftGraphServicePrincipal):MicrosoftGraphServicePrincipal
}
export interface operation5224{
   get():MicrosoftGraphServicePrincipal
   patch(requestBody:MicrosoftGraphServicePrincipal):"Success"
   delete():"Success"
}
export interface operation5225{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphAppRoleAssignment):MicrosoftGraphAppRoleAssignment
}
export interface operation5226{
   get():MicrosoftGraphAppRoleAssignment
   patch(requestBody:MicrosoftGraphAppRoleAssignment):"Success"
   delete():"Success"
}
export interface operation5227{
   get():ODataCountResponse
}
export interface operation5228{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphAppRoleAssignment):MicrosoftGraphAppRoleAssignment
}
export interface operation5229{
   get():MicrosoftGraphAppRoleAssignment
   patch(requestBody:MicrosoftGraphAppRoleAssignment):"Success"
   delete():"Success"
}
export interface operation5230{
   get():ODataCountResponse
}
export interface operation5231{
   get():MicrosoftGraphClaimsMappingPolicyCollectionResponse
}
export interface operation5232{
   delete():"Success"
}
export interface operation5233{
   get():ODataCountResponse
}
export interface operation5234{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation5235{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation5236{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5237{
   get():MicrosoftGraphServicePrincipal
}
export interface operation5238{
   get():ODataCountResponse
}
export interface operation5239{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation5240{
   get():ODataCountResponse
}
export interface operation5241{
   get():MicrosoftGraphDelegatedPermissionClassificationCollectionResponse
   post(requestBody:MicrosoftGraphDelegatedPermissionClassification):MicrosoftGraphDelegatedPermissionClassification
}
export interface operation5242{
   get():MicrosoftGraphDelegatedPermissionClassification
   patch(requestBody:MicrosoftGraphDelegatedPermissionClassification):"Success"
   delete():"Success"
}
export interface operation5243{
   get():ODataCountResponse
}
export interface operation5244{
   get():MicrosoftGraphEndpointCollectionResponse
   post(requestBody:MicrosoftGraphEndpoint):MicrosoftGraphEndpoint
}
export interface operation5245{
   get():MicrosoftGraphEndpoint
   patch(requestBody:MicrosoftGraphEndpoint):"Success"
   delete():"Success"
}
export interface operation5246{
   get():ODataCountResponse
}
export interface operation5247{
   get():MicrosoftGraphFederatedIdentityCredentialCollectionResponse
   post(requestBody:MicrosoftGraphFederatedIdentityCredential):MicrosoftGraphFederatedIdentityCredential
}
export interface operation5248{
   get():MicrosoftGraphFederatedIdentityCredential
   patch(requestBody:MicrosoftGraphFederatedIdentityCredential):"Success"
   delete():"Success"
}
export interface operation5249{
   get():ODataCountResponse
}
export interface operation5250{
   get():MicrosoftGraphHomeRealmDiscoveryPolicyCollectionResponse
}
export interface operation5251{
   delete():"Success"
}
export interface operation5252{
   get():ODataCountResponse
}
export interface operation5253{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation5254{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation5255{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5256{
   get():MicrosoftGraphApplication
}
export interface operation5257{
   get():MicrosoftGraphDevice
}
export interface operation5258{
   get():MicrosoftGraphGroup
}
export interface operation5259{
   get():MicrosoftGraphOrgContact
}
export interface operation5260{
   get():MicrosoftGraphServicePrincipal
}
export interface operation5261{
   get():MicrosoftGraphUser
}
export interface operation5262{
   get():ODataCountResponse
}
export interface operation5263{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation5264{
   get():ODataCountResponse
}
export interface operation5265{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation5266{
   get():ODataCountResponse
}
export interface operation5267{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation5268{
   get():ODataCountResponse
}
export interface operation5269{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation5270{
   get():ODataCountResponse
}
export interface operation5271{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation5272{
   get():ODataCountResponse
}
export interface operation5273{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation5274{
   get():ODataCountResponse
}
export interface operation5275{
   post(requestBody:{keyCredential?: {customKeyIdentifier?: string,displayName?: string,endDateTime?: string,key?: string,keyId?: string,startDateTime?: string,type?: string,usage?: string,"@odata.type"?: string,},passwordCredential?: MicrosoftGraphPasswordCredential,proof?: string,}):MicrosoftGraphKeyCredential
}
export interface operation5276{
   post(requestBody:{passwordCredential?: MicrosoftGraphPasswordCredential,}):MicrosoftGraphPasswordCredential
}
export interface operation5277{
   post(requestBody:{displayName?: string,endDateTime?: string,}):MicrosoftGraphSelfSignedCertificate
}
export interface operation5278{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation5279{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation5280{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation5281{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation5282{
   post(requestBody:{keyId?: string,proof?: string,}):"Success"
}
export interface operation5283{
   post(requestBody:{keyId?: string,}):"Success"
}
export interface operation5284{
   post():{}
}
export interface operation5285{
   get():MicrosoftGraphOAuth2PermissionGrantCollectionResponse
}
export interface operation5286{
   get():MicrosoftGraphOAuth2PermissionGrant
}
export interface operation5287{
   get():ODataCountResponse
}
export interface operation5288{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation5289{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5290{
   get():MicrosoftGraphApplication
}
export interface operation5291{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation5292{
   get():MicrosoftGraphEndpoint
}
export interface operation5293{
   get():MicrosoftGraphGroup
}
export interface operation5294{
   get():MicrosoftGraphServicePrincipal
}
export interface operation5295{
   get():ODataCountResponse
}
export interface operation5296{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation5297{
   get():ODataCountResponse
}
export interface operation5298{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation5299{
   get():ODataCountResponse
}
export interface operation5300{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation5301{
   get():ODataCountResponse
}
export interface operation5302{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation5303{
   get():ODataCountResponse
}
export interface operation5304{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation5305{
   get():ODataCountResponse
}
export interface operation5306{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation5307{
   delete():"Success"
}
export interface operation5308{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation5309{
   get():MicrosoftGraphEndpoint
}
export interface operation5310{
   get():MicrosoftGraphServicePrincipal
}
export interface operation5311{
   get():MicrosoftGraphUser
}
export interface operation5312{
   get():ODataCountResponse
}
export interface operation5313{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation5314{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation5315{
   get():ODataCountResponse
}
export interface operation5316{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation5317{
   get():ODataCountResponse
}
export interface operation5318{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation5319{
   get():ODataCountResponse
}
export interface operation5320{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation5321{
   get():ODataCountResponse
}
export interface operation5322{
   get():MicrosoftGraphTokenIssuancePolicyCollectionResponse
}
export interface operation5323{
   get():MicrosoftGraphTokenIssuancePolicy
}
export interface operation5324{
   get():ODataCountResponse
}
export interface operation5325{
   get():MicrosoftGraphTokenLifetimePolicyCollectionResponse
}
export interface operation5326{
   get():MicrosoftGraphTokenLifetimePolicy
}
export interface operation5327{
   get():ODataCountResponse
}
export interface operation5328{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation5329{
   get():MicrosoftGraphDirectoryObject
}
export interface operation5330{
   get():MicrosoftGraphApplication
}
export interface operation5331{
   get():MicrosoftGraphDevice
}
export interface operation5332{
   get():MicrosoftGraphGroup
}
export interface operation5333{
   get():MicrosoftGraphOrgContact
}
export interface operation5334{
   get():MicrosoftGraphServicePrincipal
}
export interface operation5335{
   get():MicrosoftGraphUser
}
export interface operation5336{
   get():ODataCountResponse
}
export interface operation5337{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation5338{
   get():ODataCountResponse
}
export interface operation5339{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation5340{
   get():ODataCountResponse
}
export interface operation5341{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation5342{
   get():ODataCountResponse
}
export interface operation5343{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation5344{
   get():ODataCountResponse
}
export interface operation5345{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation5346{
   get():ODataCountResponse
}
export interface operation5347{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation5348{
   get():ODataCountResponse
}
export interface operation5349{
   get():ODataCountResponse
}
export interface operation5350{
   get():{value?: MicrosoftGraphServicePrincipal[],}
}
export interface operation5351{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation5352{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation5353{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation5354{
   get():MicrosoftGraphSharedDriveItemCollectionResponse
   post(requestBody:MicrosoftGraphSharedDriveItem):MicrosoftGraphSharedDriveItem
}
export interface operation5355{
   get():MicrosoftGraphSharedDriveItem
   patch(requestBody:MicrosoftGraphSharedDriveItem):"Success"
   delete():"Success"
}
export interface operation5356{
   get():MicrosoftGraphDriveItem
}
export interface operation5357{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation5358{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation5359{
   get():MicrosoftGraphDriveItem
}
export interface operation5360{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation5361{
   get():ODataCountResponse
}
export interface operation5362{
   get():MicrosoftGraphList
   patch(requestBody:MicrosoftGraphList):"Success"
   delete():"Success"
}
export interface operation5363{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation5364{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation5365{
   get():MicrosoftGraphColumnDefinition
}
export interface operation5366{
   get():ODataCountResponse
}
export interface operation5367{
   get():MicrosoftGraphContentTypeCollectionResponse
   post(requestBody:MicrosoftGraphContentType):MicrosoftGraphContentType
}
export interface operation5368{
   get():MicrosoftGraphContentType
   patch(requestBody:MicrosoftGraphContentType):"Success"
   delete():"Success"
}
export interface operation5369{
   get():MicrosoftGraphContentType
}
export interface operation5370{
   get():MicrosoftGraphContentTypeCollectionResponse
}
export interface operation5371{
   get():MicrosoftGraphContentType
}
export interface operation5372{
   get():ODataCountResponse
}
export interface operation5373{
   get():MicrosoftGraphColumnLinkCollectionResponse
   post(requestBody:MicrosoftGraphColumnLink):MicrosoftGraphColumnLink
}
export interface operation5374{
   get():MicrosoftGraphColumnLink
   patch(requestBody:MicrosoftGraphColumnLink):"Success"
   delete():"Success"
}
export interface operation5375{
   get():ODataCountResponse
}
export interface operation5376{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
}
export interface operation5377{
   get():MicrosoftGraphColumnDefinition
}
export interface operation5378{
   get():ODataCountResponse
}
export interface operation5379{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation5380{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation5381{
   get():MicrosoftGraphColumnDefinition
}
export interface operation5382{
   get():ODataCountResponse
}
export interface operation5383{
   post(requestBody:{hubSiteUrls?: string[],propagateToExistingLists?: boolean,}):"Success"
}
export interface operation5384{
   post(requestBody:{sourceFile?: {driveId?: string,driveType?: string,id?: string,name?: string,path?: string,shareId?: string,sharepointIds?: MicrosoftGraphSharepointIds,siteId?: string,"@odata.type"?: string,},destinationFileName?: string,}):"Success"
}
export interface operation5385{
   get():{value?: boolean,}
}
export interface operation5386{
   post():"Success"
}
export interface operation5387{
   post():"Success"
}
export interface operation5388{
   get():ODataCountResponse
}
export interface operation5389{
   post(requestBody:{contentType?: string,}):{}
}
export interface operation5390{
   post(requestBody:{contentTypeId?: string,}):{}
}
export interface operation5391{
   get():{value?: MicrosoftGraphContentType[],}
}
export interface operation5392{
   get():MicrosoftGraphDrive
}
export interface operation5393{
   get():MicrosoftGraphListItemCollectionResponse
   post(requestBody:MicrosoftGraphListItem):MicrosoftGraphListItem
}
export interface operation5394{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation5395{
   get():MicrosoftGraphItemAnalytics
}
export interface operation5396{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation5397{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation5398{
   post():"Success"
}
export interface operation5399{
   get():ODataCountResponse
}
export interface operation5400{
   get():MicrosoftGraphDriveItem
}
export interface operation5401{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation5402{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation5403{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation5404{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation5405{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation5406{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation5407{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation5408{
   post():"Success"
}
export interface operation5409{
   get():ODataCountResponse
}
export interface operation5410{
   get():ODataCountResponse
}
export interface operation5411{
   get():MicrosoftGraphRichLongRunningOperationCollectionResponse
   post(requestBody:MicrosoftGraphRichLongRunningOperation):MicrosoftGraphRichLongRunningOperation
}
export interface operation5412{
   get():MicrosoftGraphRichLongRunningOperation
   patch(requestBody:MicrosoftGraphRichLongRunningOperation):"Success"
   delete():"Success"
}
export interface operation5413{
   get():ODataCountResponse
}
export interface operation5414{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation5415{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation5416{
   post():"Success"
}
export interface operation5417{
   get():ODataCountResponse
}
export interface operation5418{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation5419{
   get():MicrosoftGraphItemAnalytics
}
export interface operation5420{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation5421{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation5422{
   post():"Success"
}
export interface operation5423{
   get():ODataCountResponse
}
export interface operation5424{
   get():MicrosoftGraphDriveItem
}
export interface operation5425{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation5426{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation5427{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation5428{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation5429{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation5430{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation5431{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation5432{
   post():"Success"
}
export interface operation5433{
   get():ODataCountResponse
}
export interface operation5434{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation5435{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation5436{
   get():MicrosoftGraphDriveItem
}
export interface operation5437{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation5438{
   get():MicrosoftGraphSite
}
export interface operation5439{
   get():ODataCountResponse
}
export interface operation5440{
   get():MicrosoftGraphSiteCollectionResponse
}
export interface operation5441{
   get():MicrosoftGraphSite
   patch(requestBody:MicrosoftGraphSite):"Success"
}
export interface operation5442{
   get():MicrosoftGraphItemAnalytics
}
export interface operation5443{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation5444{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation5445{
   get():MicrosoftGraphColumnDefinition
}
export interface operation5446{
   get():ODataCountResponse
}
export interface operation5447{
   get():MicrosoftGraphContentTypeCollectionResponse
   post(requestBody:MicrosoftGraphContentType):MicrosoftGraphContentType
}
export interface operation5448{
   get():MicrosoftGraphContentType
   patch(requestBody:MicrosoftGraphContentType):"Success"
   delete():"Success"
}
export interface operation5449{
   get():MicrosoftGraphContentType
}
export interface operation5450{
   get():MicrosoftGraphContentTypeCollectionResponse
}
export interface operation5451{
   get():MicrosoftGraphContentType
}
export interface operation5452{
   get():ODataCountResponse
}
export interface operation5453{
   get():MicrosoftGraphColumnLinkCollectionResponse
   post(requestBody:MicrosoftGraphColumnLink):MicrosoftGraphColumnLink
}
export interface operation5454{
   get():MicrosoftGraphColumnLink
   patch(requestBody:MicrosoftGraphColumnLink):"Success"
   delete():"Success"
}
export interface operation5455{
   get():ODataCountResponse
}
export interface operation5456{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
}
export interface operation5457{
   get():MicrosoftGraphColumnDefinition
}
export interface operation5458{
   get():ODataCountResponse
}
export interface operation5459{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation5460{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation5461{
   get():MicrosoftGraphColumnDefinition
}
export interface operation5462{
   get():ODataCountResponse
}
export interface operation5463{
   post(requestBody:{hubSiteUrls?: string[],propagateToExistingLists?: boolean,}):"Success"
}
export interface operation5464{
   post(requestBody:{sourceFile?: {driveId?: string,driveType?: string,id?: string,name?: string,path?: string,shareId?: string,sharepointIds?: MicrosoftGraphSharepointIds,siteId?: string,"@odata.type"?: string,},destinationFileName?: string,}):"Success"
}
export interface operation5465{
   get():{value?: boolean,}
}
export interface operation5466{
   post():"Success"
}
export interface operation5467{
   post():"Success"
}
export interface operation5468{
   get():ODataCountResponse
}
export interface operation5469{
   post(requestBody:{contentType?: string,}):{}
}
export interface operation5470{
   post(requestBody:{contentTypeId?: string,}):{}
}
export interface operation5471{
   get():{value?: MicrosoftGraphContentType[],}
}
export interface operation5472{
   get():MicrosoftGraphDrive
}
export interface operation5473{
   get():MicrosoftGraphDriveCollectionResponse
}
export interface operation5474{
   get():MicrosoftGraphDrive
}
export interface operation5475{
   get():ODataCountResponse
}
export interface operation5476{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
}
export interface operation5477{
   get():MicrosoftGraphColumnDefinition
}
export interface operation5478{
   get():ODataCountResponse
}
export interface operation5479{
   get():MicrosoftGraphBaseItemCollectionResponse
}
export interface operation5480{
   get():MicrosoftGraphBaseItem
}
export interface operation5481{
   get():ODataCountResponse
}
export interface operation5482{
   get():MicrosoftGraphListCollectionResponse
   post(requestBody:MicrosoftGraphList):MicrosoftGraphList
}
export interface operation5483{
   get():MicrosoftGraphList
   patch(requestBody:MicrosoftGraphList):"Success"
   delete():"Success"
}
export interface operation5484{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation5485{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation5486{
   get():MicrosoftGraphColumnDefinition
}
export interface operation5487{
   get():ODataCountResponse
}
export interface operation5488{
   get():MicrosoftGraphContentTypeCollectionResponse
   post(requestBody:MicrosoftGraphContentType):MicrosoftGraphContentType
}
export interface operation5489{
   get():MicrosoftGraphContentType
   patch(requestBody:MicrosoftGraphContentType):"Success"
   delete():"Success"
}
export interface operation5490{
   get():MicrosoftGraphContentType
}
export interface operation5491{
   get():MicrosoftGraphContentTypeCollectionResponse
}
export interface operation5492{
   get():MicrosoftGraphContentType
}
export interface operation5493{
   get():ODataCountResponse
}
export interface operation5494{
   get():MicrosoftGraphColumnLinkCollectionResponse
   post(requestBody:MicrosoftGraphColumnLink):MicrosoftGraphColumnLink
}
export interface operation5495{
   get():MicrosoftGraphColumnLink
   patch(requestBody:MicrosoftGraphColumnLink):"Success"
   delete():"Success"
}
export interface operation5496{
   get():ODataCountResponse
}
export interface operation5497{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
}
export interface operation5498{
   get():MicrosoftGraphColumnDefinition
}
export interface operation5499{
   get():ODataCountResponse
}
export interface operation5500{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation5501{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation5502{
   get():MicrosoftGraphColumnDefinition
}
export interface operation5503{
   get():ODataCountResponse
}
export interface operation5504{
   post(requestBody:{hubSiteUrls?: string[],propagateToExistingLists?: boolean,}):"Success"
}
export interface operation5505{
   post(requestBody:{sourceFile?: {driveId?: string,driveType?: string,id?: string,name?: string,path?: string,shareId?: string,sharepointIds?: MicrosoftGraphSharepointIds,siteId?: string,"@odata.type"?: string,},destinationFileName?: string,}):"Success"
}
export interface operation5506{
   get():{value?: boolean,}
}
export interface operation5507{
   post():"Success"
}
export interface operation5508{
   post():"Success"
}
export interface operation5509{
   get():ODataCountResponse
}
export interface operation5510{
   post(requestBody:{contentType?: string,}):{}
}
export interface operation5511{
   post(requestBody:{contentTypeId?: string,}):{}
}
export interface operation5512{
   get():{value?: MicrosoftGraphContentType[],}
}
export interface operation5513{
   get():MicrosoftGraphDrive
}
export interface operation5514{
   get():MicrosoftGraphListItemCollectionResponse
   post(requestBody:MicrosoftGraphListItem):MicrosoftGraphListItem
}
export interface operation5515{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation5516{
   get():MicrosoftGraphItemAnalytics
}
export interface operation5517{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation5518{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation5519{
   post():"Success"
}
export interface operation5520{
   get():ODataCountResponse
}
export interface operation5521{
   get():MicrosoftGraphDriveItem
}
export interface operation5522{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation5523{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation5524{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation5525{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation5526{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation5527{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation5528{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation5529{
   post():"Success"
}
export interface operation5530{
   get():ODataCountResponse
}
export interface operation5531{
   get():ODataCountResponse
}
export interface operation5532{
   get():MicrosoftGraphRichLongRunningOperationCollectionResponse
   post(requestBody:MicrosoftGraphRichLongRunningOperation):MicrosoftGraphRichLongRunningOperation
}
export interface operation5533{
   get():MicrosoftGraphRichLongRunningOperation
   patch(requestBody:MicrosoftGraphRichLongRunningOperation):"Success"
   delete():"Success"
}
export interface operation5534{
   get():ODataCountResponse
}
export interface operation5535{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation5536{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation5537{
   post():"Success"
}
export interface operation5538{
   get():ODataCountResponse
}
export interface operation5539{
   get():ODataCountResponse
}
export interface operation5540{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation5541{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation5542{
   get():{value?: MicrosoftGraphContentType[],}
}
export interface operation5543{
   get():{}
}
export interface operation5544{
   get():MicrosoftGraphOnenote
   patch(requestBody:MicrosoftGraphOnenote):"Success"
   delete():"Success"
}
export interface operation5545{
   get():MicrosoftGraphNotebookCollectionResponse
   post(requestBody:MicrosoftGraphNotebook):MicrosoftGraphNotebook
}
export interface operation5546{
   get():MicrosoftGraphNotebook
   patch(requestBody:MicrosoftGraphNotebook):"Success"
   delete():"Success"
}
export interface operation5547{
   post(requestBody:{groupId?: string,renameAs?: string,notebookFolder?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5548{
   get():MicrosoftGraphSectionGroupCollectionResponse
   post(requestBody:MicrosoftGraphSectionGroup):MicrosoftGraphSectionGroup
}
export interface operation5549{
   get():MicrosoftGraphSectionGroup
   patch(requestBody:MicrosoftGraphSectionGroup):"Success"
   delete():"Success"
}
export interface operation5550{
   get():MicrosoftGraphNotebook
}
export interface operation5551{
   get():MicrosoftGraphSectionGroup
}
export interface operation5552{
   get():MicrosoftGraphSectionGroupCollectionResponse
}
export interface operation5553{
   get():MicrosoftGraphSectionGroup
}
export interface operation5554{
   get():ODataCountResponse
}
export interface operation5555{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation5556{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation5557{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5558{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5559{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation5560{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation5561{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation5562{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5563{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation5564{
   get():{}
}
export interface operation5565{
   get():MicrosoftGraphNotebook
}
export interface operation5566{
   get():MicrosoftGraphOnenoteSection
}
export interface operation5567{
   get():ODataCountResponse
}
export interface operation5568{
   get():MicrosoftGraphNotebook
}
export interface operation5569{
   get():MicrosoftGraphSectionGroup
}
export interface operation5570{
   get():ODataCountResponse
}
export interface operation5571{
   get():ODataCountResponse
}
export interface operation5572{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation5573{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation5574{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5575{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5576{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation5577{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation5578{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation5579{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5580{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation5581{
   get():{}
}
export interface operation5582{
   get():MicrosoftGraphNotebook
}
export interface operation5583{
   get():MicrosoftGraphOnenoteSection
}
export interface operation5584{
   get():ODataCountResponse
}
export interface operation5585{
   get():MicrosoftGraphNotebook
}
export interface operation5586{
   get():MicrosoftGraphSectionGroup
}
export interface operation5587{
   get():ODataCountResponse
}
export interface operation5588{
   get():ODataCountResponse
}
export interface operation5589{
   post(requestBody:{webUrl?: string,}):{}
}
export interface operation5590{
   get():{value?: MicrosoftGraphRecentNotebook[],}
}
export interface operation5591{
   get():MicrosoftGraphOnenoteOperationCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteOperation):MicrosoftGraphOnenoteOperation
}
export interface operation5592{
   get():MicrosoftGraphOnenoteOperation
   patch(requestBody:MicrosoftGraphOnenoteOperation):"Success"
   delete():"Success"
}
export interface operation5593{
   get():ODataCountResponse
}
export interface operation5594{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation5595{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation5596{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation5597{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5598{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation5599{
   get():{}
}
export interface operation5600{
   get():MicrosoftGraphNotebook
}
export interface operation5601{
   get():MicrosoftGraphOnenoteSection
}
export interface operation5602{
   get():ODataCountResponse
}
export interface operation5603{
   get():MicrosoftGraphOnenoteResourceCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteResource):MicrosoftGraphOnenoteResource
}
export interface operation5604{
   get():MicrosoftGraphOnenoteResource
   patch(requestBody:MicrosoftGraphOnenoteResource):"Success"
   delete():"Success"
}
export interface operation5605{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation5606{
   get():ODataCountResponse
}
export interface operation5607{
   get():MicrosoftGraphSectionGroupCollectionResponse
   post(requestBody:MicrosoftGraphSectionGroup):MicrosoftGraphSectionGroup
}
export interface operation5608{
   get():MicrosoftGraphSectionGroup
   patch(requestBody:MicrosoftGraphSectionGroup):"Success"
   delete():"Success"
}
export interface operation5609{
   get():MicrosoftGraphNotebook
}
export interface operation5610{
   get():MicrosoftGraphSectionGroup
}
export interface operation5611{
   get():MicrosoftGraphSectionGroupCollectionResponse
}
export interface operation5612{
   get():MicrosoftGraphSectionGroup
}
export interface operation5613{
   get():ODataCountResponse
}
export interface operation5614{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation5615{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation5616{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5617{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5618{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation5619{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation5620{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation5621{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5622{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation5623{
   get():{}
}
export interface operation5624{
   get():MicrosoftGraphNotebook
}
export interface operation5625{
   get():MicrosoftGraphOnenoteSection
}
export interface operation5626{
   get():ODataCountResponse
}
export interface operation5627{
   get():MicrosoftGraphNotebook
}
export interface operation5628{
   get():MicrosoftGraphSectionGroup
}
export interface operation5629{
   get():ODataCountResponse
}
export interface operation5630{
   get():ODataCountResponse
}
export interface operation5631{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation5632{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation5633{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5634{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5635{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation5636{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation5637{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation5638{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation5639{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation5640{
   get():{}
}
export interface operation5641{
   get():MicrosoftGraphNotebook
}
export interface operation5642{
   get():MicrosoftGraphOnenoteSection
}
export interface operation5643{
   get():ODataCountResponse
}
export interface operation5644{
   get():MicrosoftGraphNotebook
}
export interface operation5645{
   get():MicrosoftGraphSectionGroup
}
export interface operation5646{
   get():ODataCountResponse
}
export interface operation5647{
   get():MicrosoftGraphRichLongRunningOperationCollectionResponse
   post(requestBody:MicrosoftGraphRichLongRunningOperation):MicrosoftGraphRichLongRunningOperation
}
export interface operation5648{
   get():MicrosoftGraphRichLongRunningOperation
   patch(requestBody:MicrosoftGraphRichLongRunningOperation):"Success"
   delete():"Success"
}
export interface operation5649{
   get():ODataCountResponse
}
export interface operation5650{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation5651{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation5652{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation5653{
   get():ODataCountResponse
}
export interface operation5654{
   get():MicrosoftGraphSiteCollectionResponse
}
export interface operation5655{
   get():MicrosoftGraphSite
}
export interface operation5656{
   get():ODataCountResponse
}
export interface operation5657{
   get():MicrosoftGraphTermStoreStore
   patch(requestBody:MicrosoftGraphTermStoreStore):"Success"
   delete():"Success"
}
export interface operation5658{
   get():MicrosoftGraphTermStoreGroupCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreGroup):MicrosoftGraphTermStoreGroup
}
export interface operation5659{
   get():MicrosoftGraphTermStoreGroup
   patch(requestBody:MicrosoftGraphTermStoreGroup):"Success"
   delete():"Success"
}
export interface operation5660{
   get():MicrosoftGraphTermStoreSetCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreSet):MicrosoftGraphTermStoreSet
}
export interface operation5661{
   get():MicrosoftGraphTermStoreSet
   patch(requestBody:MicrosoftGraphTermStoreSet):"Success"
   delete():"Success"
}
export interface operation5662{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5663{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5664{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5665{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5666{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5667{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5668{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5669{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5670{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5671{
   get():ODataCountResponse
}
export interface operation5672{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5673{
   get():ODataCountResponse
}
export interface operation5674{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5675{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5676{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5677{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5678{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5679{
   get():ODataCountResponse
}
export interface operation5680{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5681{
   get():ODataCountResponse
}
export interface operation5682{
   get():MicrosoftGraphTermStoreGroup
   patch(requestBody:MicrosoftGraphTermStoreGroup):"Success"
   delete():"Success"
}
export interface operation5683{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5684{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5685{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5686{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5687{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5688{
   get():ODataCountResponse
}
export interface operation5689{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5690{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5691{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5692{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5693{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5694{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5695{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5696{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5697{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5698{
   get():ODataCountResponse
}
export interface operation5699{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5700{
   get():ODataCountResponse
}
export interface operation5701{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5702{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5703{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5704{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5705{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5706{
   get():ODataCountResponse
}
export interface operation5707{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5708{
   get():ODataCountResponse
}
export interface operation5709{
   get():ODataCountResponse
}
export interface operation5710{
   get():ODataCountResponse
}
export interface operation5711{
   get():MicrosoftGraphTermStoreSetCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreSet):MicrosoftGraphTermStoreSet
}
export interface operation5712{
   get():MicrosoftGraphTermStoreSet
   patch(requestBody:MicrosoftGraphTermStoreSet):"Success"
   delete():"Success"
}
export interface operation5713{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5714{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5715{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5716{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5717{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5718{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5719{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5720{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5721{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5722{
   get():ODataCountResponse
}
export interface operation5723{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5724{
   get():ODataCountResponse
}
export interface operation5725{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5726{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5727{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5728{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5729{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5730{
   get():ODataCountResponse
}
export interface operation5731{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5732{
   get():ODataCountResponse
}
export interface operation5733{
   get():MicrosoftGraphTermStoreGroup
   patch(requestBody:MicrosoftGraphTermStoreGroup):"Success"
   delete():"Success"
}
export interface operation5734{
   get():MicrosoftGraphTermStoreSetCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreSet):MicrosoftGraphTermStoreSet
}
export interface operation5735{
   get():MicrosoftGraphTermStoreSet
   patch(requestBody:MicrosoftGraphTermStoreSet):"Success"
   delete():"Success"
}
export interface operation5736{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5737{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5738{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5739{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5740{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5741{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5742{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5743{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5744{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5745{
   get():ODataCountResponse
}
export interface operation5746{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5747{
   get():ODataCountResponse
}
export interface operation5748{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5749{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5750{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5751{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5752{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5753{
   get():ODataCountResponse
}
export interface operation5754{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5755{
   get():ODataCountResponse
}
export interface operation5756{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5757{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5758{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5759{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5760{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5761{
   get():ODataCountResponse
}
export interface operation5762{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5763{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5764{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5765{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5766{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5767{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5768{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5769{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5770{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5771{
   get():ODataCountResponse
}
export interface operation5772{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5773{
   get():ODataCountResponse
}
export interface operation5774{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5775{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5776{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5777{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5778{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5779{
   get():ODataCountResponse
}
export interface operation5780{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5781{
   get():ODataCountResponse
}
export interface operation5782{
   get():ODataCountResponse
}
export interface operation5783{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5784{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5785{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5786{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5787{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5788{
   get():ODataCountResponse
}
export interface operation5789{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5790{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5791{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5792{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5793{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5794{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5795{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5796{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5797{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5798{
   get():ODataCountResponse
}
export interface operation5799{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5800{
   get():ODataCountResponse
}
export interface operation5801{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5802{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5803{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5804{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5805{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5806{
   get():ODataCountResponse
}
export interface operation5807{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5808{
   get():ODataCountResponse
}
export interface operation5809{
   get():ODataCountResponse
}
export interface operation5810{
   get():MicrosoftGraphTermStoreStoreCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreStore):MicrosoftGraphTermStoreStore
}
export interface operation5811{
   get():MicrosoftGraphTermStoreStore
   patch(requestBody:MicrosoftGraphTermStoreStore):"Success"
   delete():"Success"
}
export interface operation5812{
   get():MicrosoftGraphTermStoreGroupCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreGroup):MicrosoftGraphTermStoreGroup
}
export interface operation5813{
   get():MicrosoftGraphTermStoreGroup
   patch(requestBody:MicrosoftGraphTermStoreGroup):"Success"
   delete():"Success"
}
export interface operation5814{
   get():MicrosoftGraphTermStoreSetCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreSet):MicrosoftGraphTermStoreSet
}
export interface operation5815{
   get():MicrosoftGraphTermStoreSet
   patch(requestBody:MicrosoftGraphTermStoreSet):"Success"
   delete():"Success"
}
export interface operation5816{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5817{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5818{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5819{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5820{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5821{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5822{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5823{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5824{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5825{
   get():ODataCountResponse
}
export interface operation5826{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5827{
   get():ODataCountResponse
}
export interface operation5828{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5829{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5830{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5831{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5832{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5833{
   get():ODataCountResponse
}
export interface operation5834{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5835{
   get():ODataCountResponse
}
export interface operation5836{
   get():MicrosoftGraphTermStoreGroup
   patch(requestBody:MicrosoftGraphTermStoreGroup):"Success"
   delete():"Success"
}
export interface operation5837{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5838{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5839{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5840{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5841{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5842{
   get():ODataCountResponse
}
export interface operation5843{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5844{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5845{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5846{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5847{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5848{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5849{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5850{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5851{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5852{
   get():ODataCountResponse
}
export interface operation5853{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5854{
   get():ODataCountResponse
}
export interface operation5855{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5856{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5857{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5858{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5859{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5860{
   get():ODataCountResponse
}
export interface operation5861{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5862{
   get():ODataCountResponse
}
export interface operation5863{
   get():ODataCountResponse
}
export interface operation5864{
   get():ODataCountResponse
}
export interface operation5865{
   get():MicrosoftGraphTermStoreSetCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreSet):MicrosoftGraphTermStoreSet
}
export interface operation5866{
   get():MicrosoftGraphTermStoreSet
   patch(requestBody:MicrosoftGraphTermStoreSet):"Success"
   delete():"Success"
}
export interface operation5867{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5868{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5869{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5870{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5871{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5872{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5873{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5874{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5875{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5876{
   get():ODataCountResponse
}
export interface operation5877{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5878{
   get():ODataCountResponse
}
export interface operation5879{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5880{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5881{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5882{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5883{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5884{
   get():ODataCountResponse
}
export interface operation5885{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5886{
   get():ODataCountResponse
}
export interface operation5887{
   get():MicrosoftGraphTermStoreGroup
   patch(requestBody:MicrosoftGraphTermStoreGroup):"Success"
   delete():"Success"
}
export interface operation5888{
   get():MicrosoftGraphTermStoreSetCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreSet):MicrosoftGraphTermStoreSet
}
export interface operation5889{
   get():MicrosoftGraphTermStoreSet
   patch(requestBody:MicrosoftGraphTermStoreSet):"Success"
   delete():"Success"
}
export interface operation5890{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5891{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5892{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5893{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5894{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5895{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5896{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5897{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5898{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5899{
   get():ODataCountResponse
}
export interface operation5900{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5901{
   get():ODataCountResponse
}
export interface operation5902{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5903{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5904{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5905{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5906{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5907{
   get():ODataCountResponse
}
export interface operation5908{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5909{
   get():ODataCountResponse
}
export interface operation5910{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5911{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5912{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5913{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5914{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5915{
   get():ODataCountResponse
}
export interface operation5916{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5917{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5918{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5919{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5920{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5921{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5922{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5923{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5924{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5925{
   get():ODataCountResponse
}
export interface operation5926{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5927{
   get():ODataCountResponse
}
export interface operation5928{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5929{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5930{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5931{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5932{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5933{
   get():ODataCountResponse
}
export interface operation5934{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5935{
   get():ODataCountResponse
}
export interface operation5936{
   get():ODataCountResponse
}
export interface operation5937{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5938{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5939{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5940{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5941{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5942{
   get():ODataCountResponse
}
export interface operation5943{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5944{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5945{
   get():MicrosoftGraphTermStoreTermCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreTerm):MicrosoftGraphTermStoreTerm
}
export interface operation5946{
   get():MicrosoftGraphTermStoreTerm
   patch(requestBody:MicrosoftGraphTermStoreTerm):"Success"
   delete():"Success"
}
export interface operation5947{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5948{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5949{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5950{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5951{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5952{
   get():ODataCountResponse
}
export interface operation5953{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5954{
   get():ODataCountResponse
}
export interface operation5955{
   get():MicrosoftGraphTermStoreRelationCollectionResponse
   post(requestBody:MicrosoftGraphTermStoreRelation):MicrosoftGraphTermStoreRelation
}
export interface operation5956{
   get():MicrosoftGraphTermStoreRelation
   patch(requestBody:MicrosoftGraphTermStoreRelation):"Success"
   delete():"Success"
}
export interface operation5957{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5958{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5959{
   get():MicrosoftGraphTermStoreTerm
}
export interface operation5960{
   get():ODataCountResponse
}
export interface operation5961{
   get():MicrosoftGraphTermStoreSet
}
export interface operation5962{
   get():ODataCountResponse
}
export interface operation5963{
   get():ODataCountResponse
}
export interface operation5964{
   get():ODataCountResponse
}
export interface operation5965{
   get():ODataCountResponse
}
export interface operation5966{
   post(requestBody:{value?: MicrosoftGraphSite[],}):{value?: MicrosoftGraphSite[],}
}
export interface operation5967{
   post(requestBody:{value?: MicrosoftGraphSite[],}):{value?: MicrosoftGraphSite[],}
}
export interface operation5968{
   get():MicrosoftGraphSolutionsRoot
   patch(requestBody:MicrosoftGraphSolutionsRoot):"Success"
}
export interface operation5969{
   get():MicrosoftGraphBookingBusinessCollectionResponse
   post(requestBody:MicrosoftGraphBookingBusiness):MicrosoftGraphBookingBusiness
}
export interface operation5970{
   get():MicrosoftGraphBookingBusiness
   patch(requestBody:MicrosoftGraphBookingBusiness):"Success"
   delete():"Success"
}
export interface operation5971{
   get():MicrosoftGraphBookingAppointmentCollectionResponse
   post(requestBody:MicrosoftGraphBookingAppointment):MicrosoftGraphBookingAppointment
}
export interface operation5972{
   get():MicrosoftGraphBookingAppointment
   patch(requestBody:MicrosoftGraphBookingAppointment):"Success"
   delete():"Success"
}
export interface operation5973{
   post(requestBody:{cancellationMessage?: string,}):"Success"
}
export interface operation5974{
   get():ODataCountResponse
}
export interface operation5975{
   get():MicrosoftGraphBookingAppointmentCollectionResponse
   post(requestBody:MicrosoftGraphBookingAppointment):MicrosoftGraphBookingAppointment
}
export interface operation5976{
   get():MicrosoftGraphBookingAppointment
   patch(requestBody:MicrosoftGraphBookingAppointment):"Success"
   delete():"Success"
}
export interface operation5977{
   post(requestBody:{cancellationMessage?: string,}):"Success"
}
export interface operation5978{
   get():ODataCountResponse
}
export interface operation5979{
   get():MicrosoftGraphBookingCustomerBaseCollectionResponse
   post(requestBody:MicrosoftGraphBookingCustomerBase):MicrosoftGraphBookingCustomerBase
}
export interface operation5980{
   get():MicrosoftGraphBookingCustomerBase
   patch(requestBody:MicrosoftGraphBookingCustomerBase):"Success"
   delete():"Success"
}
export interface operation5981{
   get():ODataCountResponse
}
export interface operation5982{
   get():MicrosoftGraphBookingCustomQuestionCollectionResponse
   post(requestBody:MicrosoftGraphBookingCustomQuestion):MicrosoftGraphBookingCustomQuestion
}
export interface operation5983{
   get():MicrosoftGraphBookingCustomQuestion
   patch(requestBody:MicrosoftGraphBookingCustomQuestion):"Success"
   delete():"Success"
}
export interface operation5984{
   get():ODataCountResponse
}
export interface operation5985{
   post(requestBody:{staffIds?: string[],startDateTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},endDateTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):{value?: MicrosoftGraphStaffAvailabilityItem[],}
}
export interface operation5986{
   post():"Success"
}
export interface operation5987{
   post():"Success"
}
export interface operation5988{
   get():MicrosoftGraphBookingServiceCollectionResponse
   post(requestBody:MicrosoftGraphBookingService):MicrosoftGraphBookingService
}
export interface operation5989{
   get():MicrosoftGraphBookingService
   patch(requestBody:MicrosoftGraphBookingService):"Success"
   delete():"Success"
}
export interface operation5990{
   get():ODataCountResponse
}
export interface operation5991{
   get():MicrosoftGraphBookingStaffMemberBaseCollectionResponse
   post(requestBody:MicrosoftGraphBookingStaffMemberBase):MicrosoftGraphBookingStaffMemberBase
}
export interface operation5992{
   get():MicrosoftGraphBookingStaffMemberBase
   patch(requestBody:MicrosoftGraphBookingStaffMemberBase):"Success"
   delete():"Success"
}
export interface operation5993{
   get():ODataCountResponse
}
export interface operation5994{
   get():ODataCountResponse
}
export interface operation5995{
   get():MicrosoftGraphBookingCurrencyCollectionResponse
   post(requestBody:MicrosoftGraphBookingCurrency):MicrosoftGraphBookingCurrency
}
export interface operation5996{
   get():MicrosoftGraphBookingCurrency
   patch(requestBody:MicrosoftGraphBookingCurrency):"Success"
   delete():"Success"
}
export interface operation5997{
   get():ODataCountResponse
}
export interface operation5998{
   get():MicrosoftGraphSubscribedSkuCollectionResponse
   post(requestBody:MicrosoftGraphSubscribedSku):MicrosoftGraphSubscribedSku
}
export interface operation5999{
   get():MicrosoftGraphSubscribedSku
   patch(requestBody:MicrosoftGraphSubscribedSku):"Success"
   delete():"Success"
}
export interface operation6000{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation6001{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation6002{
   post():"Success"
}
export interface operation6003{
   get():MicrosoftGraphTeamCollectionResponse
   post(requestBody:MicrosoftGraphTeam):MicrosoftGraphTeam
}
export interface operation6004{
   get():MicrosoftGraphTeam
   patch(requestBody:MicrosoftGraphTeam):"Success"
   delete():"Success"
}
export interface operation6005{
   get():MicrosoftGraphChannelCollectionResponse
}
export interface operation6006{
   get():MicrosoftGraphChannel
}
export interface operation6007{
   get():ODataCountResponse
}
export interface operation6008{
   get():MicrosoftGraphChannelCollectionResponse
   post(requestBody:MicrosoftGraphChannel):MicrosoftGraphChannel
}
export interface operation6009{
   get():MicrosoftGraphChannel
   patch(requestBody:MicrosoftGraphChannel):"Success"
   delete():"Success"
}
export interface operation6010{
   get():MicrosoftGraphDriveItem
}
export interface operation6011{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6012{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation6013{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation6014{
   get():ODataCountResponse
}
export interface operation6015{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation6016{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation6017{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation6018{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation6019{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation6020{
   get():ODataCountResponse
}
export interface operation6021{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation6022{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation6023{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation6024{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation6025{
   get():ODataCountResponse
}
export interface operation6026{
   get():ODataCountResponse
}
export interface operation6027{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation6028{
   get():ODataCountResponse
}
export interface operation6029{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation6030{
   post():"Success"
}
export interface operation6031{
   get():{value?: boolean,}
}
export interface operation6032{
   post():{}
}
export interface operation6033{
   post():"Success"
}
export interface operation6034{
   get():MicrosoftGraphSharedWithChannelTeamInfoCollectionResponse
   post(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):MicrosoftGraphSharedWithChannelTeamInfo
}
export interface operation6035{
   get():MicrosoftGraphSharedWithChannelTeamInfo
   patch(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):"Success"
   delete():"Success"
}
export interface operation6036{
   get():MicrosoftGraphConversationMemberCollectionResponse
}
export interface operation6037{
   get():MicrosoftGraphConversationMember
}
export interface operation6038{
   get():ODataCountResponse
}
export interface operation6039{
   get():ODataCountResponse
}
export interface operation6040{
   get():MicrosoftGraphTeamsTabCollectionResponse
   post(requestBody:MicrosoftGraphTeamsTab):MicrosoftGraphTeamsTab
}
export interface operation6041{
   get():MicrosoftGraphTeamsTab
   patch(requestBody:MicrosoftGraphTeamsTab):"Success"
   delete():"Success"
}
export interface operation6042{
   get():MicrosoftGraphTeamsApp
}
export interface operation6043{
   get():ODataCountResponse
}
export interface operation6044{
   get():ODataCountResponse
}
export interface operation6045{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation6046{
   get():MicrosoftGraphGroup
}
export interface operation6047{
   get():MicrosoftGraphChannelCollectionResponse
}
export interface operation6048{
   get():MicrosoftGraphChannel
}
export interface operation6049{
   get():ODataCountResponse
}
export interface operation6050{
   get():MicrosoftGraphTeamsAppInstallationCollectionResponse
   post(requestBody:MicrosoftGraphTeamsAppInstallation):MicrosoftGraphTeamsAppInstallation
}
export interface operation6051{
   get():MicrosoftGraphTeamsAppInstallation
   patch(requestBody:MicrosoftGraphTeamsAppInstallation):"Success"
   delete():"Success"
}
export interface operation6052{
   post():"Success"
}
export interface operation6053{
   get():MicrosoftGraphTeamsApp
}
export interface operation6054{
   get():MicrosoftGraphTeamsAppDefinition
}
export interface operation6055{
   get():ODataCountResponse
}
export interface operation6056{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation6057{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation6058{
   get():ODataCountResponse
}
export interface operation6059{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation6060{
   post(requestBody:{shouldSetSpoSiteReadOnlyForMembers?: boolean,}):"Success"
}
export interface operation6061{
   post(requestBody:{displayName?: string,description?: string,mailNickname?: string,classification?: string,visibility?: string,partsToClone?: string,}):"Success"
}
export interface operation6062{
   post():"Success"
}
export interface operation6063{
   post(requestBody:{topic?: MicrosoftGraphTeamworkActivityTopic,activityType?: string,chainId?: number,previewText?: MicrosoftGraphItemBody,templateParameters?: MicrosoftGraphKeyValuePair[],recipient?: MicrosoftGraphTeamworkNotificationRecipient,}):"Success"
}
export interface operation6064{
   post():"Success"
}
export interface operation6065{
   get():MicrosoftGraphTeamsAsyncOperationCollectionResponse
   post(requestBody:MicrosoftGraphTeamsAsyncOperation):MicrosoftGraphTeamsAsyncOperation
}
export interface operation6066{
   get():MicrosoftGraphTeamsAsyncOperation
   patch(requestBody:MicrosoftGraphTeamsAsyncOperation):"Success"
   delete():"Success"
}
export interface operation6067{
   get():ODataCountResponse
}
export interface operation6068{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation6069{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6070{
   get():MicrosoftGraphChannel
   patch(requestBody:MicrosoftGraphChannel):"Success"
   delete():"Success"
}
export interface operation6071{
   get():MicrosoftGraphDriveItem
}
export interface operation6072{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6073{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation6074{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation6075{
   get():ODataCountResponse
}
export interface operation6076{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation6077{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation6078{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation6079{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation6080{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation6081{
   get():ODataCountResponse
}
export interface operation6082{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation6083{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation6084{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation6085{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation6086{
   get():ODataCountResponse
}
export interface operation6087{
   get():ODataCountResponse
}
export interface operation6088{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation6089{
   get():ODataCountResponse
}
export interface operation6090{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation6091{
   post():"Success"
}
export interface operation6092{
   get():{value?: boolean,}
}
export interface operation6093{
   post():{}
}
export interface operation6094{
   post():"Success"
}
export interface operation6095{
   get():MicrosoftGraphSharedWithChannelTeamInfoCollectionResponse
   post(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):MicrosoftGraphSharedWithChannelTeamInfo
}
export interface operation6096{
   get():MicrosoftGraphSharedWithChannelTeamInfo
   patch(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):"Success"
   delete():"Success"
}
export interface operation6097{
   get():MicrosoftGraphConversationMemberCollectionResponse
}
export interface operation6098{
   get():MicrosoftGraphConversationMember
}
export interface operation6099{
   get():ODataCountResponse
}
export interface operation6100{
   get():ODataCountResponse
}
export interface operation6101{
   get():MicrosoftGraphTeamsTabCollectionResponse
   post(requestBody:MicrosoftGraphTeamsTab):MicrosoftGraphTeamsTab
}
export interface operation6102{
   get():MicrosoftGraphTeamsTab
   patch(requestBody:MicrosoftGraphTeamsTab):"Success"
   delete():"Success"
}
export interface operation6103{
   get():MicrosoftGraphTeamsApp
}
export interface operation6104{
   get():ODataCountResponse
}
export interface operation6105{
   get():MicrosoftGraphSchedule
   patch(requestBody:MicrosoftGraphSchedule):"Success"
   delete():"Success"
}
export interface operation6106{
   post(requestBody:{notifyTeam?: boolean,startDateTime?: string,endDateTime?: string,}):"Success"
}
export interface operation6107{
   get():MicrosoftGraphOfferShiftRequestCollectionResponse
   post(requestBody:MicrosoftGraphOfferShiftRequest):MicrosoftGraphOfferShiftRequest
}
export interface operation6108{
   get():MicrosoftGraphOfferShiftRequest
   patch(requestBody:MicrosoftGraphOfferShiftRequest):"Success"
   delete():"Success"
}
export interface operation6109{
   get():ODataCountResponse
}
export interface operation6110{
   get():MicrosoftGraphOpenShiftChangeRequestCollectionResponse
   post(requestBody:MicrosoftGraphOpenShiftChangeRequest):MicrosoftGraphOpenShiftChangeRequest
}
export interface operation6111{
   get():MicrosoftGraphOpenShiftChangeRequest
   patch(requestBody:MicrosoftGraphOpenShiftChangeRequest):"Success"
   delete():"Success"
}
export interface operation6112{
   get():ODataCountResponse
}
export interface operation6113{
   get():MicrosoftGraphOpenShiftCollectionResponse
   post(requestBody:MicrosoftGraphOpenShift):MicrosoftGraphOpenShift
}
export interface operation6114{
   get():MicrosoftGraphOpenShift
   patch(requestBody:MicrosoftGraphOpenShift):"Success"
   delete():"Success"
}
export interface operation6115{
   get():ODataCountResponse
}
export interface operation6116{
   get():MicrosoftGraphSchedulingGroupCollectionResponse
   post(requestBody:MicrosoftGraphSchedulingGroup):MicrosoftGraphSchedulingGroup
}
export interface operation6117{
   get():MicrosoftGraphSchedulingGroup
   patch(requestBody:MicrosoftGraphSchedulingGroup):"Success"
   delete():"Success"
}
export interface operation6118{
   get():ODataCountResponse
}
export interface operation6119{
   get():MicrosoftGraphShiftCollectionResponse
   post(requestBody:MicrosoftGraphShift):MicrosoftGraphShift
}
export interface operation6120{
   get():MicrosoftGraphShift
   patch(requestBody:MicrosoftGraphShift):"Success"
   delete():"Success"
}
export interface operation6121{
   get():ODataCountResponse
}
export interface operation6122{
   get():MicrosoftGraphSwapShiftsChangeRequestCollectionResponse
   post(requestBody:MicrosoftGraphSwapShiftsChangeRequest):MicrosoftGraphSwapShiftsChangeRequest
}
export interface operation6123{
   get():MicrosoftGraphSwapShiftsChangeRequest
   patch(requestBody:MicrosoftGraphSwapShiftsChangeRequest):"Success"
   delete():"Success"
}
export interface operation6124{
   get():ODataCountResponse
}
export interface operation6125{
   get():MicrosoftGraphTimeOffReasonCollectionResponse
   post(requestBody:MicrosoftGraphTimeOffReason):MicrosoftGraphTimeOffReason
}
export interface operation6126{
   get():MicrosoftGraphTimeOffReason
   patch(requestBody:MicrosoftGraphTimeOffReason):"Success"
   delete():"Success"
}
export interface operation6127{
   get():ODataCountResponse
}
export interface operation6128{
   get():MicrosoftGraphTimeOffRequestCollectionResponse
   post(requestBody:MicrosoftGraphTimeOffRequest):MicrosoftGraphTimeOffRequest
}
export interface operation6129{
   get():MicrosoftGraphTimeOffRequest
   patch(requestBody:MicrosoftGraphTimeOffRequest):"Success"
   delete():"Success"
}
export interface operation6130{
   get():ODataCountResponse
}
export interface operation6131{
   get():MicrosoftGraphTimeOffCollectionResponse
   post(requestBody:MicrosoftGraphTimeOff):MicrosoftGraphTimeOff
}
export interface operation6132{
   get():MicrosoftGraphTimeOff
   patch(requestBody:MicrosoftGraphTimeOff):"Success"
   delete():"Success"
}
export interface operation6133{
   get():ODataCountResponse
}
export interface operation6134{
   get():MicrosoftGraphTeamsTemplate
}
export interface operation6135{
   get():ODataCountResponse
}
export interface operation6136{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation6137{
   get():MicrosoftGraphTeamsTemplateCollectionResponse
   post(requestBody:MicrosoftGraphTeamsTemplate):MicrosoftGraphTeamsTemplate
}
export interface operation6138{
   get():MicrosoftGraphTeamsTemplate
   patch(requestBody:MicrosoftGraphTeamsTemplate):"Success"
   delete():"Success"
}
export interface operation6139{
   get():ODataCountResponse
}
export interface operation6140{
   get():MicrosoftGraphTeamwork
   patch(requestBody:MicrosoftGraphTeamwork):"Success"
}
export interface operation6141{
   get():MicrosoftGraphWorkforceIntegrationCollectionResponse
   post(requestBody:MicrosoftGraphWorkforceIntegration):MicrosoftGraphWorkforceIntegration
}
export interface operation6142{
   get():MicrosoftGraphWorkforceIntegration
   patch(requestBody:MicrosoftGraphWorkforceIntegration):"Success"
   delete():"Success"
}
export interface operation6143{
   get():ODataCountResponse
}
export interface operation6144{
   get():MicrosoftGraphUserCollectionResponse
   post(requestBody:MicrosoftGraphUser):MicrosoftGraphUser
}
export interface operation6145{
   get():MicrosoftGraphUser
   patch(requestBody:MicrosoftGraphUser):"Success"
   delete():"Success"
}
export interface operation6146{
   get():MicrosoftGraphUserActivityCollectionResponse
   post(requestBody:MicrosoftGraphUserActivity):MicrosoftGraphUserActivity
}
export interface operation6147{
   get():MicrosoftGraphUserActivity
   patch(requestBody:MicrosoftGraphUserActivity):"Success"
   delete():"Success"
}
export interface operation6148{
   get():MicrosoftGraphActivityHistoryItemCollectionResponse
   post(requestBody:MicrosoftGraphActivityHistoryItem):MicrosoftGraphActivityHistoryItem
}
export interface operation6149{
   get():MicrosoftGraphActivityHistoryItem
   patch(requestBody:MicrosoftGraphActivityHistoryItem):"Success"
   delete():"Success"
}
export interface operation6150{
   get():MicrosoftGraphUserActivity
}
export interface operation6151{
   get():ODataCountResponse
}
export interface operation6152{
   get():ODataCountResponse
}
export interface operation6153{
   get():{value?: MicrosoftGraphUserActivity[],}
}
export interface operation6154{
   get():MicrosoftGraphAgreementAcceptanceCollectionResponse
}
export interface operation6155{
   get():MicrosoftGraphAgreementAcceptance
}
export interface operation6156{
   get():ODataCountResponse
}
export interface operation6157{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
   post(requestBody:MicrosoftGraphAppRoleAssignment):MicrosoftGraphAppRoleAssignment
}
export interface operation6158{
   get():MicrosoftGraphAppRoleAssignment
   patch(requestBody:MicrosoftGraphAppRoleAssignment):"Success"
   delete():"Success"
}
export interface operation6159{
   get():ODataCountResponse
}
export interface operation6160{
   get():MicrosoftGraphAuthentication
   patch(requestBody:MicrosoftGraphAuthentication):"Success"
   delete():"Success"
}
export interface operation6161{
   get():MicrosoftGraphEmailAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphEmailAuthenticationMethod):MicrosoftGraphEmailAuthenticationMethod
}
export interface operation6162{
   get():MicrosoftGraphEmailAuthenticationMethod
   patch(requestBody:MicrosoftGraphEmailAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation6163{
   get():ODataCountResponse
}
export interface operation6164{
   get():MicrosoftGraphFido2AuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphFido2AuthenticationMethod):MicrosoftGraphFido2AuthenticationMethod
}
export interface operation6165{
   get():MicrosoftGraphFido2AuthenticationMethod
   patch(requestBody:MicrosoftGraphFido2AuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation6166{
   get():ODataCountResponse
}
export interface operation6167{
   get():MicrosoftGraphAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphAuthenticationMethod):MicrosoftGraphAuthenticationMethod
}
export interface operation6168{
   get():MicrosoftGraphAuthenticationMethod
   patch(requestBody:MicrosoftGraphAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation6169{
   post(requestBody:{newPassword?: string,requireChangeOnNextSignIn?: boolean,}):{}
}
export interface operation6170{
   get():ODataCountResponse
}
export interface operation6171{
   get():MicrosoftGraphMicrosoftAuthenticatorAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod):MicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod
}
export interface operation6172{
   get():MicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod
   patch(requestBody:MicrosoftGraphMicrosoftAuthenticatorAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation6173{
   get():MicrosoftGraphDevice
   patch(requestBody:MicrosoftGraphDevice):"Success"
   delete():"Success"
}
export interface operation6174{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6175{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6176{
   get():ODataCountResponse
}
export interface operation6177{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation6178{
   get():MicrosoftGraphDirectoryObject
}
export interface operation6179{
   get():MicrosoftGraphApplication
}
export interface operation6180{
   get():MicrosoftGraphDevice
}
export interface operation6181{
   get():MicrosoftGraphGroup
}
export interface operation6182{
   get():MicrosoftGraphOrgContact
}
export interface operation6183{
   get():MicrosoftGraphServicePrincipal
}
export interface operation6184{
   get():MicrosoftGraphUser
}
export interface operation6185{
   get():ODataCountResponse
}
export interface operation6186{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation6187{
   get():ODataCountResponse
}
export interface operation6188{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation6189{
   get():ODataCountResponse
}
export interface operation6190{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation6191{
   get():ODataCountResponse
}
export interface operation6192{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation6193{
   get():ODataCountResponse
}
export interface operation6194{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation6195{
   get():ODataCountResponse
}
export interface operation6196{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation6197{
   get():ODataCountResponse
}
export interface operation6198{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation6199{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation6200{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation6201{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation6202{
   post():{}
}
export interface operation6203{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation6204{
   delete():"Success"
}
export interface operation6205{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation6206{
   get():MicrosoftGraphEndpoint
}
export interface operation6207{
   get():MicrosoftGraphServicePrincipal
}
export interface operation6208{
   get():MicrosoftGraphUser
}
export interface operation6209{
   get():ODataCountResponse
}
export interface operation6210{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation6211{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation6212{
   get():ODataCountResponse
}
export interface operation6213{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation6214{
   get():ODataCountResponse
}
export interface operation6215{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation6216{
   get():ODataCountResponse
}
export interface operation6217{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation6218{
   get():ODataCountResponse
}
export interface operation6219{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation6220{
   get():MicrosoftGraphDirectoryObject
}
export interface operation6221{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation6222{
   get():MicrosoftGraphEndpoint
}
export interface operation6223{
   get():MicrosoftGraphServicePrincipal
}
export interface operation6224{
   get():MicrosoftGraphUser
}
export interface operation6225{
   get():ODataCountResponse
}
export interface operation6226{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation6227{
   get():ODataCountResponse
}
export interface operation6228{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation6229{
   get():ODataCountResponse
}
export interface operation6230{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation6231{
   get():ODataCountResponse
}
export interface operation6232{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation6233{
   get():ODataCountResponse
}
export interface operation6234{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation6235{
   get():MicrosoftGraphDirectoryObject
}
export interface operation6236{
   get():MicrosoftGraphApplication
}
export interface operation6237{
   get():MicrosoftGraphDevice
}
export interface operation6238{
   get():MicrosoftGraphGroup
}
export interface operation6239{
   get():MicrosoftGraphOrgContact
}
export interface operation6240{
   get():MicrosoftGraphServicePrincipal
}
export interface operation6241{
   get():MicrosoftGraphUser
}
export interface operation6242{
   get():ODataCountResponse
}
export interface operation6243{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation6244{
   get():ODataCountResponse
}
export interface operation6245{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation6246{
   get():ODataCountResponse
}
export interface operation6247{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation6248{
   get():ODataCountResponse
}
export interface operation6249{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation6250{
   get():ODataCountResponse
}
export interface operation6251{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation6252{
   get():ODataCountResponse
}
export interface operation6253{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation6254{
   get():ODataCountResponse
}
export interface operation6255{
   get():ODataCountResponse
}
export interface operation6256{
   get():MicrosoftGraphLongRunningOperationCollectionResponse
   post(requestBody:MicrosoftGraphLongRunningOperation):MicrosoftGraphLongRunningOperation
}
export interface operation6257{
   get():MicrosoftGraphLongRunningOperation
   patch(requestBody:MicrosoftGraphLongRunningOperation):"Success"
   delete():"Success"
}
export interface operation6258{
   get():ODataCountResponse
}
export interface operation6259{
   get():MicrosoftGraphPasswordAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphPasswordAuthenticationMethod):MicrosoftGraphPasswordAuthenticationMethod
}
export interface operation6260{
   get():MicrosoftGraphPasswordAuthenticationMethod
   patch(requestBody:MicrosoftGraphPasswordAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation6261{
   get():ODataCountResponse
}
export interface operation6262{
   get():MicrosoftGraphPhoneAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphPhoneAuthenticationMethod):MicrosoftGraphPhoneAuthenticationMethod
}
export interface operation6263{
   get():MicrosoftGraphPhoneAuthenticationMethod
   patch(requestBody:MicrosoftGraphPhoneAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation6264{
   post():"Success"
}
export interface operation6265{
   post():"Success"
}
export interface operation6266{
   get():ODataCountResponse
}
export interface operation6267{
   get():MicrosoftGraphSoftwareOathAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphSoftwareOathAuthenticationMethod):MicrosoftGraphSoftwareOathAuthenticationMethod
}
export interface operation6268{
   get():MicrosoftGraphSoftwareOathAuthenticationMethod
   patch(requestBody:MicrosoftGraphSoftwareOathAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation6269{
   get():ODataCountResponse
}
export interface operation6270{
   get():MicrosoftGraphTemporaryAccessPassAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphTemporaryAccessPassAuthenticationMethod):MicrosoftGraphTemporaryAccessPassAuthenticationMethod
}
export interface operation6271{
   get():MicrosoftGraphTemporaryAccessPassAuthenticationMethod
   patch(requestBody:MicrosoftGraphTemporaryAccessPassAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation6272{
   get():ODataCountResponse
}
export interface operation6273{
   get():MicrosoftGraphWindowsHelloForBusinessAuthenticationMethodCollectionResponse
   post(requestBody:MicrosoftGraphWindowsHelloForBusinessAuthenticationMethod):MicrosoftGraphWindowsHelloForBusinessAuthenticationMethod
}
export interface operation6274{
   get():MicrosoftGraphWindowsHelloForBusinessAuthenticationMethod
   patch(requestBody:MicrosoftGraphWindowsHelloForBusinessAuthenticationMethod):"Success"
   delete():"Success"
}
export interface operation6275{
   get():MicrosoftGraphDevice
   patch(requestBody:MicrosoftGraphDevice):"Success"
   delete():"Success"
}
export interface operation6276{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6277{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6278{
   get():ODataCountResponse
}
export interface operation6279{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation6280{
   get():MicrosoftGraphDirectoryObject
}
export interface operation6281{
   get():MicrosoftGraphApplication
}
export interface operation6282{
   get():MicrosoftGraphDevice
}
export interface operation6283{
   get():MicrosoftGraphGroup
}
export interface operation6284{
   get():MicrosoftGraphOrgContact
}
export interface operation6285{
   get():MicrosoftGraphServicePrincipal
}
export interface operation6286{
   get():MicrosoftGraphUser
}
export interface operation6287{
   get():ODataCountResponse
}
export interface operation6288{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation6289{
   get():ODataCountResponse
}
export interface operation6290{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation6291{
   get():ODataCountResponse
}
export interface operation6292{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation6293{
   get():ODataCountResponse
}
export interface operation6294{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation6295{
   get():ODataCountResponse
}
export interface operation6296{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation6297{
   get():ODataCountResponse
}
export interface operation6298{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation6299{
   get():ODataCountResponse
}
export interface operation6300{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation6301{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation6302{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation6303{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation6304{
   post():{}
}
export interface operation6305{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation6306{
   delete():"Success"
}
export interface operation6307{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation6308{
   get():MicrosoftGraphEndpoint
}
export interface operation6309{
   get():MicrosoftGraphServicePrincipal
}
export interface operation6310{
   get():MicrosoftGraphUser
}
export interface operation6311{
   get():ODataCountResponse
}
export interface operation6312{
   get():StringCollectionResponse
   post(requestBody:ReferenceCreate):"Success"
}
export interface operation6313{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation6314{
   get():ODataCountResponse
}
export interface operation6315{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation6316{
   get():ODataCountResponse
}
export interface operation6317{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation6318{
   get():ODataCountResponse
}
export interface operation6319{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation6320{
   get():ODataCountResponse
}
export interface operation6321{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation6322{
   get():MicrosoftGraphDirectoryObject
}
export interface operation6323{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation6324{
   get():MicrosoftGraphEndpoint
}
export interface operation6325{
   get():MicrosoftGraphServicePrincipal
}
export interface operation6326{
   get():MicrosoftGraphUser
}
export interface operation6327{
   get():ODataCountResponse
}
export interface operation6328{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation6329{
   get():ODataCountResponse
}
export interface operation6330{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation6331{
   get():ODataCountResponse
}
export interface operation6332{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation6333{
   get():ODataCountResponse
}
export interface operation6334{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation6335{
   get():ODataCountResponse
}
export interface operation6336{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation6337{
   get():MicrosoftGraphDirectoryObject
}
export interface operation6338{
   get():MicrosoftGraphApplication
}
export interface operation6339{
   get():MicrosoftGraphDevice
}
export interface operation6340{
   get():MicrosoftGraphGroup
}
export interface operation6341{
   get():MicrosoftGraphOrgContact
}
export interface operation6342{
   get():MicrosoftGraphServicePrincipal
}
export interface operation6343{
   get():MicrosoftGraphUser
}
export interface operation6344{
   get():ODataCountResponse
}
export interface operation6345{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation6346{
   get():ODataCountResponse
}
export interface operation6347{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation6348{
   get():ODataCountResponse
}
export interface operation6349{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation6350{
   get():ODataCountResponse
}
export interface operation6351{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation6352{
   get():ODataCountResponse
}
export interface operation6353{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation6354{
   get():ODataCountResponse
}
export interface operation6355{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation6356{
   get():ODataCountResponse
}
export interface operation6357{
   get():ODataCountResponse
}
export interface operation6358{
   get():MicrosoftGraphCalendar
   patch(requestBody:MicrosoftGraphCalendar):"Success"
   delete():"Success"
}
export interface operation6359{
   get():MicrosoftGraphCalendarPermissionCollectionResponse
   post(requestBody:MicrosoftGraphCalendarPermission):MicrosoftGraphCalendarPermission
}
export interface operation6360{
   get():MicrosoftGraphCalendarPermission
   patch(requestBody:MicrosoftGraphCalendarPermission):"Success"
   delete():"Success"
}
export interface operation6361{
   get():ODataCountResponse
}
export interface operation6362{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6363{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6364{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6365{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6366{
   get():ODataCountResponse
}
export interface operation6367{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6368{
   get():MicrosoftGraphCalendar
}
export interface operation6369{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6370{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6371{
   get():ODataCountResponse
}
export interface operation6372{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6373{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6374{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6375{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6376{
   get():ODataCountResponse
}
export interface operation6377{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6378{
   get():MicrosoftGraphCalendar
}
export interface operation6379{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6380{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6381{
   get():ODataCountResponse
}
export interface operation6382{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6383{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6384{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6385{
   post():"Success"
}
export interface operation6386{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6387{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6388{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6389{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6390{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6391{
   get():ODataCountResponse
}
export interface operation6392{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6393{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6394{
   get():ODataCountResponse
}
export interface operation6395{
   get():ODataCountResponse
}
export interface operation6396{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6397{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6398{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6399{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6400{
   post():"Success"
}
export interface operation6401{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6402{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6403{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6404{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6405{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6406{
   get():ODataCountResponse
}
export interface operation6407{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6408{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6409{
   get():ODataCountResponse
}
export interface operation6410{
   get():ODataCountResponse
}
export interface operation6411{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6412{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6413{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6414{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6415{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6416{
   get():ODataCountResponse
}
export interface operation6417{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6418{
   get():MicrosoftGraphCalendar
}
export interface operation6419{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6420{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6421{
   get():ODataCountResponse
}
export interface operation6422{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6423{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6424{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6425{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6426{
   get():ODataCountResponse
}
export interface operation6427{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6428{
   get():MicrosoftGraphCalendar
}
export interface operation6429{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6430{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6431{
   get():ODataCountResponse
}
export interface operation6432{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6433{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6434{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6435{
   post():"Success"
}
export interface operation6436{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6437{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6438{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6439{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6440{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6441{
   get():ODataCountResponse
}
export interface operation6442{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6443{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6444{
   get():ODataCountResponse
}
export interface operation6445{
   get():ODataCountResponse
}
export interface operation6446{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6447{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6448{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6449{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6450{
   post():"Success"
}
export interface operation6451{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6452{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6453{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6454{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6455{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6456{
   get():ODataCountResponse
}
export interface operation6457{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6458{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6459{
   get():ODataCountResponse
}
export interface operation6460{
   get():ODataCountResponse
}
export interface operation6461{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6462{
   get():{value?: string[],}
}
export interface operation6463{
   post(requestBody:{Schedules?: string[],EndTime?: MicrosoftGraphDateTimeTimeZone,StartTime?: MicrosoftGraphDateTimeTimeZone,AvailabilityViewInterval?: number,}):{value?: MicrosoftGraphScheduleInformation[],}
}
export interface operation6464{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6465{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6466{
   get():ODataCountResponse
}
export interface operation6467{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6468{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6469{
   get():ODataCountResponse
}
export interface operation6470{
   get():MicrosoftGraphCalendarGroupCollectionResponse
   post(requestBody:MicrosoftGraphCalendarGroup):MicrosoftGraphCalendarGroup
}
export interface operation6471{
   get():MicrosoftGraphCalendarGroup
   patch(requestBody:MicrosoftGraphCalendarGroup):"Success"
   delete():"Success"
}
export interface operation6472{
   get():MicrosoftGraphCalendarCollectionResponse
   post(requestBody:MicrosoftGraphCalendar):MicrosoftGraphCalendar
}
export interface operation6473{
   get():MicrosoftGraphCalendar
   patch(requestBody:MicrosoftGraphCalendar):"Success"
   delete():"Success"
}
export interface operation6474{
   get():MicrosoftGraphCalendarPermissionCollectionResponse
   post(requestBody:MicrosoftGraphCalendarPermission):MicrosoftGraphCalendarPermission
}
export interface operation6475{
   get():MicrosoftGraphCalendarPermission
   patch(requestBody:MicrosoftGraphCalendarPermission):"Success"
   delete():"Success"
}
export interface operation6476{
   get():ODataCountResponse
}
export interface operation6477{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6478{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6479{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6480{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6481{
   get():ODataCountResponse
}
export interface operation6482{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6483{
   get():MicrosoftGraphCalendar
}
export interface operation6484{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6485{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6486{
   get():ODataCountResponse
}
export interface operation6487{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6488{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6489{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6490{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6491{
   get():ODataCountResponse
}
export interface operation6492{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6493{
   get():MicrosoftGraphCalendar
}
export interface operation6494{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6495{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6496{
   get():ODataCountResponse
}
export interface operation6497{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6498{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6499{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6500{
   post():"Success"
}
export interface operation6501{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6502{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6503{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6504{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6505{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6506{
   get():ODataCountResponse
}
export interface operation6507{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6508{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6509{
   get():ODataCountResponse
}
export interface operation6510{
   get():ODataCountResponse
}
export interface operation6511{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6512{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6513{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6514{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6515{
   post():"Success"
}
export interface operation6516{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6517{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6518{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6519{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6520{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6521{
   get():ODataCountResponse
}
export interface operation6522{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6523{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6524{
   get():ODataCountResponse
}
export interface operation6525{
   get():ODataCountResponse
}
export interface operation6526{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6527{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6528{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6529{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6530{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6531{
   get():ODataCountResponse
}
export interface operation6532{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6533{
   get():MicrosoftGraphCalendar
}
export interface operation6534{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6535{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6536{
   get():ODataCountResponse
}
export interface operation6537{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6538{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6539{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6540{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6541{
   get():ODataCountResponse
}
export interface operation6542{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6543{
   get():MicrosoftGraphCalendar
}
export interface operation6544{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6545{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6546{
   get():ODataCountResponse
}
export interface operation6547{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6548{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6549{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6550{
   post():"Success"
}
export interface operation6551{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6552{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6553{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6554{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6555{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6556{
   get():ODataCountResponse
}
export interface operation6557{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6558{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6559{
   get():ODataCountResponse
}
export interface operation6560{
   get():ODataCountResponse
}
export interface operation6561{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6562{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6563{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6564{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6565{
   post():"Success"
}
export interface operation6566{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6567{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6568{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6569{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6570{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6571{
   get():ODataCountResponse
}
export interface operation6572{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6573{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6574{
   get():ODataCountResponse
}
export interface operation6575{
   get():ODataCountResponse
}
export interface operation6576{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6577{
   get():{value?: string[],}
}
export interface operation6578{
   post(requestBody:{Schedules?: string[],EndTime?: MicrosoftGraphDateTimeTimeZone,StartTime?: MicrosoftGraphDateTimeTimeZone,AvailabilityViewInterval?: number,}):{value?: MicrosoftGraphScheduleInformation[],}
}
export interface operation6579{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6580{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6581{
   get():ODataCountResponse
}
export interface operation6582{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6583{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6584{
   get():ODataCountResponse
}
export interface operation6585{
   get():ODataCountResponse
}
export interface operation6586{
   get():ODataCountResponse
}
export interface operation6587{
   get():MicrosoftGraphCalendarCollectionResponse
   post(requestBody:MicrosoftGraphCalendar):MicrosoftGraphCalendar
}
export interface operation6588{
   get():MicrosoftGraphCalendar
   patch(requestBody:MicrosoftGraphCalendar):"Success"
   delete():"Success"
}
export interface operation6589{
   get():MicrosoftGraphCalendarPermissionCollectionResponse
   post(requestBody:MicrosoftGraphCalendarPermission):MicrosoftGraphCalendarPermission
}
export interface operation6590{
   get():MicrosoftGraphCalendarPermission
   patch(requestBody:MicrosoftGraphCalendarPermission):"Success"
   delete():"Success"
}
export interface operation6591{
   get():ODataCountResponse
}
export interface operation6592{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6593{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6594{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6595{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6596{
   get():ODataCountResponse
}
export interface operation6597{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6598{
   get():MicrosoftGraphCalendar
}
export interface operation6599{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6600{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6601{
   get():ODataCountResponse
}
export interface operation6602{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6603{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6604{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6605{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6606{
   get():ODataCountResponse
}
export interface operation6607{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6608{
   get():MicrosoftGraphCalendar
}
export interface operation6609{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6610{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6611{
   get():ODataCountResponse
}
export interface operation6612{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6613{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6614{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6615{
   post():"Success"
}
export interface operation6616{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6617{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6618{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6619{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6620{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6621{
   get():ODataCountResponse
}
export interface operation6622{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6623{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6624{
   get():ODataCountResponse
}
export interface operation6625{
   get():ODataCountResponse
}
export interface operation6626{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6627{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6628{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6629{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6630{
   post():"Success"
}
export interface operation6631{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6632{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6633{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6634{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6635{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6636{
   get():ODataCountResponse
}
export interface operation6637{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6638{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6639{
   get():ODataCountResponse
}
export interface operation6640{
   get():ODataCountResponse
}
export interface operation6641{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6642{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6643{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6644{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6645{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6646{
   get():ODataCountResponse
}
export interface operation6647{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6648{
   get():MicrosoftGraphCalendar
}
export interface operation6649{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6650{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6651{
   get():ODataCountResponse
}
export interface operation6652{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6653{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6654{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6655{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6656{
   get():ODataCountResponse
}
export interface operation6657{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6658{
   get():MicrosoftGraphCalendar
}
export interface operation6659{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6660{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6661{
   get():ODataCountResponse
}
export interface operation6662{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6663{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6664{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6665{
   post():"Success"
}
export interface operation6666{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6667{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6668{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6669{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6670{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6671{
   get():ODataCountResponse
}
export interface operation6672{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6673{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6674{
   get():ODataCountResponse
}
export interface operation6675{
   get():ODataCountResponse
}
export interface operation6676{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6677{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6678{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6679{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6680{
   post():"Success"
}
export interface operation6681{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6682{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6683{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6684{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6685{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6686{
   get():ODataCountResponse
}
export interface operation6687{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6688{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6689{
   get():ODataCountResponse
}
export interface operation6690{
   get():ODataCountResponse
}
export interface operation6691{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6692{
   get():{value?: string[],}
}
export interface operation6693{
   post(requestBody:{Schedules?: string[],EndTime?: MicrosoftGraphDateTimeTimeZone,StartTime?: MicrosoftGraphDateTimeTimeZone,AvailabilityViewInterval?: number,}):{value?: MicrosoftGraphScheduleInformation[],}
}
export interface operation6694{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6695{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6696{
   get():ODataCountResponse
}
export interface operation6697{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6698{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6699{
   get():ODataCountResponse
}
export interface operation6700{
   get():ODataCountResponse
}
export interface operation6701{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6702{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6703{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6704{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6705{
   get():ODataCountResponse
}
export interface operation6706{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6707{
   get():MicrosoftGraphCalendar
}
export interface operation6708{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6709{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6710{
   get():ODataCountResponse
}
export interface operation6711{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation6712{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation6713{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation6714{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation6715{
   get():ODataCountResponse
}
export interface operation6716{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation6717{
   get():MicrosoftGraphCalendar
}
export interface operation6718{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6719{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6720{
   get():ODataCountResponse
}
export interface operation6721{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6722{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6723{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6724{
   post():"Success"
}
export interface operation6725{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6726{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6727{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6728{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6729{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6730{
   get():ODataCountResponse
}
export interface operation6731{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6732{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6733{
   get():ODataCountResponse
}
export interface operation6734{
   get():ODataCountResponse
}
export interface operation6735{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6736{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation6737{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation6738{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6739{
   post():"Success"
}
export interface operation6740{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation6741{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation6742{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation6743{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6744{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6745{
   get():ODataCountResponse
}
export interface operation6746{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6747{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6748{
   get():ODataCountResponse
}
export interface operation6749{
   get():ODataCountResponse
}
export interface operation6750{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation6751{
   get():MicrosoftGraphChatCollectionResponse
   post(requestBody:MicrosoftGraphChat):MicrosoftGraphChat
}
export interface operation6752{
   get():MicrosoftGraphChat
   patch(requestBody:MicrosoftGraphChat):"Success"
   delete():"Success"
}
export interface operation6753{
   get():MicrosoftGraphTeamsAppInstallationCollectionResponse
   post(requestBody:MicrosoftGraphTeamsAppInstallation):MicrosoftGraphTeamsAppInstallation
}
export interface operation6754{
   get():MicrosoftGraphTeamsAppInstallation
   patch(requestBody:MicrosoftGraphTeamsAppInstallation):"Success"
   delete():"Success"
}
export interface operation6755{
   post():"Success"
}
export interface operation6756{
   get():MicrosoftGraphTeamsApp
}
export interface operation6757{
   get():MicrosoftGraphTeamsAppDefinition
}
export interface operation6758{
   get():ODataCountResponse
}
export interface operation6759{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation6760{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation6761{
   get():ODataCountResponse
}
export interface operation6762{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation6763{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation6764{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation6765{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation6766{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation6767{
   get():ODataCountResponse
}
export interface operation6768{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation6769{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation6770{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation6771{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation6772{
   get():ODataCountResponse
}
export interface operation6773{
   get():ODataCountResponse
}
export interface operation6774{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation6775{
   get():ODataCountResponse
}
export interface operation6776{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation6777{
   post(requestBody:{topic?: MicrosoftGraphTeamworkActivityTopic,activityType?: string,chainId?: number,previewText?: MicrosoftGraphItemBody,templateParameters?: MicrosoftGraphKeyValuePair[],recipient?: MicrosoftGraphTeamworkNotificationRecipient,}):"Success"
}
export interface operation6778{
   get():MicrosoftGraphPinnedChatMessageInfoCollectionResponse
   post(requestBody:MicrosoftGraphPinnedChatMessageInfo):MicrosoftGraphPinnedChatMessageInfo
}
export interface operation6779{
   get():MicrosoftGraphPinnedChatMessageInfo
   patch(requestBody:MicrosoftGraphPinnedChatMessageInfo):"Success"
   delete():"Success"
}
export interface operation6780{
   get():MicrosoftGraphChatMessage
}
export interface operation6781{
   get():ODataCountResponse
}
export interface operation6782{
   get():MicrosoftGraphTeamsTabCollectionResponse
   post(requestBody:MicrosoftGraphTeamsTab):MicrosoftGraphTeamsTab
}
export interface operation6783{
   get():MicrosoftGraphTeamsTab
   patch(requestBody:MicrosoftGraphTeamsTab):"Success"
   delete():"Success"
}
export interface operation6784{
   get():MicrosoftGraphTeamsApp
}
export interface operation6785{
   get():ODataCountResponse
}
export interface operation6786{
   get():ODataCountResponse
}
export interface operation6787{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation6788{
   get():MicrosoftGraphContactFolderCollectionResponse
   post(requestBody:MicrosoftGraphContactFolder):MicrosoftGraphContactFolder
}
export interface operation6789{
   get():MicrosoftGraphContactFolder
   patch(requestBody:MicrosoftGraphContactFolder):"Success"
   delete():"Success"
}
export interface operation6790{
   get():MicrosoftGraphContactFolderCollectionResponse
   post(requestBody:MicrosoftGraphContactFolder):MicrosoftGraphContactFolder
}
export interface operation6791{
   get():MicrosoftGraphContactFolder
   patch(requestBody:MicrosoftGraphContactFolder):"Success"
   delete():"Success"
}
export interface operation6792{
   get():MicrosoftGraphContactCollectionResponse
   post(requestBody:MicrosoftGraphContact):MicrosoftGraphContact
}
export interface operation6793{
   get():MicrosoftGraphContact
   patch(requestBody:MicrosoftGraphContact):"Success"
   delete():"Success"
}
export interface operation6794{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6795{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6796{
   get():ODataCountResponse
}
export interface operation6797{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6798{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6799{
   get():ODataCountResponse
}
export interface operation6800{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation6801{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6802{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6803{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6804{
   get():ODataCountResponse
}
export interface operation6805{
   get():ODataCountResponse
}
export interface operation6806{
   get():{value?: MicrosoftGraphContact[],}
}
export interface operation6807{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6808{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6809{
   get():ODataCountResponse
}
export interface operation6810{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6811{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6812{
   get():ODataCountResponse
}
export interface operation6813{
   get():ODataCountResponse
}
export interface operation6814{
   get():{value?: MicrosoftGraphContactFolder[],}
}
export interface operation6815{
   get():MicrosoftGraphContactCollectionResponse
   post(requestBody:MicrosoftGraphContact):MicrosoftGraphContact
}
export interface operation6816{
   get():MicrosoftGraphContact
   patch(requestBody:MicrosoftGraphContact):"Success"
   delete():"Success"
}
export interface operation6817{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6818{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6819{
   get():ODataCountResponse
}
export interface operation6820{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6821{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6822{
   get():ODataCountResponse
}
export interface operation6823{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation6824{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6825{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6826{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6827{
   get():ODataCountResponse
}
export interface operation6828{
   get():ODataCountResponse
}
export interface operation6829{
   get():{value?: MicrosoftGraphContact[],}
}
export interface operation6830{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6831{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6832{
   get():ODataCountResponse
}
export interface operation6833{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6834{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6835{
   get():ODataCountResponse
}
export interface operation6836{
   get():ODataCountResponse
}
export interface operation6837{
   get():{value?: MicrosoftGraphContactFolder[],}
}
export interface operation6838{
   get():MicrosoftGraphContactCollectionResponse
   post(requestBody:MicrosoftGraphContact):MicrosoftGraphContact
}
export interface operation6839{
   get():MicrosoftGraphContact
   patch(requestBody:MicrosoftGraphContact):"Success"
   delete():"Success"
}
export interface operation6840{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation6841{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation6842{
   get():ODataCountResponse
}
export interface operation6843{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation6844{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6845{
   get():ODataCountResponse
}
export interface operation6846{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation6847{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6848{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation6849{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation6850{
   get():ODataCountResponse
}
export interface operation6851{
   get():ODataCountResponse
}
export interface operation6852{
   get():{value?: MicrosoftGraphContact[],}
}
export interface operation6853{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation6854{
   get():MicrosoftGraphDirectoryObject
}
export interface operation6855{
   get():MicrosoftGraphServicePrincipal
}
export interface operation6856{
   get():ODataCountResponse
}
export interface operation6857{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation6858{
   get():ODataCountResponse
}
export interface operation6859{
   get():MicrosoftGraphDeviceManagementTroubleshootingEventCollectionResponse
   post(requestBody:MicrosoftGraphDeviceManagementTroubleshootingEvent):MicrosoftGraphDeviceManagementTroubleshootingEvent
}
export interface operation6860{
   get():MicrosoftGraphDeviceManagementTroubleshootingEvent
   patch(requestBody:MicrosoftGraphDeviceManagementTroubleshootingEvent):"Success"
   delete():"Success"
}
export interface operation6861{
   get():ODataCountResponse
}
export interface operation6862{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation6863{
   get():MicrosoftGraphDirectoryObject
}
export interface operation6864{
   get():MicrosoftGraphOrgContact
}
export interface operation6865{
   get():MicrosoftGraphUser
}
export interface operation6866{
   get():ODataCountResponse
}
export interface operation6867{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation6868{
   get():ODataCountResponse
}
export interface operation6869{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation6870{
   get():ODataCountResponse
}
export interface operation6871{
   get():MicrosoftGraphDrive
}
export interface operation6872{
   get():MicrosoftGraphDriveCollectionResponse
   post(requestBody:MicrosoftGraphDrive):MicrosoftGraphDrive
}
export interface operation6873{
   get():MicrosoftGraphDrive
   patch(requestBody:MicrosoftGraphDrive):"Success"
   delete():"Success"
}
export interface operation6874{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation6875{
   get():MicrosoftGraphDriveItem
}
export interface operation6876{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6877{
   get():ODataCountResponse
}
export interface operation6878{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation6879{
   get():MicrosoftGraphDriveItem
}
export interface operation6880{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6881{
   get():ODataCountResponse
}
export interface operation6882{
   get():MicrosoftGraphDriveItemCollectionResponse
   post(requestBody:MicrosoftGraphDriveItem):MicrosoftGraphDriveItem
}
export interface operation6883{
   get():MicrosoftGraphDriveItem
   patch(requestBody:MicrosoftGraphDriveItem):"Success"
   delete():"Success"
}
export interface operation6884{
   get():MicrosoftGraphItemAnalytics
}
export interface operation6885{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation6886{
   get():MicrosoftGraphDriveItem
}
export interface operation6887{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6888{
   get():ODataCountResponse
}
export interface operation6889{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6890{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation6891{
   get():MicrosoftGraphItemAnalytics
}
export interface operation6892{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation6893{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation6894{
   post():"Success"
}
export interface operation6895{
   get():ODataCountResponse
}
export interface operation6896{
   get():MicrosoftGraphDriveItem
}
export interface operation6897{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6898{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation6899{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation6900{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation6901{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation6902{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation6903{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation6904{
   post():"Success"
}
export interface operation6905{
   get():ODataCountResponse
}
export interface operation6906{
   post(requestBody:{checkInAs?: string,comment?: string,}):"Success"
}
export interface operation6907{
   post():"Success"
}
export interface operation6908{
   post(requestBody:{name?: string,parentReference?: MicrosoftGraphItemReference,}):{}
}
export interface operation6909{
   post(requestBody:{type?: string,scope?: string,expirationDateTime?: string,password?: string,message?: string,retainInheritedPermissions?: boolean,}):{}
}
export interface operation6910{
   post(requestBody:{item?: MicrosoftGraphDriveItemUploadableProperties,}):{}
}
export interface operation6911{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation6912{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation6913{
   post():{}
}
export interface operation6914{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation6915{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation6916{
   post(requestBody:{requireSignIn?: boolean,roles?: string[],sendInvitation?: boolean,message?: string,recipients?: {alias?: string,email?: string,objectId?: string,"@odata.type"?: string,},retainInheritedPermissions?: boolean,expirationDateTime?: string,password?: string,}):{value?: MicrosoftGraphPermission[],}
}
export interface operation6917{
   post(requestBody:{page?: string,zoom?: number | string,}):{}
}
export interface operation6918{
   post(requestBody:{parentReference?: MicrosoftGraphItemReference,name?: string,}):{}
}
export interface operation6919{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation6920{
   post():"Success"
}
export interface operation6921{
   post(requestBody:{challengeToken?: string,password?: string,}):"Success"
}
export interface operation6922{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation6923{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation6924{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation6925{
   get():ODataCountResponse
}
export interface operation6926{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation6927{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation6928{
   post():"Success"
}
export interface operation6929{
   get():ODataCountResponse
}
export interface operation6930{
   get():MicrosoftGraphThumbnailSetCollectionResponse
   post(requestBody:MicrosoftGraphThumbnailSet):MicrosoftGraphThumbnailSet
}
export interface operation6931{
   get():MicrosoftGraphThumbnailSet
   patch(requestBody:MicrosoftGraphThumbnailSet):"Success"
   delete():"Success"
}
export interface operation6932{
   get():ODataCountResponse
}
export interface operation6933{
   get():MicrosoftGraphDriveItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphDriveItemVersion):MicrosoftGraphDriveItemVersion
}
export interface operation6934{
   get():MicrosoftGraphDriveItemVersion
   patch(requestBody:MicrosoftGraphDriveItemVersion):"Success"
   delete():"Success"
}
export interface operation6935{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6936{
   post():"Success"
}
export interface operation6937{
   get():ODataCountResponse
}
export interface operation6938{
   get():ODataCountResponse
}
export interface operation6939{
   get():MicrosoftGraphList
   patch(requestBody:MicrosoftGraphList):"Success"
   delete():"Success"
}
export interface operation6940{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation6941{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation6942{
   get():MicrosoftGraphColumnDefinition
}
export interface operation6943{
   get():ODataCountResponse
}
export interface operation6944{
   get():MicrosoftGraphContentTypeCollectionResponse
   post(requestBody:MicrosoftGraphContentType):MicrosoftGraphContentType
}
export interface operation6945{
   get():MicrosoftGraphContentType
   patch(requestBody:MicrosoftGraphContentType):"Success"
   delete():"Success"
}
export interface operation6946{
   get():MicrosoftGraphContentType
}
export interface operation6947{
   get():MicrosoftGraphContentTypeCollectionResponse
}
export interface operation6948{
   get():MicrosoftGraphContentType
}
export interface operation6949{
   get():ODataCountResponse
}
export interface operation6950{
   get():MicrosoftGraphColumnLinkCollectionResponse
   post(requestBody:MicrosoftGraphColumnLink):MicrosoftGraphColumnLink
}
export interface operation6951{
   get():MicrosoftGraphColumnLink
   patch(requestBody:MicrosoftGraphColumnLink):"Success"
   delete():"Success"
}
export interface operation6952{
   get():ODataCountResponse
}
export interface operation6953{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
}
export interface operation6954{
   get():MicrosoftGraphColumnDefinition
}
export interface operation6955{
   get():ODataCountResponse
}
export interface operation6956{
   get():MicrosoftGraphColumnDefinitionCollectionResponse
   post(requestBody:MicrosoftGraphColumnDefinition):MicrosoftGraphColumnDefinition
}
export interface operation6957{
   get():MicrosoftGraphColumnDefinition
   patch(requestBody:MicrosoftGraphColumnDefinition):"Success"
   delete():"Success"
}
export interface operation6958{
   get():MicrosoftGraphColumnDefinition
}
export interface operation6959{
   get():ODataCountResponse
}
export interface operation6960{
   post(requestBody:{hubSiteUrls?: string[],propagateToExistingLists?: boolean,}):"Success"
}
export interface operation6961{
   post(requestBody:{sourceFile?: {driveId?: string,driveType?: string,id?: string,name?: string,path?: string,shareId?: string,sharepointIds?: MicrosoftGraphSharepointIds,siteId?: string,"@odata.type"?: string,},destinationFileName?: string,}):"Success"
}
export interface operation6962{
   get():{value?: boolean,}
}
export interface operation6963{
   post():"Success"
}
export interface operation6964{
   post():"Success"
}
export interface operation6965{
   get():ODataCountResponse
}
export interface operation6966{
   post(requestBody:{contentType?: string,}):{}
}
export interface operation6967{
   post(requestBody:{contentTypeId?: string,}):{}
}
export interface operation6968{
   get():{value?: MicrosoftGraphContentType[],}
}
export interface operation6969{
   get():MicrosoftGraphDrive
}
export interface operation6970{
   get():MicrosoftGraphListItemCollectionResponse
   post(requestBody:MicrosoftGraphListItem):MicrosoftGraphListItem
}
export interface operation6971{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation6972{
   get():MicrosoftGraphItemAnalytics
}
export interface operation6973{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation6974{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation6975{
   post():"Success"
}
export interface operation6976{
   get():ODataCountResponse
}
export interface operation6977{
   get():MicrosoftGraphDriveItem
}
export interface operation6978{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation6979{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation6980{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation6981{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation6982{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation6983{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation6984{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation6985{
   post():"Success"
}
export interface operation6986{
   get():ODataCountResponse
}
export interface operation6987{
   get():ODataCountResponse
}
export interface operation6988{
   get():MicrosoftGraphRichLongRunningOperationCollectionResponse
   post(requestBody:MicrosoftGraphRichLongRunningOperation):MicrosoftGraphRichLongRunningOperation
}
export interface operation6989{
   get():MicrosoftGraphRichLongRunningOperation
   patch(requestBody:MicrosoftGraphRichLongRunningOperation):"Success"
   delete():"Success"
}
export interface operation6990{
   get():ODataCountResponse
}
export interface operation6991{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation6992{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation6993{
   post():"Success"
}
export interface operation6994{
   get():ODataCountResponse
}
export interface operation6995{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation6996{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation6997{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation6998{
   get():MicrosoftGraphDriveItem
   patch(requestBody:MicrosoftGraphDriveItem):"Success"
   delete():"Success"
}
export interface operation6999{
   get():MicrosoftGraphItemAnalytics
}
export interface operation7000{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation7001{
   get():MicrosoftGraphDriveItem
}
export interface operation7002{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7003{
   get():ODataCountResponse
}
export interface operation7004{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7005{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation7006{
   get():MicrosoftGraphItemAnalytics
}
export interface operation7007{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation7008{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation7009{
   post():"Success"
}
export interface operation7010{
   get():ODataCountResponse
}
export interface operation7011{
   get():MicrosoftGraphDriveItem
}
export interface operation7012{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7013{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation7014{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation7015{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation7016{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation7017{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation7018{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation7019{
   post():"Success"
}
export interface operation7020{
   get():ODataCountResponse
}
export interface operation7021{
   post(requestBody:{checkInAs?: string,comment?: string,}):"Success"
}
export interface operation7022{
   post():"Success"
}
export interface operation7023{
   post(requestBody:{name?: string,parentReference?: MicrosoftGraphItemReference,}):{}
}
export interface operation7024{
   post(requestBody:{type?: string,scope?: string,expirationDateTime?: string,password?: string,message?: string,retainInheritedPermissions?: boolean,}):{}
}
export interface operation7025{
   post(requestBody:{item?: MicrosoftGraphDriveItemUploadableProperties,}):{}
}
export interface operation7026{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation7027{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation7028{
   post():{}
}
export interface operation7029{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation7030{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation7031{
   post(requestBody:{requireSignIn?: boolean,roles?: string[],sendInvitation?: boolean,message?: string,recipients?: {alias?: string,email?: string,objectId?: string,"@odata.type"?: string,},retainInheritedPermissions?: boolean,expirationDateTime?: string,password?: string,}):{value?: MicrosoftGraphPermission[],}
}
export interface operation7032{
   post(requestBody:{page?: string,zoom?: number | string,}):{}
}
export interface operation7033{
   post(requestBody:{parentReference?: MicrosoftGraphItemReference,name?: string,}):{}
}
export interface operation7034{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation7035{
   post():"Success"
}
export interface operation7036{
   post(requestBody:{challengeToken?: string,password?: string,}):"Success"
}
export interface operation7037{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation7038{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation7039{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation7040{
   get():ODataCountResponse
}
export interface operation7041{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation7042{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation7043{
   post():"Success"
}
export interface operation7044{
   get():ODataCountResponse
}
export interface operation7045{
   get():MicrosoftGraphThumbnailSetCollectionResponse
   post(requestBody:MicrosoftGraphThumbnailSet):MicrosoftGraphThumbnailSet
}
export interface operation7046{
   get():MicrosoftGraphThumbnailSet
   patch(requestBody:MicrosoftGraphThumbnailSet):"Success"
   delete():"Success"
}
export interface operation7047{
   get():ODataCountResponse
}
export interface operation7048{
   get():MicrosoftGraphDriveItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphDriveItemVersion):MicrosoftGraphDriveItemVersion
}
export interface operation7049{
   get():MicrosoftGraphDriveItemVersion
   patch(requestBody:MicrosoftGraphDriveItemVersion):"Success"
   delete():"Success"
}
export interface operation7050{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7051{
   post():"Success"
}
export interface operation7052{
   get():ODataCountResponse
}
export interface operation7053{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation7054{
   get():MicrosoftGraphDriveItem
}
export interface operation7055{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7056{
   get():ODataCountResponse
}
export interface operation7057{
   get():ODataCountResponse
}
export interface operation7058{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation7059{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation7060{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation7061{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation7062{
   get():ODataCountResponse
}
export interface operation7063{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation7064{
   get():MicrosoftGraphCalendar
}
export interface operation7065{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation7066{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation7067{
   get():ODataCountResponse
}
export interface operation7068{
   get():MicrosoftGraphEventCollectionResponse
   post(requestBody:MicrosoftGraphEvent):MicrosoftGraphEvent
}
export interface operation7069{
   get():MicrosoftGraphEvent
   patch(requestBody:MicrosoftGraphEvent):"Success"
   delete():"Success"
}
export interface operation7070{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation7071{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation7072{
   get():ODataCountResponse
}
export interface operation7073{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation7074{
   get():MicrosoftGraphCalendar
}
export interface operation7075{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation7076{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation7077{
   get():ODataCountResponse
}
export interface operation7078{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation7079{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation7080{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation7081{
   post():"Success"
}
export interface operation7082{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation7083{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation7084{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation7085{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation7086{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7087{
   get():ODataCountResponse
}
export interface operation7088{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation7089{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7090{
   get():ODataCountResponse
}
export interface operation7091{
   get():ODataCountResponse
}
export interface operation7092{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation7093{
   post(requestBody:{Comment?: string,SendResponse?: boolean,}):"Success"
}
export interface operation7094{
   post(requestBody:{Comment?: string,}):"Success"
}
export interface operation7095{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation7096{
   post():"Success"
}
export interface operation7097{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Comment?: string,}):"Success"
}
export interface operation7098{
   post(requestBody:{NewReminderTime?: {dateTime?: string,timeZone?: string,"@odata.type"?: string,},}):"Success"
}
export interface operation7099{
   post(requestBody:{Comment?: string,SendResponse?: boolean,ProposedNewTime?: MicrosoftGraphTimeSlot,}):"Success"
}
export interface operation7100{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation7101{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7102{
   get():ODataCountResponse
}
export interface operation7103{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation7104{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7105{
   get():ODataCountResponse
}
export interface operation7106{
   get():ODataCountResponse
}
export interface operation7107{
   get():{value?: MicrosoftGraphEvent[],}
}
export interface operation7108{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation7109{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation7110{
   get():ODataCountResponse
}
export interface operation7111{
   get():MicrosoftGraphSiteCollectionResponse
}
export interface operation7112{
   get():MicrosoftGraphSite
}
export interface operation7113{
   get():ODataCountResponse
}
export interface operation7114{
   get():MicrosoftGraphInferenceClassification
   patch(requestBody:MicrosoftGraphInferenceClassification):"Success"
   delete():"Success"
}
export interface operation7115{
   get():MicrosoftGraphInferenceClassificationOverrideCollectionResponse
   post(requestBody:MicrosoftGraphInferenceClassificationOverride):MicrosoftGraphInferenceClassificationOverride
}
export interface operation7116{
   get():MicrosoftGraphInferenceClassificationOverride
   patch(requestBody:MicrosoftGraphInferenceClassificationOverride):"Success"
   delete():"Success"
}
export interface operation7117{
   get():ODataCountResponse
}
export interface operation7118{
   get():MicrosoftGraphOfficeGraphInsights
   patch(requestBody:MicrosoftGraphOfficeGraphInsights):"Success"
   delete():"Success"
}
export interface operation7119{
   get():MicrosoftGraphSharedInsightCollectionResponse
   post(requestBody:MicrosoftGraphSharedInsight):MicrosoftGraphSharedInsight
}
export interface operation7120{
   get():MicrosoftGraphSharedInsight
   patch(requestBody:MicrosoftGraphSharedInsight):"Success"
   delete():"Success"
}
export interface operation7121{
   get():MicrosoftGraphEntity
}
export interface operation7122{
   get():MicrosoftGraphEntity
}
export interface operation7123{
   get():ODataCountResponse
}
export interface operation7124{
   get():MicrosoftGraphTrendingCollectionResponse
   post(requestBody:MicrosoftGraphTrending):MicrosoftGraphTrending
}
export interface operation7125{
   get():MicrosoftGraphTrending
   patch(requestBody:MicrosoftGraphTrending):"Success"
   delete():"Success"
}
export interface operation7126{
   get():MicrosoftGraphEntity
}
export interface operation7127{
   get():ODataCountResponse
}
export interface operation7128{
   get():MicrosoftGraphUsedInsightCollectionResponse
   post(requestBody:MicrosoftGraphUsedInsight):MicrosoftGraphUsedInsight
}
export interface operation7129{
   get():MicrosoftGraphUsedInsight
   patch(requestBody:MicrosoftGraphUsedInsight):"Success"
   delete():"Success"
}
export interface operation7130{
   get():MicrosoftGraphEntity
}
export interface operation7131{
   get():ODataCountResponse
}
export interface operation7132{
   get():MicrosoftGraphTeamCollectionResponse
   post(requestBody:MicrosoftGraphTeam):MicrosoftGraphTeam
}
export interface operation7133{
   get():MicrosoftGraphTeam
   patch(requestBody:MicrosoftGraphTeam):"Success"
   delete():"Success"
}
export interface operation7134{
   get():MicrosoftGraphChannelCollectionResponse
}
export interface operation7135{
   get():MicrosoftGraphChannel
}
export interface operation7136{
   get():ODataCountResponse
}
export interface operation7137{
   get():MicrosoftGraphChannelCollectionResponse
   post(requestBody:MicrosoftGraphChannel):MicrosoftGraphChannel
}
export interface operation7138{
   get():MicrosoftGraphChannel
   patch(requestBody:MicrosoftGraphChannel):"Success"
   delete():"Success"
}
export interface operation7139{
   get():MicrosoftGraphDriveItem
}
export interface operation7140{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7141{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation7142{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation7143{
   get():ODataCountResponse
}
export interface operation7144{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation7145{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation7146{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation7147{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation7148{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation7149{
   get():ODataCountResponse
}
export interface operation7150{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation7151{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation7152{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation7153{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation7154{
   get():ODataCountResponse
}
export interface operation7155{
   get():ODataCountResponse
}
export interface operation7156{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation7157{
   get():ODataCountResponse
}
export interface operation7158{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation7159{
   post():"Success"
}
export interface operation7160{
   get():{value?: boolean,}
}
export interface operation7161{
   post():{}
}
export interface operation7162{
   post():"Success"
}
export interface operation7163{
   get():MicrosoftGraphSharedWithChannelTeamInfoCollectionResponse
   post(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):MicrosoftGraphSharedWithChannelTeamInfo
}
export interface operation7164{
   get():MicrosoftGraphSharedWithChannelTeamInfo
   patch(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):"Success"
   delete():"Success"
}
export interface operation7165{
   get():MicrosoftGraphConversationMemberCollectionResponse
}
export interface operation7166{
   get():MicrosoftGraphConversationMember
}
export interface operation7167{
   get():ODataCountResponse
}
export interface operation7168{
   get():ODataCountResponse
}
export interface operation7169{
   get():MicrosoftGraphTeamsTabCollectionResponse
   post(requestBody:MicrosoftGraphTeamsTab):MicrosoftGraphTeamsTab
}
export interface operation7170{
   get():MicrosoftGraphTeamsTab
   patch(requestBody:MicrosoftGraphTeamsTab):"Success"
   delete():"Success"
}
export interface operation7171{
   get():MicrosoftGraphTeamsApp
}
export interface operation7172{
   get():ODataCountResponse
}
export interface operation7173{
   get():ODataCountResponse
}
export interface operation7174{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation7175{
   get():MicrosoftGraphGroup
}
export interface operation7176{
   get():MicrosoftGraphChannelCollectionResponse
}
export interface operation7177{
   get():MicrosoftGraphChannel
}
export interface operation7178{
   get():ODataCountResponse
}
export interface operation7179{
   get():MicrosoftGraphTeamsAppInstallationCollectionResponse
   post(requestBody:MicrosoftGraphTeamsAppInstallation):MicrosoftGraphTeamsAppInstallation
}
export interface operation7180{
   get():MicrosoftGraphTeamsAppInstallation
   patch(requestBody:MicrosoftGraphTeamsAppInstallation):"Success"
   delete():"Success"
}
export interface operation7181{
   post():"Success"
}
export interface operation7182{
   get():MicrosoftGraphTeamsApp
}
export interface operation7183{
   get():MicrosoftGraphTeamsAppDefinition
}
export interface operation7184{
   get():ODataCountResponse
}
export interface operation7185{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation7186{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation7187{
   get():ODataCountResponse
}
export interface operation7188{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation7189{
   post(requestBody:{shouldSetSpoSiteReadOnlyForMembers?: boolean,}):"Success"
}
export interface operation7190{
   post(requestBody:{displayName?: string,description?: string,mailNickname?: string,classification?: string,visibility?: string,partsToClone?: string,}):"Success"
}
export interface operation7191{
   post():"Success"
}
export interface operation7192{
   post(requestBody:{topic?: MicrosoftGraphTeamworkActivityTopic,activityType?: string,chainId?: number,previewText?: MicrosoftGraphItemBody,templateParameters?: MicrosoftGraphKeyValuePair[],recipient?: MicrosoftGraphTeamworkNotificationRecipient,}):"Success"
}
export interface operation7193{
   post():"Success"
}
export interface operation7194{
   get():MicrosoftGraphTeamsAsyncOperationCollectionResponse
   post(requestBody:MicrosoftGraphTeamsAsyncOperation):MicrosoftGraphTeamsAsyncOperation
}
export interface operation7195{
   get():MicrosoftGraphTeamsAsyncOperation
   patch(requestBody:MicrosoftGraphTeamsAsyncOperation):"Success"
   delete():"Success"
}
export interface operation7196{
   get():ODataCountResponse
}
export interface operation7197{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation7198{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7199{
   get():MicrosoftGraphChannel
   patch(requestBody:MicrosoftGraphChannel):"Success"
   delete():"Success"
}
export interface operation7200{
   get():MicrosoftGraphDriveItem
}
export interface operation7201{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7202{
   get():MicrosoftGraphConversationMemberCollectionResponse
   post(requestBody:MicrosoftGraphConversationMember):MicrosoftGraphConversationMember
}
export interface operation7203{
   get():MicrosoftGraphConversationMember
   patch(requestBody:MicrosoftGraphConversationMember):"Success"
   delete():"Success"
}
export interface operation7204{
   get():ODataCountResponse
}
export interface operation7205{
   post(requestBody:{values?: MicrosoftGraphConversationMember[],}):{value?: MicrosoftGraphActionResultPart[],}
}
export interface operation7206{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation7207{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation7208{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation7209{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation7210{
   get():ODataCountResponse
}
export interface operation7211{
   get():MicrosoftGraphChatMessageCollectionResponse
   post(requestBody:MicrosoftGraphChatMessage):MicrosoftGraphChatMessage
}
export interface operation7212{
   get():MicrosoftGraphChatMessage
   patch(requestBody:MicrosoftGraphChatMessage):"Success"
   delete():"Success"
}
export interface operation7213{
   get():MicrosoftGraphChatMessageHostedContentCollectionResponse
   post(requestBody:MicrosoftGraphChatMessageHostedContent):MicrosoftGraphChatMessageHostedContent
}
export interface operation7214{
   get():MicrosoftGraphChatMessageHostedContent
   patch(requestBody:MicrosoftGraphChatMessageHostedContent):"Success"
   delete():"Success"
}
export interface operation7215{
   get():ODataCountResponse
}
export interface operation7216{
   get():ODataCountResponse
}
export interface operation7217{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation7218{
   get():ODataCountResponse
}
export interface operation7219{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation7220{
   post():"Success"
}
export interface operation7221{
   get():{value?: boolean,}
}
export interface operation7222{
   post():{}
}
export interface operation7223{
   post():"Success"
}
export interface operation7224{
   get():MicrosoftGraphSharedWithChannelTeamInfoCollectionResponse
   post(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):MicrosoftGraphSharedWithChannelTeamInfo
}
export interface operation7225{
   get():MicrosoftGraphSharedWithChannelTeamInfo
   patch(requestBody:MicrosoftGraphSharedWithChannelTeamInfo):"Success"
   delete():"Success"
}
export interface operation7226{
   get():MicrosoftGraphConversationMemberCollectionResponse
}
export interface operation7227{
   get():MicrosoftGraphConversationMember
}
export interface operation7228{
   get():ODataCountResponse
}
export interface operation7229{
   get():ODataCountResponse
}
export interface operation7230{
   get():MicrosoftGraphTeamsTabCollectionResponse
   post(requestBody:MicrosoftGraphTeamsTab):MicrosoftGraphTeamsTab
}
export interface operation7231{
   get():MicrosoftGraphTeamsTab
   patch(requestBody:MicrosoftGraphTeamsTab):"Success"
   delete():"Success"
}
export interface operation7232{
   get():MicrosoftGraphTeamsApp
}
export interface operation7233{
   get():ODataCountResponse
}
export interface operation7234{
   get():MicrosoftGraphSchedule
   patch(requestBody:MicrosoftGraphSchedule):"Success"
   delete():"Success"
}
export interface operation7235{
   post(requestBody:{notifyTeam?: boolean,startDateTime?: string,endDateTime?: string,}):"Success"
}
export interface operation7236{
   get():MicrosoftGraphOfferShiftRequestCollectionResponse
   post(requestBody:MicrosoftGraphOfferShiftRequest):MicrosoftGraphOfferShiftRequest
}
export interface operation7237{
   get():MicrosoftGraphOfferShiftRequest
   patch(requestBody:MicrosoftGraphOfferShiftRequest):"Success"
   delete():"Success"
}
export interface operation7238{
   get():ODataCountResponse
}
export interface operation7239{
   get():MicrosoftGraphOpenShiftChangeRequestCollectionResponse
   post(requestBody:MicrosoftGraphOpenShiftChangeRequest):MicrosoftGraphOpenShiftChangeRequest
}
export interface operation7240{
   get():MicrosoftGraphOpenShiftChangeRequest
   patch(requestBody:MicrosoftGraphOpenShiftChangeRequest):"Success"
   delete():"Success"
}
export interface operation7241{
   get():ODataCountResponse
}
export interface operation7242{
   get():MicrosoftGraphOpenShiftCollectionResponse
   post(requestBody:MicrosoftGraphOpenShift):MicrosoftGraphOpenShift
}
export interface operation7243{
   get():MicrosoftGraphOpenShift
   patch(requestBody:MicrosoftGraphOpenShift):"Success"
   delete():"Success"
}
export interface operation7244{
   get():ODataCountResponse
}
export interface operation7245{
   get():MicrosoftGraphSchedulingGroupCollectionResponse
   post(requestBody:MicrosoftGraphSchedulingGroup):MicrosoftGraphSchedulingGroup
}
export interface operation7246{
   get():MicrosoftGraphSchedulingGroup
   patch(requestBody:MicrosoftGraphSchedulingGroup):"Success"
   delete():"Success"
}
export interface operation7247{
   get():ODataCountResponse
}
export interface operation7248{
   get():MicrosoftGraphShiftCollectionResponse
   post(requestBody:MicrosoftGraphShift):MicrosoftGraphShift
}
export interface operation7249{
   get():MicrosoftGraphShift
   patch(requestBody:MicrosoftGraphShift):"Success"
   delete():"Success"
}
export interface operation7250{
   get():ODataCountResponse
}
export interface operation7251{
   get():MicrosoftGraphSwapShiftsChangeRequestCollectionResponse
   post(requestBody:MicrosoftGraphSwapShiftsChangeRequest):MicrosoftGraphSwapShiftsChangeRequest
}
export interface operation7252{
   get():MicrosoftGraphSwapShiftsChangeRequest
   patch(requestBody:MicrosoftGraphSwapShiftsChangeRequest):"Success"
   delete():"Success"
}
export interface operation7253{
   get():ODataCountResponse
}
export interface operation7254{
   get():MicrosoftGraphTimeOffReasonCollectionResponse
   post(requestBody:MicrosoftGraphTimeOffReason):MicrosoftGraphTimeOffReason
}
export interface operation7255{
   get():MicrosoftGraphTimeOffReason
   patch(requestBody:MicrosoftGraphTimeOffReason):"Success"
   delete():"Success"
}
export interface operation7256{
   get():ODataCountResponse
}
export interface operation7257{
   get():MicrosoftGraphTimeOffRequestCollectionResponse
   post(requestBody:MicrosoftGraphTimeOffRequest):MicrosoftGraphTimeOffRequest
}
export interface operation7258{
   get():MicrosoftGraphTimeOffRequest
   patch(requestBody:MicrosoftGraphTimeOffRequest):"Success"
   delete():"Success"
}
export interface operation7259{
   get():ODataCountResponse
}
export interface operation7260{
   get():MicrosoftGraphTimeOffCollectionResponse
   post(requestBody:MicrosoftGraphTimeOff):MicrosoftGraphTimeOff
}
export interface operation7261{
   get():MicrosoftGraphTimeOff
   patch(requestBody:MicrosoftGraphTimeOff):"Success"
   delete():"Success"
}
export interface operation7262{
   get():ODataCountResponse
}
export interface operation7263{
   get():MicrosoftGraphTeamsTemplate
}
export interface operation7264{
   get():ODataCountResponse
}
export interface operation7265{
   get():{value?: MicrosoftGraphChatMessage[],}
}
export interface operation7266{
   get():MicrosoftGraphLicenseDetailsCollectionResponse
   post(requestBody:MicrosoftGraphLicenseDetails):MicrosoftGraphLicenseDetails
}
export interface operation7267{
   get():MicrosoftGraphLicenseDetails
   patch(requestBody:MicrosoftGraphLicenseDetails):"Success"
   delete():"Success"
}
export interface operation7268{
   get():ODataCountResponse
}
export interface operation7269{
   get():MicrosoftGraphMailFolderCollectionResponse
   post(requestBody:MicrosoftGraphMailFolder):MicrosoftGraphMailFolder
}
export interface operation7270{
   get():MicrosoftGraphMailFolder
   patch(requestBody:MicrosoftGraphMailFolder):"Success"
   delete():"Success"
}
export interface operation7271{
   get():MicrosoftGraphMailFolderCollectionResponse
   post(requestBody:MicrosoftGraphMailFolder):MicrosoftGraphMailFolder
}
export interface operation7272{
   get():MicrosoftGraphMailFolder
   patch(requestBody:MicrosoftGraphMailFolder):"Success"
   delete():"Success"
}
export interface operation7273{
   get():MicrosoftGraphMessageRuleCollectionResponse
   post(requestBody:MicrosoftGraphMessageRule):MicrosoftGraphMessageRule
}
export interface operation7274{
   get():MicrosoftGraphMessageRule
   patch(requestBody:MicrosoftGraphMessageRule):"Success"
   delete():"Success"
}
export interface operation7275{
   get():ODataCountResponse
}
export interface operation7276{
   get():MicrosoftGraphMessageCollectionResponse
   post(requestBody:MicrosoftGraphMessage):MicrosoftGraphMessage
}
export interface operation7277{
   get():MicrosoftGraphMessage
   patch(requestBody:MicrosoftGraphMessage):"Success"
   delete():"Success"
}
export interface operation7278{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7279{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation7280{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation7281{
   get():ODataCountResponse
}
export interface operation7282{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation7283{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation7284{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation7285{
   get():ODataCountResponse
}
export interface operation7286{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation7287{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation7288{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation7289{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation7290{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation7291{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation7292{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation7293{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation7294{
   post():"Success"
}
export interface operation7295{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation7296{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7297{
   get():ODataCountResponse
}
export interface operation7298{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation7299{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7300{
   get():ODataCountResponse
}
export interface operation7301{
   get():ODataCountResponse
}
export interface operation7302{
   get():{value?: MicrosoftGraphMessage[],}
}
export interface operation7303{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation7304{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation7305{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation7306{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7307{
   get():ODataCountResponse
}
export interface operation7308{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation7309{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7310{
   get():ODataCountResponse
}
export interface operation7311{
   get():ODataCountResponse
}
export interface operation7312{
   get():{value?: MicrosoftGraphMailFolder[],}
}
export interface operation7313{
   get():MicrosoftGraphMessageRuleCollectionResponse
   post(requestBody:MicrosoftGraphMessageRule):MicrosoftGraphMessageRule
}
export interface operation7314{
   get():MicrosoftGraphMessageRule
   patch(requestBody:MicrosoftGraphMessageRule):"Success"
   delete():"Success"
}
export interface operation7315{
   get():ODataCountResponse
}
export interface operation7316{
   get():MicrosoftGraphMessageCollectionResponse
   post(requestBody:MicrosoftGraphMessage):MicrosoftGraphMessage
}
export interface operation7317{
   get():MicrosoftGraphMessage
   patch(requestBody:MicrosoftGraphMessage):"Success"
   delete():"Success"
}
export interface operation7318{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7319{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation7320{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation7321{
   get():ODataCountResponse
}
export interface operation7322{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation7323{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation7324{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation7325{
   get():ODataCountResponse
}
export interface operation7326{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation7327{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation7328{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation7329{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation7330{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation7331{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation7332{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation7333{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation7334{
   post():"Success"
}
export interface operation7335{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation7336{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7337{
   get():ODataCountResponse
}
export interface operation7338{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation7339{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7340{
   get():ODataCountResponse
}
export interface operation7341{
   get():ODataCountResponse
}
export interface operation7342{
   get():{value?: MicrosoftGraphMessage[],}
}
export interface operation7343{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation7344{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation7345{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation7346{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7347{
   get():ODataCountResponse
}
export interface operation7348{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation7349{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7350{
   get():ODataCountResponse
}
export interface operation7351{
   get():ODataCountResponse
}
export interface operation7352{
   get():{value?: MicrosoftGraphMailFolder[],}
}
export interface operation7353{
   get():MicrosoftGraphManagedAppRegistrationCollectionResponse
}
export interface operation7354{
   get():MicrosoftGraphManagedAppRegistration
}
export interface operation7355{
   get():ODataCountResponse
}
export interface operation7356{
   get():MicrosoftGraphManagedDeviceCollectionResponse
   post(requestBody:MicrosoftGraphManagedDevice):MicrosoftGraphManagedDevice
}
export interface operation7357{
   get():MicrosoftGraphManagedDevice
   patch(requestBody:MicrosoftGraphManagedDevice):"Success"
   delete():"Success"
}
export interface operation7358{
   get():MicrosoftGraphDeviceCategory
   patch(requestBody:MicrosoftGraphDeviceCategory):"Success"
   delete():"Success"
}
export interface operation7359{
   get():MicrosoftGraphDeviceCompliancePolicyStateCollectionResponse
   post(requestBody:MicrosoftGraphDeviceCompliancePolicyState):MicrosoftGraphDeviceCompliancePolicyState
}
export interface operation7360{
   get():MicrosoftGraphDeviceCompliancePolicyState
   patch(requestBody:MicrosoftGraphDeviceCompliancePolicyState):"Success"
   delete():"Success"
}
export interface operation7361{
   get():ODataCountResponse
}
export interface operation7362{
   get():MicrosoftGraphDeviceConfigurationStateCollectionResponse
   post(requestBody:MicrosoftGraphDeviceConfigurationState):MicrosoftGraphDeviceConfigurationState
}
export interface operation7363{
   get():MicrosoftGraphDeviceConfigurationState
   patch(requestBody:MicrosoftGraphDeviceConfigurationState):"Success"
   delete():"Success"
}
export interface operation7364{
   get():ODataCountResponse
}
export interface operation7365{
   post():"Success"
}
export interface operation7366{
   post(requestBody:{keepUserData?: boolean,}):"Success"
}
export interface operation7367{
   post(requestBody:{userPrincipalName?: string,}):"Success"
}
export interface operation7368{
   post():"Success"
}
export interface operation7369{
   post():"Success"
}
export interface operation7370{
   post():"Success"
}
export interface operation7371{
   post():"Success"
}
export interface operation7372{
   post():"Success"
}
export interface operation7373{
   post():"Success"
}
export interface operation7374{
   post():"Success"
}
export interface operation7375{
   post():"Success"
}
export interface operation7376{
   post():"Success"
}
export interface operation7377{
   post():"Success"
}
export interface operation7378{
   post():"Success"
}
export interface operation7379{
   post(requestBody:{updateWindowsDeviceAccountActionParameter?: MicrosoftGraphUpdateWindowsDeviceAccountActionParameter,}):"Success"
}
export interface operation7380{
   post(requestBody:{quickScan?: boolean,}):"Success"
}
export interface operation7381{
   post():"Success"
}
export interface operation7382{
   post(requestBody:{keepEnrollmentData?: boolean,keepUserData?: boolean,macOsUnlockCode?: string,persistEsimDataPlan?: boolean,}):"Success"
}
export interface operation7383{
   get():ODataCountResponse
}
export interface operation7384{
   get():MicrosoftGraphDirectoryObject
}
export interface operation7385{
   get():{}
   put(requestBody:ReferenceUpdate):"Success"
   delete():"Success"
}
export interface operation7386{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation7387{
   get():MicrosoftGraphDirectoryObject
}
export interface operation7388{
   get():MicrosoftGraphApplication
}
export interface operation7389{
   get():MicrosoftGraphDevice
}
export interface operation7390{
   get():MicrosoftGraphGroup
}
export interface operation7391{
   get():MicrosoftGraphOrgContact
}
export interface operation7392{
   get():MicrosoftGraphServicePrincipal
}
export interface operation7393{
   get():MicrosoftGraphUser
}
export interface operation7394{
   get():ODataCountResponse
}
export interface operation7395{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation7396{
   get():ODataCountResponse
}
export interface operation7397{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation7398{
   get():ODataCountResponse
}
export interface operation7399{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation7400{
   get():ODataCountResponse
}
export interface operation7401{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation7402{
   get():ODataCountResponse
}
export interface operation7403{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation7404{
   get():ODataCountResponse
}
export interface operation7405{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation7406{
   get():ODataCountResponse
}
export interface operation7407{
   get():MicrosoftGraphMessageCollectionResponse
   post(requestBody:MicrosoftGraphMessage):MicrosoftGraphMessage
}
export interface operation7408{
   get():MicrosoftGraphMessage
   patch(requestBody:MicrosoftGraphMessage):"Success"
   delete():"Success"
}
export interface operation7409{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7410{
   get():MicrosoftGraphAttachmentCollectionResponse
   post(requestBody:MicrosoftGraphAttachment):MicrosoftGraphAttachment
}
export interface operation7411{
   get():MicrosoftGraphAttachment
   patch(requestBody:MicrosoftGraphAttachment):"Success"
   delete():"Success"
}
export interface operation7412{
   get():ODataCountResponse
}
export interface operation7413{
   post(requestBody:{AttachmentItem?: {attachmentType?: MicrosoftGraphAttachmentType,contentId?: string,contentType?: string,isInline?: boolean,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation7414{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation7415{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation7416{
   get():ODataCountResponse
}
export interface operation7417{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation7418{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation7419{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation7420{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):{}
}
export interface operation7421{
   post(requestBody:{ToRecipients?: MicrosoftGraphRecipient[],Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation7422{
   post(requestBody:{DestinationId?: string,}):{}
}
export interface operation7423{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation7424{
   post(requestBody:{Message?: MicrosoftGraphMessage,Comment?: string,}):"Success"
}
export interface operation7425{
   post():"Success"
}
export interface operation7426{
   get():MicrosoftGraphMultiValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):MicrosoftGraphMultiValueLegacyExtendedProperty
}
export interface operation7427{
   get():MicrosoftGraphMultiValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphMultiValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7428{
   get():ODataCountResponse
}
export interface operation7429{
   get():MicrosoftGraphSingleValueLegacyExtendedPropertyCollectionResponse
   post(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):MicrosoftGraphSingleValueLegacyExtendedProperty
}
export interface operation7430{
   get():MicrosoftGraphSingleValueLegacyExtendedProperty
   patch(requestBody:MicrosoftGraphSingleValueLegacyExtendedProperty):"Success"
   delete():"Success"
}
export interface operation7431{
   get():ODataCountResponse
}
export interface operation7432{
   get():ODataCountResponse
}
export interface operation7433{
   get():{value?: MicrosoftGraphMessage[],}
}
export interface operation7434{
   post(requestBody:{addLicenses?: {disabledPlans?: string[],skuId?: string,"@odata.type"?: string,},removeLicenses?: string[],}):{}
}
export interface operation7435{
   post(requestBody:{currentPassword?: string,newPassword?: string,}):"Success"
}
export interface operation7436{
   post(requestBody:{groupIds?: string[],}):{value?: string[],}
}
export interface operation7437{
   post(requestBody:{ids?: string[],}):{value?: string[],}
}
export interface operation7438{
   post(requestBody:{storageLocation?: string,}):"Success"
}
export interface operation7439{
   post(requestBody:{attendees?: MicrosoftGraphAttendeeBase[],locationConstraint?: MicrosoftGraphLocationConstraint,timeConstraint?: MicrosoftGraphTimeConstraint,meetingDuration?: string,maxCandidates?: number,isOrganizerOptional?: boolean,returnSuggestionReasons?: boolean,minimumAttendeePercentage?: number | string,}):{}
}
export interface operation7440{
   post(requestBody:{EmailAddresses?: string[],MailTipsOptions?: MicrosoftGraphMailTipsType,}):{value?: {automaticReplies?: MicrosoftGraphAutomaticRepliesMailTips,customMailTip?: string,deliveryRestricted?: boolean,emailAddress?: MicrosoftGraphEmailAddress,error?: MicrosoftGraphMailTipsError,externalMemberCount?: number,isModerated?: boolean,mailboxFull?: boolean,maxMessageSize?: number,recipientScope?: MicrosoftGraphRecipientScopeType,recipientSuggestions?: MicrosoftGraphRecipient[],totalMemberCount?: number,"@odata.type"?: string,},}
}
export interface operation7441{
   get():{value?: MicrosoftGraphManagedAppDiagnosticStatus[],}
}
export interface operation7442{
   get():{value?: MicrosoftGraphManagedAppPolicy[],}
}
export interface operation7443{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation7444{
   post(requestBody:{securityEnabledOnly?: boolean,}):{value?: string[],}
}
export interface operation7445{
   get():{value?: {changeKey?: string,eventEndTime?: MicrosoftGraphDateTimeTimeZone,eventId?: string,eventLocation?: MicrosoftGraphLocation,eventStartTime?: MicrosoftGraphDateTimeTimeZone,eventSubject?: string,eventWebLink?: string,reminderFireTime?: MicrosoftGraphDateTimeTimeZone,"@odata.type"?: string,},}
}
export interface operation7446{
   post():"Success"
}
export interface operation7447{
   post():{}
}
export interface operation7448{
   post():{}
}
export interface operation7449{
   post():{value?: boolean,}
}
export interface operation7450{
   post(requestBody:{Message?: MicrosoftGraphMessage,SaveToSentItems?: boolean,}):"Success"
}
export interface operation7451{
   post(requestBody:{InputIds?: string[],TargetIdType?: string,SourceIdType?: string,}):{value?: {errorDetails?: MicrosoftGraphGenericError,sourceId?: string,targetId?: string,"@odata.type"?: string,},}
}
export interface operation7452{
   post(requestBody:{deviceTag?: string,}):"Success"
}
export interface operation7453{
   get():MicrosoftGraphOAuth2PermissionGrantCollectionResponse
}
export interface operation7454{
   get():MicrosoftGraphOAuth2PermissionGrant
}
export interface operation7455{
   get():ODataCountResponse
}
export interface operation7456{
   get():MicrosoftGraphOnenote
   patch(requestBody:MicrosoftGraphOnenote):"Success"
   delete():"Success"
}
export interface operation7457{
   get():MicrosoftGraphNotebookCollectionResponse
   post(requestBody:MicrosoftGraphNotebook):MicrosoftGraphNotebook
}
export interface operation7458{
   get():MicrosoftGraphNotebook
   patch(requestBody:MicrosoftGraphNotebook):"Success"
   delete():"Success"
}
export interface operation7459{
   post(requestBody:{groupId?: string,renameAs?: string,notebookFolder?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7460{
   get():MicrosoftGraphSectionGroupCollectionResponse
   post(requestBody:MicrosoftGraphSectionGroup):MicrosoftGraphSectionGroup
}
export interface operation7461{
   get():MicrosoftGraphSectionGroup
   patch(requestBody:MicrosoftGraphSectionGroup):"Success"
   delete():"Success"
}
export interface operation7462{
   get():MicrosoftGraphNotebook
}
export interface operation7463{
   get():MicrosoftGraphSectionGroup
}
export interface operation7464{
   get():MicrosoftGraphSectionGroupCollectionResponse
}
export interface operation7465{
   get():MicrosoftGraphSectionGroup
}
export interface operation7466{
   get():ODataCountResponse
}
export interface operation7467{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation7468{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation7469{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7470{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7471{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation7472{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation7473{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7474{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7475{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation7476{
   get():{}
}
export interface operation7477{
   get():MicrosoftGraphNotebook
}
export interface operation7478{
   get():MicrosoftGraphOnenoteSection
}
export interface operation7479{
   get():ODataCountResponse
}
export interface operation7480{
   get():MicrosoftGraphNotebook
}
export interface operation7481{
   get():MicrosoftGraphSectionGroup
}
export interface operation7482{
   get():ODataCountResponse
}
export interface operation7483{
   get():ODataCountResponse
}
export interface operation7484{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation7485{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation7486{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7487{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7488{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation7489{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation7490{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7491{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7492{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation7493{
   get():{}
}
export interface operation7494{
   get():MicrosoftGraphNotebook
}
export interface operation7495{
   get():MicrosoftGraphOnenoteSection
}
export interface operation7496{
   get():ODataCountResponse
}
export interface operation7497{
   get():MicrosoftGraphNotebook
}
export interface operation7498{
   get():MicrosoftGraphSectionGroup
}
export interface operation7499{
   get():ODataCountResponse
}
export interface operation7500{
   get():ODataCountResponse
}
export interface operation7501{
   post(requestBody:{webUrl?: string,}):{}
}
export interface operation7502{
   get():{value?: MicrosoftGraphRecentNotebook[],}
}
export interface operation7503{
   get():MicrosoftGraphOnenoteOperationCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteOperation):MicrosoftGraphOnenoteOperation
}
export interface operation7504{
   get():MicrosoftGraphOnenoteOperation
   patch(requestBody:MicrosoftGraphOnenoteOperation):"Success"
   delete():"Success"
}
export interface operation7505{
   get():ODataCountResponse
}
export interface operation7506{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation7507{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation7508{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7509{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7510{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation7511{
   get():{}
}
export interface operation7512{
   get():MicrosoftGraphNotebook
}
export interface operation7513{
   get():MicrosoftGraphOnenoteSection
}
export interface operation7514{
   get():ODataCountResponse
}
export interface operation7515{
   get():MicrosoftGraphOnenoteResourceCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteResource):MicrosoftGraphOnenoteResource
}
export interface operation7516{
   get():MicrosoftGraphOnenoteResource
   patch(requestBody:MicrosoftGraphOnenoteResource):"Success"
   delete():"Success"
}
export interface operation7517{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7518{
   get():ODataCountResponse
}
export interface operation7519{
   get():MicrosoftGraphSectionGroupCollectionResponse
   post(requestBody:MicrosoftGraphSectionGroup):MicrosoftGraphSectionGroup
}
export interface operation7520{
   get():MicrosoftGraphSectionGroup
   patch(requestBody:MicrosoftGraphSectionGroup):"Success"
   delete():"Success"
}
export interface operation7521{
   get():MicrosoftGraphNotebook
}
export interface operation7522{
   get():MicrosoftGraphSectionGroup
}
export interface operation7523{
   get():MicrosoftGraphSectionGroupCollectionResponse
}
export interface operation7524{
   get():MicrosoftGraphSectionGroup
}
export interface operation7525{
   get():ODataCountResponse
}
export interface operation7526{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation7527{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation7528{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7529{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7530{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation7531{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation7532{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7533{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7534{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation7535{
   get():{}
}
export interface operation7536{
   get():MicrosoftGraphNotebook
}
export interface operation7537{
   get():MicrosoftGraphOnenoteSection
}
export interface operation7538{
   get():ODataCountResponse
}
export interface operation7539{
   get():MicrosoftGraphNotebook
}
export interface operation7540{
   get():MicrosoftGraphSectionGroup
}
export interface operation7541{
   get():ODataCountResponse
}
export interface operation7542{
   get():ODataCountResponse
}
export interface operation7543{
   get():MicrosoftGraphOnenoteSectionCollectionResponse
   post(requestBody:MicrosoftGraphOnenoteSection):MicrosoftGraphOnenoteSection
}
export interface operation7544{
   get():MicrosoftGraphOnenoteSection
   patch(requestBody:MicrosoftGraphOnenoteSection):"Success"
   delete():"Success"
}
export interface operation7545{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7546{
   post(requestBody:{id?: string,groupId?: string,renameAs?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7547{
   get():MicrosoftGraphOnenotePageCollectionResponse
   post(requestBody:MicrosoftGraphOnenotePage):MicrosoftGraphOnenotePage
}
export interface operation7548{
   get():MicrosoftGraphOnenotePage
   patch(requestBody:MicrosoftGraphOnenotePage):"Success"
   delete():"Success"
}
export interface operation7549{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7550{
   post(requestBody:{id?: string,groupId?: string,siteCollectionId?: string,siteId?: string,}):{}
}
export interface operation7551{
   post(requestBody:{commands?: MicrosoftGraphOnenotePatchContentCommand[],}):"Success"
}
export interface operation7552{
   get():{}
}
export interface operation7553{
   get():MicrosoftGraphNotebook
}
export interface operation7554{
   get():MicrosoftGraphOnenoteSection
}
export interface operation7555{
   get():ODataCountResponse
}
export interface operation7556{
   get():MicrosoftGraphNotebook
}
export interface operation7557{
   get():MicrosoftGraphSectionGroup
}
export interface operation7558{
   get():ODataCountResponse
}
export interface operation7559{
   get():MicrosoftGraphOnlineMeetingCollectionResponse
   post(requestBody:MicrosoftGraphOnlineMeeting):MicrosoftGraphOnlineMeeting
}
export interface operation7560{
   get():MicrosoftGraphOnlineMeeting
   patch(requestBody:MicrosoftGraphOnlineMeeting):"Success"
   delete():"Success"
}
export interface operation7561{
   get():MicrosoftGraphMeetingAttendanceReportCollectionResponse
   post(requestBody:MicrosoftGraphMeetingAttendanceReport):MicrosoftGraphMeetingAttendanceReport
}
export interface operation7562{
   get():MicrosoftGraphMeetingAttendanceReport
   patch(requestBody:MicrosoftGraphMeetingAttendanceReport):"Success"
   delete():"Success"
}
export interface operation7563{
   get():MicrosoftGraphAttendanceRecordCollectionResponse
   post(requestBody:MicrosoftGraphAttendanceRecord):MicrosoftGraphAttendanceRecord
}
export interface operation7564{
   get():MicrosoftGraphAttendanceRecord
   patch(requestBody:MicrosoftGraphAttendanceRecord):"Success"
   delete():"Success"
}
export interface operation7565{
   get():ODataCountResponse
}
export interface operation7566{
   get():ODataCountResponse
}
export interface operation7567{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7568{
   get():ODataCountResponse
}
export interface operation7569{
   post(requestBody:{chatInfo?: MicrosoftGraphChatInfo,endDateTime?: string,externalId?: string,participants?: MicrosoftGraphMeetingParticipants,startDateTime?: string,subject?: string,}):{}
}
export interface operation7570{
   get():MicrosoftGraphOutlookUser
   patch(requestBody:MicrosoftGraphOutlookUser):"Success"
   delete():"Success"
}
export interface operation7571{
   get():MicrosoftGraphOutlookCategoryCollectionResponse
   post(requestBody:MicrosoftGraphOutlookCategory):MicrosoftGraphOutlookCategory
}
export interface operation7572{
   get():MicrosoftGraphOutlookCategory
   patch(requestBody:MicrosoftGraphOutlookCategory):"Success"
   delete():"Success"
}
export interface operation7573{
   get():ODataCountResponse
}
export interface operation7574{
   get():{value?: {displayName?: string,locale?: string,"@odata.type"?: string,},}
}
export interface operation7575{
   get():{value?: {alias?: string,displayName?: string,"@odata.type"?: string,},}
}
export interface operation7576{
   get():{value?: {alias?: string,displayName?: string,"@odata.type"?: string,},}
}
export interface operation7577{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation7578{
   get():MicrosoftGraphDirectoryObject
}
export interface operation7579{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation7580{
   get():MicrosoftGraphDevice
}
export interface operation7581{
   get():MicrosoftGraphEndpoint
}
export interface operation7582{
   get():ODataCountResponse
}
export interface operation7583{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation7584{
   get():ODataCountResponse
}
export interface operation7585{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation7586{
   get():ODataCountResponse
}
export interface operation7587{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation7588{
   get():ODataCountResponse
}
export interface operation7589{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation7590{
   get():MicrosoftGraphDirectoryObject
}
export interface operation7591{
   get():MicrosoftGraphApplication
}
export interface operation7592{
   get():MicrosoftGraphGroup
}
export interface operation7593{
   get():MicrosoftGraphServicePrincipal
}
export interface operation7594{
   get():ODataCountResponse
}
export interface operation7595{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation7596{
   get():ODataCountResponse
}
export interface operation7597{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation7598{
   get():ODataCountResponse
}
export interface operation7599{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation7600{
   get():ODataCountResponse
}
export interface operation7601{
   get():MicrosoftGraphPersonCollectionResponse
   post(requestBody:MicrosoftGraphPerson):MicrosoftGraphPerson
}
export interface operation7602{
   get():MicrosoftGraphPerson
   patch(requestBody:MicrosoftGraphPerson):"Success"
   delete():"Success"
}
export interface operation7603{
   get():ODataCountResponse
}
export interface operation7604{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation7605{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7606{
   get():MicrosoftGraphProfilePhotoCollectionResponse
   post(requestBody:MicrosoftGraphProfilePhoto):MicrosoftGraphProfilePhoto
}
export interface operation7607{
   get():MicrosoftGraphProfilePhoto
   patch(requestBody:MicrosoftGraphProfilePhoto):"Success"
   delete():"Success"
}
export interface operation7608{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7609{
   get():ODataCountResponse
}
export interface operation7610{
   get():MicrosoftGraphPlannerUser
   patch(requestBody:MicrosoftGraphPlannerUser):"Success"
   delete():"Success"
}
export interface operation7611{
   get():MicrosoftGraphPlannerPlanCollectionResponse
   post(requestBody:MicrosoftGraphPlannerPlan):MicrosoftGraphPlannerPlan
}
export interface operation7612{
   get():MicrosoftGraphPlannerPlan
   patch(requestBody:MicrosoftGraphPlannerPlan):"Success"
   delete():"Success"
}
export interface operation7613{
   get():MicrosoftGraphPlannerBucketCollectionResponse
   post(requestBody:MicrosoftGraphPlannerBucket):MicrosoftGraphPlannerBucket
}
export interface operation7614{
   get():MicrosoftGraphPlannerBucket
   patch(requestBody:MicrosoftGraphPlannerBucket):"Success"
   delete():"Success"
}
export interface operation7615{
   get():MicrosoftGraphPlannerTaskCollectionResponse
   post(requestBody:MicrosoftGraphPlannerTask):MicrosoftGraphPlannerTask
}
export interface operation7616{
   get():MicrosoftGraphPlannerTask
   patch(requestBody:MicrosoftGraphPlannerTask):"Success"
   delete():"Success"
}
export interface operation7617{
   get():MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation7618{
   get():MicrosoftGraphPlannerBucketTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerBucketTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation7619{
   get():MicrosoftGraphPlannerTaskDetails
   patch(requestBody:MicrosoftGraphPlannerTaskDetails):"Success"
   delete():"Success"
}
export interface operation7620{
   get():MicrosoftGraphPlannerProgressTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerProgressTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation7621{
   get():ODataCountResponse
}
export interface operation7622{
   get():ODataCountResponse
}
export interface operation7623{
   get():MicrosoftGraphPlannerPlanDetails
   patch(requestBody:MicrosoftGraphPlannerPlanDetails):"Success"
   delete():"Success"
}
export interface operation7624{
   get():MicrosoftGraphPlannerTaskCollectionResponse
   post(requestBody:MicrosoftGraphPlannerTask):MicrosoftGraphPlannerTask
}
export interface operation7625{
   get():MicrosoftGraphPlannerTask
   patch(requestBody:MicrosoftGraphPlannerTask):"Success"
   delete():"Success"
}
export interface operation7626{
   get():MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation7627{
   get():MicrosoftGraphPlannerBucketTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerBucketTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation7628{
   get():MicrosoftGraphPlannerTaskDetails
   patch(requestBody:MicrosoftGraphPlannerTaskDetails):"Success"
   delete():"Success"
}
export interface operation7629{
   get():MicrosoftGraphPlannerProgressTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerProgressTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation7630{
   get():ODataCountResponse
}
export interface operation7631{
   get():ODataCountResponse
}
export interface operation7632{
   get():MicrosoftGraphPlannerTaskCollectionResponse
   post(requestBody:MicrosoftGraphPlannerTask):MicrosoftGraphPlannerTask
}
export interface operation7633{
   get():MicrosoftGraphPlannerTask
   patch(requestBody:MicrosoftGraphPlannerTask):"Success"
   delete():"Success"
}
export interface operation7634{
   get():MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerAssignedToTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation7635{
   get():MicrosoftGraphPlannerBucketTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerBucketTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation7636{
   get():MicrosoftGraphPlannerTaskDetails
   patch(requestBody:MicrosoftGraphPlannerTaskDetails):"Success"
   delete():"Success"
}
export interface operation7637{
   get():MicrosoftGraphPlannerProgressTaskBoardTaskFormat
   patch(requestBody:MicrosoftGraphPlannerProgressTaskBoardTaskFormat):"Success"
   delete():"Success"
}
export interface operation7638{
   get():ODataCountResponse
}
export interface operation7639{
   get():MicrosoftGraphPresence
   patch(requestBody:MicrosoftGraphPresence):"Success"
   delete():"Success"
}
export interface operation7640{
   post(requestBody:{sessionId?: string,}):"Success"
}
export interface operation7641{
   post():"Success"
}
export interface operation7642{
   post(requestBody:{sessionId?: string,availability?: string,activity?: string,expirationDuration?: string,}):"Success"
}
export interface operation7643{
   post(requestBody:{availability?: string,activity?: string,expirationDuration?: string,}):"Success"
}
export interface operation7644{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation7645{
   get():MicrosoftGraphDirectoryObject
}
export interface operation7646{
   get():MicrosoftGraphAppRoleAssignment
}
export interface operation7647{
   get():MicrosoftGraphDevice
}
export interface operation7648{
   get():MicrosoftGraphEndpoint
}
export interface operation7649{
   get():ODataCountResponse
}
export interface operation7650{
   get():MicrosoftGraphAppRoleAssignmentCollectionResponse
}
export interface operation7651{
   get():ODataCountResponse
}
export interface operation7652{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation7653{
   get():ODataCountResponse
}
export interface operation7654{
   get():MicrosoftGraphEndpointCollectionResponse
}
export interface operation7655{
   get():ODataCountResponse
}
export interface operation7656{
   get():MicrosoftGraphScopedRoleMembershipCollectionResponse
   post(requestBody:MicrosoftGraphScopedRoleMembership):MicrosoftGraphScopedRoleMembership
}
export interface operation7657{
   get():MicrosoftGraphScopedRoleMembership
   patch(requestBody:MicrosoftGraphScopedRoleMembership):"Success"
   delete():"Success"
}
export interface operation7658{
   get():ODataCountResponse
}
export interface operation7659{
   get():MicrosoftGraphUserSettings
   patch(requestBody:MicrosoftGraphUserSettings):"Success"
   delete():"Success"
}
export interface operation7660{
   get():MicrosoftGraphShiftPreferences
   patch(requestBody:MicrosoftGraphShiftPreferences):"Success"
   delete():"Success"
}
export interface operation7661{
   get():MicrosoftGraphUserTeamwork
   patch(requestBody:MicrosoftGraphUserTeamwork):"Success"
   delete():"Success"
}
export interface operation7662{
   get():MicrosoftGraphAssociatedTeamInfoCollectionResponse
   post(requestBody:MicrosoftGraphAssociatedTeamInfo):MicrosoftGraphAssociatedTeamInfo
}
export interface operation7663{
   get():MicrosoftGraphAssociatedTeamInfo
   patch(requestBody:MicrosoftGraphAssociatedTeamInfo):"Success"
   delete():"Success"
}
export interface operation7664{
   get():ODataCountResponse
}
export interface operation7665{
   get():MicrosoftGraphUserScopeTeamsAppInstallationCollectionResponse
   post(requestBody:MicrosoftGraphUserScopeTeamsAppInstallation):MicrosoftGraphUserScopeTeamsAppInstallation
}
export interface operation7666{
   get():MicrosoftGraphUserScopeTeamsAppInstallation
   patch(requestBody:MicrosoftGraphUserScopeTeamsAppInstallation):"Success"
   delete():"Success"
}
export interface operation7667{
   get():MicrosoftGraphChat
}
export interface operation7668{
   get():ODataCountResponse
}
export interface operation7669{
   post(requestBody:{topic?: MicrosoftGraphTeamworkActivityTopic,activityType?: string,chainId?: number,previewText?: MicrosoftGraphItemBody,templateParameters?: MicrosoftGraphKeyValuePair[],}):"Success"
}
export interface operation7670{
   get():MicrosoftGraphTodo
   patch(requestBody:MicrosoftGraphTodo):"Success"
   delete():"Success"
}
export interface operation7671{
   get():MicrosoftGraphTodoTaskListCollectionResponse
   post(requestBody:MicrosoftGraphTodoTaskList):MicrosoftGraphTodoTaskList
}
export interface operation7672{
   get():MicrosoftGraphTodoTaskList
   patch(requestBody:MicrosoftGraphTodoTaskList):"Success"
   delete():"Success"
}
export interface operation7673{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation7674{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation7675{
   get():ODataCountResponse
}
export interface operation7676{
   get():MicrosoftGraphTodoTaskCollectionResponse
   post(requestBody:MicrosoftGraphTodoTask):MicrosoftGraphTodoTask
}
export interface operation7677{
   get():MicrosoftGraphTodoTask
   patch(requestBody:MicrosoftGraphTodoTask):"Success"
   delete():"Success"
}
export interface operation7678{
   get():MicrosoftGraphAttachmentBaseCollectionResponse
   post(requestBody:MicrosoftGraphAttachmentBase):MicrosoftGraphAttachmentBase
}
export interface operation7679{
   get():MicrosoftGraphAttachmentBase
   patch(requestBody:MicrosoftGraphAttachmentBase):"Success"
   delete():"Success"
}
export interface operation7680{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7681{
   get():ODataCountResponse
}
export interface operation7682{
   post(requestBody:{attachmentInfo?: {attachmentType?: MicrosoftGraphAttachmentType,contentType?: string,name?: string,size?: number,"@odata.type"?: string,},}):{}
}
export interface operation7683{
   get():MicrosoftGraphAttachmentSessionCollectionResponse
   post(requestBody:MicrosoftGraphAttachmentSession):MicrosoftGraphAttachmentSession
}
export interface operation7684{
   get():MicrosoftGraphAttachmentSession
   patch(requestBody:MicrosoftGraphAttachmentSession):"Success"
   delete():"Success"
}
export interface operation7685{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7686{
   get():ODataCountResponse
}
export interface operation7687{
   get():MicrosoftGraphChecklistItemCollectionResponse
   post(requestBody:MicrosoftGraphChecklistItem):MicrosoftGraphChecklistItem
}
export interface operation7688{
   get():MicrosoftGraphChecklistItem
   patch(requestBody:MicrosoftGraphChecklistItem):"Success"
   delete():"Success"
}
export interface operation7689{
   get():ODataCountResponse
}
export interface operation7690{
   get():MicrosoftGraphExtensionCollectionResponse
   post(requestBody:MicrosoftGraphExtension):MicrosoftGraphExtension
}
export interface operation7691{
   get():MicrosoftGraphExtension
   patch(requestBody:MicrosoftGraphExtension):"Success"
   delete():"Success"
}
export interface operation7692{
   get():ODataCountResponse
}
export interface operation7693{
   get():MicrosoftGraphLinkedResourceCollectionResponse
   post(requestBody:MicrosoftGraphLinkedResource):MicrosoftGraphLinkedResource
}
export interface operation7694{
   get():MicrosoftGraphLinkedResource
   patch(requestBody:MicrosoftGraphLinkedResource):"Success"
   delete():"Success"
}
export interface operation7695{
   get():ODataCountResponse
}
export interface operation7696{
   get():ODataCountResponse
}
export interface operation7697{
   get():{value?: MicrosoftGraphTodoTask[],}
}
export interface operation7698{
   get():ODataCountResponse
}
export interface operation7699{
   get():{value?: MicrosoftGraphTodoTaskList[],}
}
export interface operation7700{
   get():MicrosoftGraphDirectoryObjectCollectionResponse
}
export interface operation7701{
   get():MicrosoftGraphDirectoryObject
}
export interface operation7702{
   get():MicrosoftGraphApplication
}
export interface operation7703{
   get():MicrosoftGraphDevice
}
export interface operation7704{
   get():MicrosoftGraphGroup
}
export interface operation7705{
   get():MicrosoftGraphOrgContact
}
export interface operation7706{
   get():MicrosoftGraphServicePrincipal
}
export interface operation7707{
   get():MicrosoftGraphUser
}
export interface operation7708{
   get():ODataCountResponse
}
export interface operation7709{
   get():MicrosoftGraphApplicationCollectionResponse
}
export interface operation7710{
   get():ODataCountResponse
}
export interface operation7711{
   get():MicrosoftGraphDeviceCollectionResponse
}
export interface operation7712{
   get():ODataCountResponse
}
export interface operation7713{
   get():MicrosoftGraphGroupCollectionResponse
}
export interface operation7714{
   get():ODataCountResponse
}
export interface operation7715{
   get():MicrosoftGraphOrgContactCollectionResponse
}
export interface operation7716{
   get():ODataCountResponse
}
export interface operation7717{
   get():MicrosoftGraphServicePrincipalCollectionResponse
}
export interface operation7718{
   get():ODataCountResponse
}
export interface operation7719{
   get():MicrosoftGraphUserCollectionResponse
}
export interface operation7720{
   get():ODataCountResponse
}
export interface operation7721{
   get():ODataCountResponse
}
export interface operation7722{
   get():{value?: MicrosoftGraphUser[],}
}
export interface operation7723{
   post(requestBody:{isSyncedFromOnPremises?: boolean,}):{value?: MicrosoftGraphExtensionProperty[],}
}
export interface operation7724{
   post(requestBody:{ids?: string[],types?: string[],}):{value?: MicrosoftGraphDirectoryObject[],}
}
export interface operation7725{
   post(requestBody:{entityType?: string,displayName?: string,mailNickname?: string,onBehalfOfUserId?: string,}):"Success"
}
export interface operation7726{
   get():MicrosoftGraphDriveItemCollectionResponse
   post(requestBody:MicrosoftGraphDriveItem):MicrosoftGraphDriveItem
}
export interface operation7727{
   get():MicrosoftGraphDriveItem
   patch(requestBody:MicrosoftGraphDriveItem):"Success"
   delete():"Success"
}
export interface operation7728{
   get():MicrosoftGraphItemAnalytics
}
export interface operation7729{
   get():MicrosoftGraphDriveItemCollectionResponse
}
export interface operation7730{
   get():MicrosoftGraphDriveItem
}
export interface operation7731{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7732{
   get():ODataCountResponse
}
export interface operation7733{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7734{
   get():MicrosoftGraphListItem
   patch(requestBody:MicrosoftGraphListItem):"Success"
   delete():"Success"
}
export interface operation7735{
   get():MicrosoftGraphItemAnalytics
}
export interface operation7736{
   get():MicrosoftGraphDocumentSetVersionCollectionResponse
   post(requestBody:MicrosoftGraphDocumentSetVersion):MicrosoftGraphDocumentSetVersion
}
export interface operation7737{
   get():MicrosoftGraphDocumentSetVersion
   patch(requestBody:MicrosoftGraphDocumentSetVersion):"Success"
   delete():"Success"
}
export interface operation7738{
   post():"Success"
}
export interface operation7739{
   get():ODataCountResponse
}
export interface operation7740{
   get():MicrosoftGraphDriveItem
}
export interface operation7741{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7742{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation7743{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation7744{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation7745{
   get():MicrosoftGraphListItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphListItemVersion):MicrosoftGraphListItemVersion
}
export interface operation7746{
   get():MicrosoftGraphListItemVersion
   patch(requestBody:MicrosoftGraphListItemVersion):"Success"
   delete():"Success"
}
export interface operation7747{
   get():MicrosoftGraphFieldValueSet
   patch(requestBody:MicrosoftGraphFieldValueSet):"Success"
   delete():"Success"
}
export interface operation7748{
   post():"Success"
}
export interface operation7749{
   get():ODataCountResponse
}
export interface operation7750{
   post(requestBody:{checkInAs?: string,comment?: string,}):"Success"
}
export interface operation7751{
   post():"Success"
}
export interface operation7752{
   post(requestBody:{name?: string,parentReference?: MicrosoftGraphItemReference,}):{}
}
export interface operation7753{
   post(requestBody:{type?: string,scope?: string,expirationDateTime?: string,password?: string,message?: string,retainInheritedPermissions?: boolean,}):{}
}
export interface operation7754{
   post(requestBody:{item?: MicrosoftGraphDriveItemUploadableProperties,}):{}
}
export interface operation7755{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation7756{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation7757{
   post():{}
}
export interface operation7758{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation7759{
   get():{value?: MicrosoftGraphItemActivityStat[],}
}
export interface operation7760{
   post(requestBody:{requireSignIn?: boolean,roles?: string[],sendInvitation?: boolean,message?: string,recipients?: {alias?: string,email?: string,objectId?: string,"@odata.type"?: string,},retainInheritedPermissions?: boolean,expirationDateTime?: string,password?: string,}):{value?: MicrosoftGraphPermission[],}
}
export interface operation7761{
   post(requestBody:{page?: string,zoom?: number | string,}):{}
}
export interface operation7762{
   post(requestBody:{parentReference?: MicrosoftGraphItemReference,name?: string,}):{}
}
export interface operation7763{
   get():{value?: MicrosoftGraphDriveItem[],}
}
export interface operation7764{
   post():"Success"
}
export interface operation7765{
   post(requestBody:{challengeToken?: string,password?: string,}):"Success"
}
export interface operation7766{
   get():MicrosoftGraphPermissionCollectionResponse
   post(requestBody:MicrosoftGraphPermission):MicrosoftGraphPermission
}
export interface operation7767{
   get():MicrosoftGraphPermission
   patch(requestBody:MicrosoftGraphPermission):"Success"
   delete():"Success"
}
export interface operation7768{
   post(requestBody:{roles?: string[],recipients?: MicrosoftGraphDriveRecipient[],}):{value?: MicrosoftGraphPermission[],}
}
export interface operation7769{
   get():ODataCountResponse
}
export interface operation7770{
   get():MicrosoftGraphSubscriptionCollectionResponse
   post(requestBody:MicrosoftGraphSubscription):MicrosoftGraphSubscription
}
export interface operation7771{
   get():MicrosoftGraphSubscription
   patch(requestBody:MicrosoftGraphSubscription):"Success"
   delete():"Success"
}
export interface operation7772{
   post():"Success"
}
export interface operation7773{
   get():ODataCountResponse
}
export interface operation7774{
   get():MicrosoftGraphThumbnailSetCollectionResponse
   post(requestBody:MicrosoftGraphThumbnailSet):MicrosoftGraphThumbnailSet
}
export interface operation7775{
   get():MicrosoftGraphThumbnailSet
   patch(requestBody:MicrosoftGraphThumbnailSet):"Success"
   delete():"Success"
}
export interface operation7776{
   get():ODataCountResponse
}
export interface operation7777{
   get():MicrosoftGraphDriveItemVersionCollectionResponse
   post(requestBody:MicrosoftGraphDriveItemVersion):MicrosoftGraphDriveItemVersion
}
export interface operation7778{
   get():MicrosoftGraphDriveItemVersion
   patch(requestBody:MicrosoftGraphDriveItemVersion):"Success"
   delete():"Success"
}
export interface operation7779{
   get():{}
   put(requestBody:{}):"Success"
}
export interface operation7780{
   post():"Success"
}
export interface operation7781{
   get():ODataCountResponse
}
export interface operation7782{
   get():ODataCountResponse
}
